{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"file":"url.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/lib/url.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nexport type Params = Partial<Record<string, string | number>>;\n\nexport function pathToFunc(\n  pathPattern: string,\n  options?: { charEncoding?: \"percent\" | \"none\" },\n): (params?: Params) => string {\n  const paramRE = /\\{([a-zA-Z0-9_]+?)\\}/g;\n\n  return function buildURLPath(params: Record<string, unknown> = {}): string {\n    return pathPattern.replace(paramRE, function (_, placeholder) {\n      if (!hasOwn.call(params, placeholder)) {\n        throw new Error(`Parameter '${placeholder}' is required`);\n      }\n\n      const value = params[placeholder];\n      if (typeof value !== \"string\" && typeof value !== \"number\") {\n        throw new Error(\n          `Parameter '${placeholder}' must be a string or number`,\n        );\n      }\n\n      return options?.charEncoding === \"percent\"\n        ? encodeURIComponent(`${value}`)\n        : `${value}`;\n    });\n  };\n}\n"],"names":[],"mappings":";AAAA;;GAEG;;;;AAEH,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC;AAI/C,SAAgB,UAAU,CACxB,WAAmB,EACnB,OAA+C;IAE/C,MAAM,OAAO,GAAG,uBAAuB,CAAC;IAExC,OAAO,SAAS,YAAY,CAAC,SAAkC,CAAA,CAAE;QAC/D,OAAO,WAAW,CAAC,OAAO,CAAC,OAAO,EAAE,SAAU,CAAC,EAAE,WAAW;YAC1D,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,WAAW,CAAC,EAAE,CAAC;gBACtC,MAAM,IAAI,KAAK,CAAC,CAAA,WAAA,EAAc,WAAW,CAAA,aAAA,CAAe,CAAC,CAAC;YAC5D,CAAC;YAED,MAAM,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;YAClC,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;gBAC3D,MAAM,IAAI,KAAK,CACb,CAAA,WAAA,EAAc,WAAW,CAAA,4BAAA,CAA8B,CACxD,CAAC;YACJ,CAAC;YAED,OAAO,CAAA,OAAO,KAAA,QAAP,OAAO,KAAA,KAAA,IAAA,KAAA,IAAP,OAAO,CAAE,YAAY,MAAK,SAAS,GACtC,kBAAkB,CAAC,GAAG,KAAK,EAAE,CAAC,GAC9B,GAAG,KAAK,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;AACJ,CAAC;AAxBD,QAAA,UAAA,GAAA,WAwBC","ignoreList":[0]}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"file":"config.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/lib/config.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as shared from \"../sdk/models/shared/index.js\";\nimport { HTTPClient } from \"./http.js\";\nimport { Logger } from \"./logger.js\";\nimport { RetryConfig } from \"./retries.js\";\nimport { Params, pathToFunc } from \"./url.js\";\n\n/**\n * Serverless SaaS API\n */\nexport const ServerSaasApi = \"saas-api\";\n/**\n * Hosted API Free\n */\nexport const ServerFreeApi = \"free-api\";\n/**\n * Development server\n */\nexport const ServerDevelopment = \"development\";\n/**\n * Contains the list of servers available to the SDK\n */\nexport const ServerList = {\n  [ServerSaasApi]: \"https://api.unstructuredapp.io\",\n  [ServerFreeApi]: \"https://api.unstructured.io\",\n  [ServerDevelopment]: \"http://localhost:8000\",\n} as const;\n\nexport type SDKOptions = {\n  /**\n   * The security details required to authenticate the SDK\n   */\n  security?: shared.Security | (() => Promise<shared.Security>);\n\n  httpClient?: HTTPClient;\n  /**\n   * Allows overriding the default server used by the SDK\n   */\n  server?: keyof typeof ServerList;\n  /**\n   * Allows overriding the default server URL used by the SDK\n   */\n  serverURL?: string;\n  /**\n   * Allows overriding the default retry config used by the SDK\n   */\n  retryConfig?: RetryConfig;\n  timeoutMs?: number;\n  debugLogger?: Logger;\n};\n\nexport function serverURLFromOptions(options: SDKOptions): URL | null {\n  let serverURL = options.serverURL;\n\n  const params: Params = {};\n\n  if (!serverURL) {\n    const server = options.server ?? ServerSaasApi;\n    serverURL = ServerList[server] || \"\";\n  }\n\n  const u = pathToFunc(serverURL)(params);\n  return new URL(u);\n}\n\nexport const SDK_METADATA = {\n  language: \"typescript\",\n  openapiDocVersion: \"1.0.51\",\n  sdkVersion: \"0.18.2\",\n  genVersion: \"2.438.15\",\n  userAgent:\n    \"speakeasy-sdk/typescript 0.18.2 2.438.15 1.0.51 unstructured-client\",\n} as const;\n"],"names":[],"mappings":";AAAA;;GAEG;;;;AAMH,MAAA,+BAA8C;AAE9C;;GAEG,CACU,QAAA,aAAa,GAAG,UAAU,CAAC;AACxC;;GAEG,CACU,QAAA,aAAa,GAAG,UAAU,CAAC;AACxC;;GAEG,CACU,QAAA,iBAAiB,GAAG,aAAa,CAAC;AAC/C;;GAEG,CACU,QAAA,UAAU,GAAG;IACxB,CAAC,QAAA,aAAa,CAAC,EAAE,gCAAgC;IACjD,CAAC,QAAA,aAAa,CAAC,EAAE,6BAA6B;IAC9C,CAAC,QAAA,iBAAiB,CAAC,EAAE,uBAAuB;CACpC,CAAC;AAyBX,SAAgB,oBAAoB,CAAC,OAAmB;;IACtD,IAAI,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;IAElC,MAAM,MAAM,GAAW,CAAA,CAAE,CAAC;IAE1B,IAAI,CAAC,SAAS,EAAE,CAAC;QACf,MAAM,MAAM,GAAG,CAAA,KAAA,OAAO,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,QAAA,aAAa,CAAC;QAC/C,SAAS,GAAG,QAAA,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IACvC,CAAC;IAED,MAAM,CAAC,GAAG,CAAA,GAAA,SAAA,UAAU,EAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC;IACxC,OAAO,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC;AAZD,QAAA,oBAAA,GAAA,qBAYC;AAEY,QAAA,YAAY,GAAG;IAC1B,QAAQ,EAAE,YAAY;IACtB,iBAAiB,EAAE,QAAQ;IAC3B,UAAU,EAAE,QAAQ;IACpB,UAAU,EAAE,UAAU;IACtB,SAAS,EACP,qEAAqE;CAC/D,CAAC","ignoreList":[0]}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"file":"files.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/lib/files.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\n/**\n * Consumes a stream and returns a concatenated array buffer. Useful in\n * situations where we need to read the whole file because it forms part of a\n * larger payload containing other fields, and we can't modify the underlying\n * request structure.\n */\nexport async function readableStreamToArrayBuffer(\n  readable: ReadableStream<Uint8Array>,\n): Promise<ArrayBuffer> {\n  const reader = readable.getReader();\n  const chunks: Uint8Array[] = [];\n\n  let totalLength = 0;\n  let done = false;\n\n  while (!done) {\n    const { value, done: doneReading } = await reader.read();\n\n    if (doneReading) {\n      done = true;\n    } else {\n      chunks.push(value);\n      totalLength += value.length;\n    }\n  }\n\n  const concatenatedChunks = new Uint8Array(totalLength);\n  let offset = 0;\n\n  for (const chunk of chunks) {\n    concatenatedChunks.set(chunk, offset);\n    offset += chunk.length;\n  }\n\n  return concatenatedChunks.buffer;\n}\n"],"names":[],"mappings":";AAAA;;GAEG;;;;AAEH;;;;;GAKG,CACI,KAAK,UAAU,2BAA2B,CAC/C,QAAoC;IAEpC,MAAM,MAAM,GAAG,QAAQ,CAAC,SAAS,EAAE,CAAC;IACpC,MAAM,MAAM,GAAiB,EAAE,CAAC;IAEhC,IAAI,WAAW,GAAG,CAAC,CAAC;IACpB,IAAI,IAAI,GAAG,KAAK,CAAC;IAEjB,MAAO,CAAC,IAAI,CAAE,CAAC;QACb,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE,GAAG,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QAEzD,IAAI,WAAW,EAAE,CAAC;YAChB,IAAI,GAAG,IAAI,CAAC;QACd,CAAC,MAAM,CAAC;YACN,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACnB,WAAW,IAAI,KAAK,CAAC,MAAM,CAAC;QAC9B,CAAC;IACH,CAAC;IAED,MAAM,kBAAkB,GAAG,IAAI,UAAU,CAAC,WAAW,CAAC,CAAC;IACvD,IAAI,MAAM,GAAG,CAAC,CAAC;IAEf,KAAK,MAAM,KAAK,IAAI,MAAM,CAAE,CAAC;QAC3B,kBAAkB,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACtC,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC;IACzB,CAAC;IAED,OAAO,kBAAkB,CAAC,MAAM,CAAC;AACnC,CAAC;AA7BD,QAAA,2BAAA,GAAA,4BA6BC","ignoreList":[0]}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"file":"LoggerHook.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/hooks/custom/LoggerHook.ts"],"sourcesContent":["import { AfterErrorContext, AfterErrorHook, AfterSuccessContext, AfterSuccessHook } from \"../types.js\";\n\n/**\n * Represents a hook that logs status and information that the request will be retried\n * after encountering a 5xx error.\n */\nexport class LoggerHook implements AfterSuccessHook, AfterErrorHook {\n  private retriesCounter: Map<string, number> = new Map();\n\n  /**\n   * Log retries to give users visibility into requests.\n   * @param response - The response object received from the server.\n   * @param error - The error object representing the encountered error.\n   * @param operationID - The unique identifier for the operation being logged.\n   */\n  private logRetries(\n    response: Response | null,\n    error: unknown,\n    operationID: string\n  ): void {\n    if (response && response.status >= 500) {\n      console.warn(\n          \"Failed to process a request due to API server error with status code %d. \" +\n          \"Attempting retry number %d after sleep.\",\n          response.status,\n          this.retriesCounter.get(operationID)\n      );\n      if (response.statusText) {\n        console.warn(\"Server message - %s\", response.statusText);\n      }\n    } else if (error) {\n      console.info(\n          `Failed to process a request due to connection error - ${(error as Error).message}. ` +\n          `Attempting retry number ${this.retriesCounter.get(operationID)} after sleep.`\n      );\n    }\n  }\n\n  /**\n   * Handles successful responses, resetting the retry counter for the operation.\n   * Logs a success message indicating that the document was successfully partitioned.\n   * @param hookCtx - The context object containing information about the request.\n   * @param response - The response object received from the server.\n   * @returns The response object.\n   */\n  afterSuccess(hookCtx: AfterSuccessContext, response: Response): Response {\n    this.retriesCounter.delete(hookCtx.operationID);\n    // NOTE: In case of split page partition this means - at least one of the splits was partitioned successfully\n    return response;\n  }\n\n  /**\n   * Executes after an error occurs during a request.\n   * @param hookCtx - The context object containing information about the request.\n   * @param response - The response object received from the server.\n   * @param error - The error object representing the encountered error.\n   * @returns An object containing the updated response and error.\n   */\n  afterError(\n    hookCtx: AfterErrorContext,\n    response: Response | null,\n    error: unknown\n  ): { response: Response | null; error: unknown } {\n    const currentCount = this.retriesCounter.get(hookCtx.operationID) || 0;\n    this.retriesCounter.set(hookCtx.operationID, currentCount + 1);\n    this.logRetries(response, error, hookCtx.operationID);\n\n    if (response && response.status === 200) {\n      return { response, error };\n    }\n    console.error(\"Failed to partition the document.\");\n    if (response) {\n      console.error(`Server responded with ${response.status} - ${response.statusText}`);\n    }\n    if (error) {\n      console.error(`Following error occurred - ${(error as Error).message}`);\n    }\n    return { response, error };\n  }\n}\n"],"names":[],"mappings":";;;;;AAEA;;;GAGG,CACH,MAAa,UAAU;IAAvB,aAAA;QACU,IAAA,CAAA,cAAc,GAAwB,IAAI,GAAG,EAAE,CAAC;IAwE1D,CAAC;IAtEC;;;;;OAKG,CACK,UAAU,CAChB,QAAyB,EACzB,KAAc,EACd,WAAmB,EAAA;QAEnB,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,IAAI,GAAG,EAAE,CAAC;YACvC,OAAO,CAAC,IAAI,CACR,2EAA2E,GAC3E,yCAAyC,EACzC,QAAQ,CAAC,MAAM,EACf,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,WAAW,CAAC,CACvC,CAAC;YACF,IAAI,QAAQ,CAAC,UAAU,EAAE,CAAC;gBACxB,OAAO,CAAC,IAAI,CAAC,qBAAqB,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC;YAC3D,CAAC;QACH,CAAC,MAAM,IAAI,KAAK,EAAE,CAAC;YACjB,OAAO,CAAC,IAAI,CACR,CAAA,sDAAA,EAA0D,KAAe,CAAC,OAAO,CAAA,EAAA,CAAI,GACrF,CAAA,wBAAA,EAA2B,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,WAAW,CAAC,CAAA,aAAA,CAAe,CACjF,CAAC;QACJ,CAAC;IACH,CAAC;IAED;;;;;;OAMG,CACH,YAAY,CAAC,OAA4B,EAAE,QAAkB,EAAA;QAC3D,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAChD,6GAA6G;QAC7G,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED;;;;;;OAMG,CACH,UAAU,CACR,OAA0B,EAC1B,QAAyB,EACzB,KAAc,EAAA;QAEd,MAAM,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACvE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,EAAE,YAAY,GAAG,CAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,KAAK,EAAE,OAAO,CAAC,WAAW,CAAC,CAAC;QAEtD,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE,CAAC;YACxC,OAAO;gBAAE,QAAQ;gBAAE,KAAK;YAAA,CAAE,CAAC;QAC7B,CAAC;QACD,OAAO,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;QACnD,IAAI,QAAQ,EAAE,CAAC;YACb,OAAO,CAAC,KAAK,CAAC,CAAA,sBAAA,EAAyB,QAAQ,CAAC,MAAM,CAAA,GAAA,EAAM,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC;QACrF,CAAC;QACD,IAAI,KAAK,EAAE,CAAC;YACV,OAAO,CAAC,KAAK,CAAC,CAAA,2BAAA,EAA+B,KAAe,CAAC,OAAO,EAAE,CAAC,CAAC;QAC1E,CAAC;QACD,OAAO;YAAE,QAAQ;YAAE,KAAK;QAAA,CAAE,CAAC;IAC7B,CAAC;CACF;AAzED,QAAA,UAAA,GAAA,WAyEC","ignoreList":[0]}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"file":"http.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/lib/http.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nexport type Fetcher = (\n  input: RequestInfo | URL,\n  init?: RequestInit,\n) => Promise<Response>;\n\nexport type Awaitable<T> = T | Promise<T>;\n\nconst DEFAULT_FETCHER: Fetcher = (input, init) => {\n  // If input is a Request and init is undefined, Bun will discard the method,\n  // headers, body and other options that were set on the request object.\n  // Node.js and browers would ignore an undefined init value. This check is\n  // therefore needed for interop with Bun.\n  if (init == null) {\n    return fetch(input);\n  } else {\n    return fetch(input, init);\n  }\n};\n\nexport type RequestInput = {\n  /**\n   * The URL the request will use.\n   */\n  url: URL;\n  /**\n   * Options used to create a [`Request`](https://developer.mozilla.org/en-US/docs/Web/API/Request/Request).\n   */\n  options?: RequestInit | undefined;\n};\n\nexport interface HTTPClientOptions {\n  fetcher?: Fetcher;\n}\n\nexport type BeforeRequestHook = (req: Request) => Awaitable<Request | void>;\nexport type RequestErrorHook = (err: unknown, req: Request) => Awaitable<void>;\nexport type ResponseHook = (res: Response, req: Request) => Awaitable<void>;\n\nexport class HTTPClient {\n  private fetcher: Fetcher;\n  private requestHooks: BeforeRequestHook[] = [];\n  private requestErrorHooks: RequestErrorHook[] = [];\n  private responseHooks: ResponseHook[] = [];\n\n  constructor(private options: HTTPClientOptions = {}) {\n    this.fetcher = options.fetcher || DEFAULT_FETCHER;\n  }\n\n  async request(request: Request): Promise<Response> {\n    let req = request;\n    for (const hook of this.requestHooks) {\n      const nextRequest = await hook(req);\n      if (nextRequest) {\n        req = nextRequest;\n      }\n    }\n\n    try {\n      const res = await this.fetcher(req);\n\n      for (const hook of this.responseHooks) {\n        await hook(res, req);\n      }\n\n      return res;\n    } catch (err) {\n      for (const hook of this.requestErrorHooks) {\n        await hook(err, req);\n      }\n\n      throw err;\n    }\n  }\n\n  /**\n   * Registers a hook that is called before a request is made. The hook function\n   * can mutate the request or return a new request. This may be useful to add\n   * additional information to request such as request IDs and tracing headers.\n   */\n  addHook(hook: \"beforeRequest\", fn: BeforeRequestHook): this;\n  /**\n   * Registers a hook that is called when a request cannot be made due to a\n   * network error.\n   */\n  addHook(hook: \"requestError\", fn: RequestErrorHook): this;\n  /**\n   * Registers a hook that is called when a response has been received from the\n   * server.\n   */\n  addHook(hook: \"response\", fn: ResponseHook): this;\n  addHook(\n    ...args:\n      | [hook: \"beforeRequest\", fn: BeforeRequestHook]\n      | [hook: \"requestError\", fn: RequestErrorHook]\n      | [hook: \"response\", fn: ResponseHook]\n  ) {\n    if (args[0] === \"beforeRequest\") {\n      this.requestHooks.push(args[1]);\n    } else if (args[0] === \"requestError\") {\n      this.requestErrorHooks.push(args[1]);\n    } else if (args[0] === \"response\") {\n      this.responseHooks.push(args[1]);\n    } else {\n      throw new Error(`Invalid hook type: ${args[0]}`);\n    }\n    return this;\n  }\n\n  /** Removes a hook that was previously registered with `addHook`. */\n  removeHook(hook: \"beforeRequest\", fn: BeforeRequestHook): this;\n  /** Removes a hook that was previously registered with `addHook`. */\n  removeHook(hook: \"requestError\", fn: RequestErrorHook): this;\n  /** Removes a hook that was previously registered with `addHook`. */\n  removeHook(hook: \"response\", fn: ResponseHook): this;\n  removeHook(\n    ...args:\n      | [hook: \"beforeRequest\", fn: BeforeRequestHook]\n      | [hook: \"requestError\", fn: RequestErrorHook]\n      | [hook: \"response\", fn: ResponseHook]\n  ): this {\n    let target: unknown[];\n    if (args[0] === \"beforeRequest\") {\n      target = this.requestHooks;\n    } else if (args[0] === \"requestError\") {\n      target = this.requestErrorHooks;\n    } else if (args[0] === \"response\") {\n      target = this.responseHooks;\n    } else {\n      throw new Error(`Invalid hook type: ${args[0]}`);\n    }\n\n    const index = target.findIndex((v) => v === args[1]);\n    if (index >= 0) {\n      target.splice(index, 1);\n    }\n\n    return this;\n  }\n\n  clone(): HTTPClient {\n    const child = new HTTPClient(this.options);\n    child.requestHooks = this.requestHooks.slice();\n    child.requestErrorHooks = this.requestErrorHooks.slice();\n    child.responseHooks = this.responseHooks.slice();\n\n    return child;\n  }\n}\n\nexport type StatusCodePredicate = number | string | (number | string)[];\n\n// A semicolon surrounded by optional whitespace characters is used to separate\n// segments in a media type string.\nconst mediaParamSeparator = /\\s*;\\s*/g;\n\nexport function matchContentType(response: Response, pattern: string): boolean {\n  // `*` is a special case which means anything is acceptable.\n  if (pattern === \"*\") {\n    return true;\n  }\n\n  let contentType =\n    response.headers.get(\"content-type\")?.trim() || \"application/octet-stream\";\n  contentType = contentType.toLowerCase();\n\n  const wantParts = pattern.toLowerCase().trim().split(mediaParamSeparator);\n  const [wantType = \"\", ...wantParams] = wantParts;\n\n  if (wantType.split(\"/\").length !== 2) {\n    return false;\n  }\n\n  const gotParts = contentType.split(mediaParamSeparator);\n  const [gotType = \"\", ...gotParams] = gotParts;\n\n  const [type = \"\", subtype = \"\"] = gotType.split(\"/\");\n  if (!type || !subtype) {\n    return false;\n  }\n\n  if (\n    wantType !== \"*/*\" &&\n    gotType !== wantType &&\n    `${type}/*` !== wantType &&\n    `*/${subtype}` !== wantType\n  ) {\n    return false;\n  }\n\n  if (gotParams.length < wantParams.length) {\n    return false;\n  }\n\n  const params = new Set(gotParams);\n  for (const wantParam of wantParams) {\n    if (!params.has(wantParam)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nconst codeRangeRE = new RegExp(\"^[0-9]xx$\", \"i\");\n\nexport function matchStatusCode(\n  response: Response,\n  codes: StatusCodePredicate,\n): boolean {\n  const actual = `${response.status}`;\n  const expectedCodes = Array.isArray(codes) ? codes : [codes];\n  if (!expectedCodes.length) {\n    return false;\n  }\n\n  return expectedCodes.some((ec) => {\n    const code = `${ec}`;\n\n    if (code === \"default\") {\n      return true;\n    }\n\n    if (!codeRangeRE.test(`${code}`)) {\n      return code === actual;\n    }\n\n    const expectFamily = code.charAt(0);\n    if (!expectFamily) {\n      throw new Error(\"Invalid status code range\");\n    }\n\n    const actualFamily = actual.charAt(0);\n    if (!actualFamily) {\n      throw new Error(`Invalid response status code: ${actual}`);\n    }\n\n    return actualFamily === expectFamily;\n  });\n}\n\nexport function matchResponse(\n  response: Response,\n  code: StatusCodePredicate,\n  contentTypePattern: string,\n): boolean {\n  return (\n    matchStatusCode(response, code) &&\n    matchContentType(response, contentTypePattern)\n  );\n}\n\n/**\n * Uses various heurisitics to determine if an error is a connection error.\n */\nexport function isConnectionError(err: unknown): boolean {\n  if (typeof err !== \"object\" || err == null) {\n    return false;\n  }\n\n  // Covers fetch in Deno as well\n  const isBrowserErr =\n    err instanceof TypeError &&\n    err.message.toLowerCase().startsWith(\"failed to fetch\");\n\n  const isNodeErr =\n    err instanceof TypeError &&\n    err.message.toLowerCase().startsWith(\"fetch failed\");\n\n  const isBunErr = \"name\" in err && err.name === \"ConnectionError\";\n\n  const isGenericErr =\n    \"code\" in err &&\n    typeof err.code === \"string\" &&\n    err.code.toLowerCase() === \"econnreset\";\n\n  return isBrowserErr || isNodeErr || isGenericErr || isBunErr;\n}\n\n/**\n * Uses various heurisitics to determine if an error is a timeout error.\n */\nexport function isTimeoutError(err: unknown): boolean {\n  if (typeof err !== \"object\" || err == null) {\n    return false;\n  }\n\n  // Fetch in browser, Node.js, Bun, Deno\n  const isNative = \"name\" in err && err.name === \"TimeoutError\";\n  const isLegacyNative = \"code\" in err && err.code === 23;\n\n  // Node.js HTTP client and Axios\n  const isGenericErr =\n    \"code\" in err &&\n    typeof err.code === \"string\" &&\n    err.code.toLowerCase() === \"econnaborted\";\n\n  return isNative || isLegacyNative || isGenericErr;\n}\n\n/**\n * Uses various heurisitics to determine if an error is a abort error.\n */\nexport function isAbortError(err: unknown): boolean {\n  if (typeof err !== \"object\" || err == null) {\n    return false;\n  }\n\n  // Fetch in browser, Node.js, Bun, Deno\n  const isNative = \"name\" in err && err.name === \"AbortError\";\n  const isLegacyNative = \"code\" in err && err.code === 20;\n\n  // Node.js HTTP client and Axios\n  const isGenericErr =\n    \"code\" in err &&\n    typeof err.code === \"string\" &&\n    err.code.toLowerCase() === \"econnaborted\";\n\n  return isNative || isLegacyNative || isGenericErr;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 393, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 398, "column": 0}, "map": {"version":3,"file":"common.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/hooks/custom/common.ts"],"sourcesContent":["import {HTTPClient} from \"../../lib/http\";\n\n/**\n * Regular expression pattern for matching base hostnames in the form of \"*.unstructuredapp.io\".\n */\nexport const BASE_HOSTNAME_REGEX = /^.*\\.unstructuredapp\\.io$/;\n\n/**\n * The base protocol used for HTTPS requests.\n */\nexport const BASE_PROTOCOL = \"https:\";\n\nexport const PARTITION_FORM_FILES_KEY = \"files\";\nexport const PARTITION_FORM_SPLIT_PDF_PAGE_KEY = \"split_pdf_page\";\nexport const PARTITION_FORM_SPLIT_PDF_ALLOW_FAILED_KEY = \"split_pdf_allow_failed\";\nexport const PARTITION_FORM_STARTING_PAGE_NUMBER_KEY = \"starting_page_number\";\nexport const PARTITION_FORM_SPLIT_PDF_PAGE_RANGE_KEY = \"split_pdf_page_range\";\nexport const PARTITION_FORM_SPLIT_PDF_CONCURRENCY_LEVEL =\n  \"split_pdf_concurrency_level\";\n\nexport const EXTRACT_IMAGE_BLOCK_TYPES = \"extract_image_block_types\";\n\nexport const DEFAULT_STARTING_PAGE_NUMBER = 1;\nexport const DEFAULT_NUMBER_OF_PARALLEL_REQUESTS = 8;\nexport const DEFAULT_SPLIT_PDF_ALLOW_FAILED_KEY = false;\nexport const MAX_NUMBER_OF_PARALLEL_REQUESTS = 15;\n\nexport const MIN_PAGES_PER_THREAD = 2;\nexport const MAX_PAGES_PER_THREAD = 20;\n\nexport class HTTPClientExtension extends HTTPClient {\n  constructor() {\n    super();\n  }\n\n  override async request(request: Request): Promise<Response> {\n    if (request.url === \"https://no-op/\") {\n      return new Response('{}', {\n        headers: [\n            [\"fake-response\", \"fake-response\"]\n        ],\n        status: 200,\n        statusText: 'OK_NO_OP'\n      });\n    }\n    return super.request(request);\n   }\n}\n"],"names":[],"mappings":";;;;;AAAA,MAAA,mCAA0C;AAE1C;;GAEG,CACU,QAAA,mBAAmB,GAAG,2BAA2B,CAAC;AAE/D;;GAEG,CACU,QAAA,aAAa,GAAG,QAAQ,CAAC;AAEzB,QAAA,wBAAwB,GAAG,OAAO,CAAC;AACnC,QAAA,iCAAiC,GAAG,gBAAgB,CAAC;AACrD,QAAA,yCAAyC,GAAG,wBAAwB,CAAC;AACrE,QAAA,uCAAuC,GAAG,sBAAsB,CAAC;AACjE,QAAA,uCAAuC,GAAG,sBAAsB,CAAC;AACjE,QAAA,0CAA0C,GACrD,6BAA6B,CAAC;AAEnB,QAAA,yBAAyB,GAAG,2BAA2B,CAAC;AAExD,QAAA,4BAA4B,GAAG,CAAC,CAAC;AACjC,QAAA,mCAAmC,GAAG,CAAC,CAAC;AACxC,QAAA,kCAAkC,GAAG,KAAK,CAAC;AAC3C,QAAA,+BAA+B,GAAG,EAAE,CAAC;AAErC,QAAA,oBAAoB,GAAG,CAAC,CAAC;AACzB,QAAA,oBAAoB,GAAG,EAAE,CAAC;AAEvC,MAAa,mBAAoB,SAAQ,OAAA,UAAU;IACjD,aAAA;QACE,KAAK,EAAE,CAAC;IACV,CAAC;IAEQ,KAAK,CAAC,OAAO,CAAC,OAAgB,EAAA;QACrC,IAAI,OAAO,CAAC,GAAG,KAAK,gBAAgB,EAAE,CAAC;YACrC,OAAO,IAAI,QAAQ,CAAC,IAAI,EAAE;gBACxB,OAAO,EAAE;oBACL;wBAAC,eAAe;wBAAE,eAAe;qBAAC;iBACrC;gBACD,MAAM,EAAE,GAAG;gBACX,UAAU,EAAE,UAAU;aACvB,CAAC,CAAC;QACL,CAAC;QACD,OAAO,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC/B,CAAC;CACH;AAjBD,QAAA,mBAAA,GAAA,oBAiBC","ignoreList":[0]}},
    {"offset": {"line": 444, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 449, "column": 0}, "map": {"version":3,"file":"form.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/hooks/custom/utils/form.ts"],"sourcesContent":["import {\n  DEFAULT_NUMBER_OF_PARALLEL_REQUESTS, DEFAULT_SPLIT_PDF_ALLOW_FAILED_KEY,\n  DEFAULT_STARTING_PAGE_NUMBER,\n  MAX_NUMBER_OF_PARALLEL_REQUESTS, PARTITION_FORM_SPLIT_PDF_ALLOW_FAILED_KEY,\n  PARTITION_FORM_SPLIT_PDF_CONCURRENCY_LEVEL,\n  PARTITION_FORM_SPLIT_PDF_PAGE_RANGE_KEY,\n  PARTITION_FORM_STARTING_PAGE_NUMBER_KEY,\n} from \"../common.js\";\n\n/**\n * Retrieves an integer parameter from the given form data.\n * If the parameter is not found or is not a valid integer, the default value is returned.\n *\n * @param formData - The form data object.\n * @param parameterName - The name of the parameter to retrieve.\n * @param defaultValue - The default value to use if the parameter is not found or is not\n * a valid integer.\n * @returns The integer value of the parameter.\n */\nfunction getIntegerParameter(\n  formData: FormData,\n  parameterName: string,\n  defaultValue: number\n): number {\n  let numberParameter = defaultValue;\n  const formDataParameter = formData.get(parameterName);\n\n  if (formDataParameter === null) {\n    return numberParameter;\n  }\n\n  const formDataNumberParameter = parseInt(formDataParameter as string);\n\n  if (isNaN(formDataNumberParameter)) {\n    console.warn(\n      `'${parameterName}' is not a valid integer. Using default value '${defaultValue}'.`\n    );\n  } else {\n    numberParameter = formDataNumberParameter;\n  }\n\n  return numberParameter;\n}\n\n/**\n * Retrieves a boolean parameter from the given form data.\n * If the parameter is not found or does not have true/false value, the default value is returned.\n *\n * @param formData - The form data object.\n * @param parameterName - The name of the parameter to retrieve.\n * @param defaultValue - The default value to use if the parameter is not found or is not\n * a true/false string.\n * @returns The boolean value of the parameter.\n */\nfunction getBooleanParameter(\n  formData: FormData,\n  parameterName: string,\n  defaultValue: boolean\n): boolean {\n  let booleanParameter = defaultValue;\n  const formDataParameter = formData.get(parameterName);\n\n  if (formDataParameter === null) {\n    return booleanParameter;\n  }\n\n  const formDataBooleanParameterString = formDataParameter as string;\n\n  if (formDataBooleanParameterString.toLowerCase() === \"true\") {\n    booleanParameter = true;\n  } else if (formDataBooleanParameterString.toLowerCase() === \"false\") {\n    booleanParameter = false;\n  } else {\n    console.warn(\n      `'${parameterName}' is not a valid boolean. Using default value '${defaultValue}'.`\n    );\n  }\n\n  return booleanParameter;\n}\n\n/**\n * Retrieves and validates a page range from FormData, ensuring that the start and end values are defined and within bounds.\n *\n * @param formData - The FormData object containing the page range parameter.\n * @param maxPages - The maximum number of pages in the document.\n * @returns {[number, number]} - A tuple containing the validated start and end page numbers.\n *\n * @throws Will throw an error if the page range is invalid or out of bounds.\n */\nexport function getSplitPdfPageRange(formData: FormData, maxPages: number): [number, number] {\n  const formDataParameter = formData.get(PARTITION_FORM_SPLIT_PDF_PAGE_RANGE_KEY);\n  const pageRange = String(formDataParameter).split(\",\").map(Number)\n\n  const start = pageRange[0] || 1;\n  const end = pageRange[1] || maxPages;\n\n  if (!(start > 0 && start <= maxPages) || !(end > 0 && end <= maxPages) || !(start <= end)) {\n    const msg = `Page range (${start} to ${end}) is out of bounds. Values should be between 1 and ${maxPages}.`;\n    console.error(msg);\n    throw new Error(msg);\n  }\n\n  return [start, end];\n}\n\n/**\n * Gets the number of maximum requests that can be made when splitting PDF.\n * - The number of maximum requests is determined by the value of the request parameter\n * `split_pdf_thread`.\n * - If the parameter is not set or has an invalid value, the default number of\n * parallel requests (5) is used.\n * - If the number of maximum requests is greater than the maximum allowed (15), it is\n * clipped to the maximum value.\n * - If the number of maximum requests is less than 1, the default number of parallel\n * requests (5) is used.\n *\n * @returns The number of maximum requests to use when calling the API to split a PDF.\n */\nexport function getSplitPdfConcurrencyLevel(formData: FormData): number {\n  let splitPdfConcurrencyLevel = getIntegerParameter(\n    formData,\n    PARTITION_FORM_SPLIT_PDF_CONCURRENCY_LEVEL,\n    DEFAULT_NUMBER_OF_PARALLEL_REQUESTS\n  );\n\n  if (splitPdfConcurrencyLevel > MAX_NUMBER_OF_PARALLEL_REQUESTS) {\n    console.warn(\n      `Clipping '${PARTITION_FORM_SPLIT_PDF_CONCURRENCY_LEVEL}' to ${MAX_NUMBER_OF_PARALLEL_REQUESTS}.`\n    );\n    splitPdfConcurrencyLevel = MAX_NUMBER_OF_PARALLEL_REQUESTS;\n  } else if (splitPdfConcurrencyLevel < 1) {\n    console.warn(\n      `'${PARTITION_FORM_SPLIT_PDF_CONCURRENCY_LEVEL}' is less than 1.`\n    );\n    splitPdfConcurrencyLevel = DEFAULT_NUMBER_OF_PARALLEL_REQUESTS;\n  }\n  return splitPdfConcurrencyLevel;\n}\n\n/**\n * Gets the allowFailed parameter which decides whether the partial requests can fail or not\n * when using splitPdfPage parameter.\n * - The number of maximum requests is determined by the value of the request parameter\n * `split_pdf_thread`.\n * - If the parameter is not set or has an invalid value, the default number of\n * parallel requests (5) is used.\n * - If the number of maximum requests is greater than the maximum allowed (15), it is\n * clipped to the maximum value.\n * - If the number of maximum requests is less than 1, the default number of parallel\n * requests (5) is used.\n *\n * @returns The number of maximum requests to use when calling the API to split a PDF.\n */\nexport function getSplitPdfAllowFailed(formData: FormData): boolean {\n  const splitPdfAllowFailed = getBooleanParameter(\n    formData,\n    PARTITION_FORM_SPLIT_PDF_ALLOW_FAILED_KEY,\n    DEFAULT_SPLIT_PDF_ALLOW_FAILED_KEY\n  );\n  return splitPdfAllowFailed;\n}\n\n/**\n * Retrieves the starting page number from the provided form data.\n * If the starting page number is not a valid integer or less than 1,\n * it will use the default value `1`.\n *\n * @param formData - Request form data.\n * @returns The starting page number.\n */\nexport function getStartingPageNumber(formData: FormData): number {\n  let startingPageNumber = getIntegerParameter(\n    formData,\n    PARTITION_FORM_STARTING_PAGE_NUMBER_KEY,\n    DEFAULT_STARTING_PAGE_NUMBER\n  );\n\n  if (startingPageNumber < 1) {\n    console.warn(\n      `'${PARTITION_FORM_STARTING_PAGE_NUMBER_KEY}' is less than 1. Using default value '${DEFAULT_STARTING_PAGE_NUMBER}'.`\n    );\n    startingPageNumber = DEFAULT_STARTING_PAGE_NUMBER;\n  }\n\n  return startingPageNumber;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 585, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 590, "column": 0}, "map": {"version":3,"file":"general.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/hooks/custom/utils/general.ts"],"sourcesContent":["export function stringToBoolean(string: string): boolean {\n  return string.toLocaleLowerCase() === \"true\";\n}\n"],"names":[],"mappings":";;;;;AAAA,SAAgB,eAAe,CAAC,MAAc;IAC5C,OAAO,MAAM,CAAC,iBAAiB,EAAE,KAAK,MAAM,CAAC;AAC/C,CAAC;AAFD,QAAA,eAAA,GAAA,gBAEC","ignoreList":[0]}},
    {"offset": {"line": 599, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 604, "column": 0}, "map": {"version":3,"file":"pdf.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/hooks/custom/utils/pdf.ts"],"sourcesContent":["import { PDFDocument } from \"pdf-lib\";\n\nimport { MAX_PAGES_PER_THREAD, MIN_PAGES_PER_THREAD } from \"../common.js\";\n\ninterface PdfSplit {\n  content: Blob;\n  startPage: number;\n  endPage: number;\n}\n\n/**\n * Converts range of pages (including start and end page values) of a PDF document\n * to a Blob object.\n * @param pdf - The PDF document.\n * @param startPage - Number of the first page of split.\n * @param endPage - Number of the last page of split.\n * @returns A Promise that resolves to a Blob object representing the converted pages.\n */\nexport async function pdfPagesToBlob(\n  pdf: PDFDocument,\n  startPage: number,\n  endPage: number\n): Promise<Blob> {\n  const subPdf = await PDFDocument.create();\n  // Create an array with page indices to copy\n  // Converts 1-based page numbers to 0-based page indices\n  const pageIndices = Array.from(\n    { length: endPage - startPage + 1 },\n    (_, index) => startPage + index - 1\n  );\n  const pages = await subPdf.copyPages(pdf, pageIndices);\n  for (const page of pages) {\n    subPdf.addPage(page);\n  }\n  const subPdfBytes = await subPdf.save();\n  return new Blob([subPdfBytes], {\n    type: \"application/pdf\",\n  });\n}\n\n/**\n * Calculates the optimal split size for processing pages with a specified concurrency level.\n *\n * @param pagesCount - The total number of pages to process.\n * @param concurrencyLevel - The level of concurrency to be used.\n * @returns A promise that resolves to the optimal number of pages per split,\n * ensuring it does not exceed the maximum or fall below the minimum threshold.\n */\nexport async function getOptimalSplitSize(\n    pagesCount: number,\n    concurrencyLevel: number\n): Promise<number> {\n  let splitSize = MAX_PAGES_PER_THREAD;\n  if (pagesCount < MAX_PAGES_PER_THREAD * concurrencyLevel) {\n    splitSize = Math.ceil(pagesCount / concurrencyLevel);\n  }\n  splitSize = Math.max(splitSize, MIN_PAGES_PER_THREAD);\n\n  return splitSize;\n}\n\n\n/**\n * Retrieves an array of splits, with the start and end page numbers, from a PDF file.\n * Distribution of pages per split is made in as much uniform manner as possible.\n *\n * @param pdf - The PDF file to extract pages from.\n * @param splitSize - The number of pages per split.\n * @param [pageRangeStart=1] - The starting page of the range to be split (1-based index). Defaults to the first page of the document.\n * @param [pageRangeEnd=pdf.getPageCount()] - The ending page of the range to be split (1-based index). Defaults to the last page of the document.\n * @returns A promise that resolves to an array of objects containing Blob files and\n * start and end page numbers from the original document.\n */\nexport async function splitPdf(\n  pdf: PDFDocument,\n  splitSize: number,\n  pageRangeStart?: number,\n  pageRangeEnd?: number\n): Promise<PdfSplit[]> {\n  const pdfSplits: PdfSplit[] = [];\n\n  const startPage = pageRangeStart || 1;\n  const endPage = pageRangeEnd || pdf.getPageCount();\n  const pagesCount = endPage - startPage + 1\n\n  const numberOfSplits = Math.ceil(pagesCount / splitSize);\n\n  for (let i = 0; i < numberOfSplits; ++i) {\n    const offset = i * splitSize;\n    const splitStartPage = offset + startPage;\n    const splitEndPage = Math.min(endPage, splitStartPage + splitSize - 1);\n\n    const pdfSplit = await pdfPagesToBlob(pdf, splitStartPage, splitEndPage);\n    pdfSplits.push({ content: pdfSplit, startPage: splitStartPage, endPage: splitEndPage });\n  }\n\n  return pdfSplits;\n}\n\n/**\n * Checks if the given file is a PDF by loading the file as a PDF using the `PDFDocument.load` method.\n * @param file - The file to check.\n * @returns A promise that resolves to three values, first is a boolean representing\n * whether there was an error during PDF load, second is a PDFDocument object or null\n * (depending if there was an error), and the third is the number of pages in the PDF.\n * The number of pages is 0 if there was an error while loading the file.\n */\nexport async function loadPdf(\n  file: File | null\n): Promise<[boolean, PDFDocument | null, number]> {\n  if (!file) {\n    return [true, null, 0];\n  }\n\n  try {\n    const arrayBuffer = await file.arrayBuffer();\n    const pdf = await PDFDocument.load(arrayBuffer);\n    const pagesCount = pdf.getPages().length;\n    return [false, pdf, pagesCount];\n  } catch (e) {\n    return [true, null, 0];\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 716, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 721, "column": 0}, "map": {"version":3,"file":"request.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/hooks/custom/utils/request.ts"],"sourcesContent":["import {\n  EXTRACT_IMAGE_BLOCK_TYPES,\n  PARTITION_FORM_FILES_KEY,\n  PARTITION_FORM_SPLIT_PDF_PAGE_KEY,\n  PARTITION_FORM_STARTING_PAGE_NUMBER_KEY,\n} from \"../common.js\";\n\n/**\n * Removes the \"content-length\" header from the passed response headers.\n *\n * @param response - The response object.\n * @returns The modified headers object.\n */\nexport function prepareResponseHeaders(response: Response): Headers {\n  const headers = new Headers(response.headers);\n  headers.delete(\"content-length\");\n  return headers;\n}\n\n/**\n * Prepares the response body by extracting and flattening the JSON elements from\n * an array of responses.\n *\n * @param responses - An array of Response objects.\n * @returns A Promise that resolves to a string representation of the flattened\n * JSON elements.\n */\nexport async function prepareResponseBody(\n  responses: Response[]\n): Promise<string> {\n  const allElements: any[] = [];\n  let index = 1;\n  for (const res of responses) {\n    if (res.status != 200) {\n      console.warn(\"Failed to partition set #%d, its elements will be omitted in the final result.\", index);\n    }\n\n    const resElements = await res.json();\n    allElements.push(resElements);\n    index++;\n  }\n  return JSON.stringify(allElements.flat());\n}\n\n/**\n * Removes the \"content-type\" header from the given request headers.\n *\n * @param request - The request object containing the headers.\n * @returns The modified headers object.\n */\nexport function prepareRequestHeaders(request: Request): Headers {\n  const headers = new Headers(request.headers);\n  headers.delete(\"content-type\");\n  return headers;\n}\n\n/**\n * Prepares the request body for splitting a PDF.\n *\n * @param formData - The original form data.\n * @param fileContent - The content of the pages to be split.\n * @param fileName - The name of the file.\n * @param startingPageNumber - Real first page number of the split.\n * @returns A Promise that resolves to a FormData object representing\n * the prepared request body.\n */\nexport async function prepareRequestBody(\n  formData: FormData,\n  fileContent: Blob,\n  fileName: string,\n  startingPageNumber: number\n): Promise<FormData> {\n  const newFormData = new FormData();\n  for (const [key, value] of formData.entries()) {\n    if (\n      ![\n        PARTITION_FORM_STARTING_PAGE_NUMBER_KEY,\n        PARTITION_FORM_SPLIT_PDF_PAGE_KEY,\n        PARTITION_FORM_FILES_KEY,\n      ].includes(key)\n    ) {\n      newFormData.append(key, value);\n    }\n  }\n\n  newFormData.append(PARTITION_FORM_SPLIT_PDF_PAGE_KEY, \"false\");\n  newFormData.append(PARTITION_FORM_FILES_KEY, fileContent, fileName);\n  newFormData.append(\n    PARTITION_FORM_STARTING_PAGE_NUMBER_KEY,\n    startingPageNumber.toString()\n  );\n\n  if (formData.has(EXTRACT_IMAGE_BLOCK_TYPES)) {\n    newFormData.delete(EXTRACT_IMAGE_BLOCK_TYPES);\n    const extractImageBlockTypes = (formData.get(EXTRACT_IMAGE_BLOCK_TYPES)?.toString() || \"\").split(\",\");\n    for(const blockType of extractImageBlockTypes) {\n      newFormData.append(EXTRACT_IMAGE_BLOCK_TYPES, blockType);\n    }\n  }\n\n  return newFormData;\n}\n"],"names":[],"mappings":";;;;;AAAA,MAAA,sCAKsB;AAEtB;;;;;GAKG,CACH,SAAgB,sBAAsB,CAAC,QAAkB;IACvD,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAC9C,OAAO,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;IACjC,OAAO,OAAO,CAAC;AACjB,CAAC;AAJD,QAAA,sBAAA,GAAA,uBAIC;AAED;;;;;;;GAOG,CACI,KAAK,UAAU,mBAAmB,CACvC,SAAqB;IAErB,MAAM,WAAW,GAAU,EAAE,CAAC;IAC9B,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,KAAK,MAAM,GAAG,IAAI,SAAS,CAAE,CAAC;QAC5B,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,EAAE,CAAC;YACtB,OAAO,CAAC,IAAI,CAAC,gFAAgF,EAAE,KAAK,CAAC,CAAC;QACxG,CAAC;QAED,MAAM,WAAW,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;QACrC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9B,KAAK,EAAE,CAAC;IACV,CAAC;IACD,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC;AAC5C,CAAC;AAfD,QAAA,mBAAA,GAAA,oBAeC;AAED;;;;;GAKG,CACH,SAAgB,qBAAqB,CAAC,OAAgB;IACpD,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC7C,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;IAC/B,OAAO,OAAO,CAAC;AACjB,CAAC;AAJD,QAAA,qBAAA,GAAA,sBAIC;AAED;;;;;;;;;GASG,CACI,KAAK,UAAU,kBAAkB,CACtC,QAAkB,EAClB,WAAiB,EACjB,QAAgB,EAChB,kBAA0B;;IAE1B,MAAM,WAAW,GAAG,IAAI,QAAQ,EAAE,CAAC;IACnC,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,QAAQ,CAAC,OAAO,EAAE,CAAE,CAAC;QAC9C,IACE,CAAC;YACC,YAAA,uCAAuC;YACvC,YAAA,iCAAiC;YACjC,YAAA,wBAAwB;SACzB,CAAC,QAAQ,CAAC,GAAG,CAAC,EACf,CAAC;YACD,WAAW,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QACjC,CAAC;IACH,CAAC;IAED,WAAW,CAAC,MAAM,CAAC,YAAA,iCAAiC,EAAE,OAAO,CAAC,CAAC;IAC/D,WAAW,CAAC,MAAM,CAAC,YAAA,wBAAwB,EAAE,WAAW,EAAE,QAAQ,CAAC,CAAC;IACpE,WAAW,CAAC,MAAM,CAChB,YAAA,uCAAuC,EACvC,kBAAkB,CAAC,QAAQ,EAAE,CAC9B,CAAC;IAEF,IAAI,QAAQ,CAAC,GAAG,CAAC,YAAA,yBAAyB,CAAC,EAAE,CAAC;QAC5C,WAAW,CAAC,MAAM,CAAC,YAAA,yBAAyB,CAAC,CAAC;QAC9C,MAAM,sBAAsB,GAAG,CAAC,CAAA,CAAA,KAAA,QAAQ,CAAC,GAAG,CAAC,YAAA,yBAAyB,CAAC,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,QAAQ,EAAE,KAAI,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACtG,KAAI,MAAM,SAAS,IAAI,sBAAsB,CAAE,CAAC;YAC9C,WAAW,CAAC,MAAM,CAAC,YAAA,yBAAyB,EAAE,SAAS,CAAC,CAAC;QAC3D,CAAC;IACH,CAAC;IAED,OAAO,WAAW,CAAC;AACrB,CAAC;AAnCD,QAAA,kBAAA,GAAA,mBAmCC","ignoreList":[0]}},
    {"offset": {"line": 804, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 809, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/hooks/custom/utils/index.ts"],"sourcesContent":["export * from \"./form.js\";\nexport * from \"./general.js\";\nexport * from \"./pdf.js\";\nexport * from \"./request.js\";\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,oIAAA,SAA0B;AAC1B,uIAAA,SAA6B;AAC7B,mIAAA,SAAyB;AACzB,uIAAA,SAA6B","ignoreList":[0]}},
    {"offset": {"line": 836, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 841, "column": 0}, "map": {"version":3,"file":"retries.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/lib/retries.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport { isConnectionError, isTimeoutError } from \"./http.js\";\n\nexport type BackoffStrategy = {\n  initialInterval: number;\n  maxInterval: number;\n  exponent: number;\n  maxElapsedTime: number;\n};\n\nconst defaultBackoff: BackoffStrategy = {\n  initialInterval: 500,\n  maxInterval: 60000,\n  exponent: 1.5,\n  maxElapsedTime: 3600000,\n};\n\nexport type RetryConfig =\n  | { strategy: \"none\" }\n  | {\n      strategy: \"backoff\";\n      backoff?: BackoffStrategy;\n      retryConnectionErrors?: boolean;\n    };\n\nclass PermanentError extends Error {\n  inner: unknown;\n\n  constructor(inner: unknown) {\n    super(\"Permanent error\");\n    this.inner = inner;\n\n    Object.setPrototypeOf(this, PermanentError.prototype);\n  }\n}\n\nclass TemporaryError extends Error {\n  res: Response;\n\n  constructor(res: Response) {\n    super(\"Temporary error\");\n    this.res = res;\n\n    Object.setPrototypeOf(this, TemporaryError.prototype);\n  }\n}\n\nexport async function retry(\n  fetchFn: () => Promise<Response>,\n  options: {\n    config: RetryConfig;\n    statusCodes: string[];\n  },\n): Promise<Response> {\n  switch (options.config.strategy) {\n    case \"backoff\":\n      return retryBackoff(\n        wrapFetcher(fetchFn, {\n          statusCodes: options.statusCodes,\n          retryConnectionErrors: !!options.config.retryConnectionErrors,\n        }),\n        options.config.backoff ?? defaultBackoff,\n      );\n    default:\n      return await fetchFn();\n  }\n}\n\nfunction wrapFetcher(\n  fn: () => Promise<Response>,\n  options: {\n    statusCodes: string[];\n    retryConnectionErrors: boolean;\n  },\n): () => Promise<Response> {\n  return async () => {\n    try {\n      const res = await fn();\n      if (isRetryableResponse(res, options.statusCodes)) {\n        throw new TemporaryError(res);\n      }\n\n      return res;\n    } catch (err) {\n      if (err instanceof TemporaryError) {\n        throw err;\n      }\n\n      if (\n        options.retryConnectionErrors &&\n        (isTimeoutError(err) || isConnectionError(err))\n      ) {\n        throw err;\n      }\n\n      throw new PermanentError(err);\n    }\n  };\n}\n\nconst codeRangeRE = new RegExp(\"^[0-9]xx$\", \"i\");\n\nfunction isRetryableResponse(res: Response, statusCodes: string[]): boolean {\n  const actual = `${res.status}`;\n\n  return statusCodes.some((code) => {\n    if (!codeRangeRE.test(code)) {\n      return code === actual;\n    }\n\n    const expectFamily = code.charAt(0);\n    if (!expectFamily) {\n      throw new Error(\"Invalid status code range\");\n    }\n\n    const actualFamily = actual.charAt(0);\n    if (!actualFamily) {\n      throw new Error(`Invalid response status code: ${actual}`);\n    }\n\n    return actualFamily === expectFamily;\n  });\n}\n\nasync function retryBackoff(\n  fn: () => Promise<Response>,\n  strategy: BackoffStrategy,\n): Promise<Response> {\n  const { maxElapsedTime, initialInterval, exponent, maxInterval } = strategy;\n\n  const start = Date.now();\n  let x = 0;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    try {\n      const res = await fn();\n      return res;\n    } catch (err) {\n      if (err instanceof PermanentError) {\n        throw err.inner;\n      }\n      const elapsed = Date.now() - start;\n      if (elapsed > maxElapsedTime) {\n        if (err instanceof TemporaryError) {\n          return err.res;\n        }\n\n        throw err;\n      }\n\n      let retryInterval = 0;\n      if (err instanceof TemporaryError && err.res && err.res.headers) {\n        const retryVal = err.res.headers.get(\"retry-after\") || \"\";\n        if (retryVal != \"\") {\n          const parsedNumber = Number(retryVal);\n          if (!isNaN(parsedNumber) && Number.isInteger(parsedNumber)) {\n            retryInterval = parsedNumber * 1000;\n          } else {\n            const parsedDate = Date.parse(retryVal);\n            if (!isNaN(parsedDate)) {\n              const deltaMS = parsedDate - Date.now();\n              retryInterval = deltaMS > 0 ? Math.ceil(deltaMS) : 0;\n            }\n          }\n        }\n      }\n\n      if (retryInterval == 0) {\n        retryInterval =\n          initialInterval * Math.pow(x, exponent) + Math.random() * 1000;\n      }\n\n      const d = Math.min(retryInterval, maxInterval);\n\n      await delay(d);\n      x++;\n    }\n  }\n}\n\nasync function delay(delay: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, delay));\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 967, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 972, "column": 0}, "map": {"version":3,"file":"SplitPdfHook.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/hooks/custom/SplitPdfHook.ts"],"sourcesContent":["import async from \"async\";\nimport {randomUUID} from 'crypto';\n\nimport {\n  AfterErrorContext,\n  AfterErrorHook,\n  AfterSuccessContext,\n  AfterSuccessHook,\n  type BeforeRequestContext,\n  BeforeRequestHook,\n  SDKInitHook,\n  SDKInitOptions,\n} from \"../types.js\";\nimport {\n  getOptimalSplitSize, getSplitPdfAllowFailed,\n  getSplitPdfConcurrencyLevel,\n  getStartingPageNumber,\n  getSplitPdfPageRange,\n  loadPdf,\n  prepareRequestBody,\n  prepareRequestHeaders,\n  prepareResponseBody,\n  prepareResponseHeaders,\n  splitPdf,\n  stringToBoolean,\n} from \"./utils/index.js\";\nimport {\n  HTTPClientExtension,\n  MIN_PAGES_PER_THREAD,\n  PARTITION_FORM_FILES_KEY,\n  PARTITION_FORM_SPLIT_PDF_PAGE_KEY,\n} from \"./common.js\";\nimport {retry, RetryConfig} from \"../../lib/retries\";\n\n/**\n * Represents a hook for splitting and sending PDF files as per page requests.\n */\nexport class SplitPdfHook\n  implements SDKInitHook, BeforeRequestHook, AfterSuccessHook, AfterErrorHook\n{\n  /**\n   * The HTTP client used for making requests.\n   */\n  client: HTTPClientExtension | undefined;\n\n  /**\n   * Keeps the strict-mode setting for splitPdfPage feature.\n   */\n  allowFailed: boolean | undefined;\n\n  /**\n   * Maps lists responses to client operation.\n   */\n  partitionSuccessfulResponses: Record<string, Response[]> = {};\n\n  /**\n   * Maps lists failed responses to client operation.\n   */\n  partitionFailedResponses: Record<string, Response[]> = {};\n\n  /**\n   * Maps parallel requests to client operation.\n   */\n  partitionRequests: Record<string, Promise<unknown>> = {};\n\n  /**\n   * Initializes Split PDF Hook.\n   * @param opts - The options for SDK initialization.\n   * @returns The initialized SDK options.\n   */\n  sdkInit(opts: SDKInitOptions): SDKInitOptions {\n    const { baseURL } = opts;\n    this.client = new HTTPClientExtension();\n\n    this.client.addHook(\"response\", (res) => {\n        if (res.status != 200) {\n            console.error(\"Request failed with status code\", `${res.status}`);\n        }\n    });\n\n    return { baseURL: baseURL, client: this.client };\n  }\n\n  /**\n   * If `splitPdfPage` is set to `true` in the request, the PDF file is split into\n   * separate batches. Each batch is sent as a separate request in parallel. The last\n   * batch request is returned by this method. It will return the original request\n   * when: `splitPdfPage` is set to `false`, the file is not a PDF, or the HTTP\n   * has not been initialized.\n   *\n   * @param hookCtx - The hook context containing information about the operation.\n   * @param request - The request object.\n   * @returns If `splitPdfPage` is set to `true`, the last batch request; otherwise,\n   * the original request.\n   */\n  async beforeRequest(\n    hookCtx: BeforeRequestContext,\n    request: Request\n  ): Promise<Request> {\n\n    // setting the current operationID to be unique\n    const operationID = \"partition-\" + randomUUID();\n    hookCtx.operationID = operationID;\n\n    const requestClone = request.clone();\n    const formData = await requestClone.formData();\n    const splitPdfPage = stringToBoolean(\n      (formData.get(PARTITION_FORM_SPLIT_PDF_PAGE_KEY) as string) ?? \"false\"\n    );\n    const file = formData.get(PARTITION_FORM_FILES_KEY) as File | null;\n\n    if (!splitPdfPage) {\n      return request;\n    }\n\n    if (!this.client) {\n      console.warn(\"HTTP client not accessible! Partitioning without split.\");\n      return request;\n    }\n\n    const [error, pdf, totalPages] = await loadPdf(file);\n    if (file === null || pdf === null || error) {\n      return request;\n    }\n\n    const [pageRangeStart, pageRangeEnd] = getSplitPdfPageRange(formData, totalPages);\n    const pagesCount = pageRangeEnd - pageRangeStart + 1;\n\n    const startingPageNumber = getStartingPageNumber(formData);\n\n    const concurrencyLevel = getSplitPdfConcurrencyLevel(formData);\n\n    this.allowFailed = getSplitPdfAllowFailed(formData);\n\n    const splitSize = await getOptimalSplitSize(pagesCount, concurrencyLevel);\n\n    // If user wants a specific page range, we need to call splitPdf,\n    // even if this page count is too small to be split normally\n    const isPageRangeRequested = pagesCount < totalPages;\n\n    // Otherwise, if there are not enough pages, return the original request without splitting\n    if (!isPageRangeRequested) {\n      if (splitSize >= pagesCount || pagesCount < MIN_PAGES_PER_THREAD) {\n        return request;\n      }\n    }\n\n    const splits = await splitPdf(pdf, splitSize, pageRangeStart, pageRangeEnd);\n\n    const oneSecond = 1000;\n    const oneMinute = 1000 * 60;\n    const sixtyMinutes = oneMinute * 60;\n\n    const headers = prepareRequestHeaders(request);\n\n    const requests: Request[] = [];\n\n    let setIndex = 1\n    for (const { content, startPage } of splits) {\n      // Both startPage and startingPageNumber are 1-based, so we need to subtract 1\n      const firstPageNumber = startPage + startingPageNumber - 1;\n\n      const body = await prepareRequestBody(\n        formData,\n        content,\n        file.name,\n        firstPageNumber\n      );\n      const req = new Request(requestClone, {\n        headers,\n        body,\n        signal: AbortSignal.timeout(sixtyMinutes)\n      });\n      requests.push(req);\n      setIndex+=1;\n    }\n\n    this.partitionSuccessfulResponses[operationID] = new Array(requests.length);\n    this.partitionFailedResponses[operationID] = new Array(requests.length);\n\n    const allowFailed = this.allowFailed;\n\n    // These are the retry values from our api spec\n    // We need to hardcode them here until we're able to reuse the SDK\n    // from within this hook\n\n    const allowedRetries = 3;\n    const retryConfig = {\n        strategy: \"backoff\",\n        backoff: {\n            initialInterval: oneSecond * 3,\n            maxInterval: oneMinute * 12,\n            exponent: 1.88,\n            maxElapsedTime: sixtyMinutes,\n        },\n    } as RetryConfig;\n\n    const retryCodes = [\"502\", \"503\", \"504\"];\n\n\n    this.partitionRequests[operationID] = async.parallelLimit(\n      requests.map((req, pageIndex) => async () => {\n        const pageNumber = pageIndex + startingPageNumber;\n        let retryCount = 0;\n        try {\n         const response = await retry(\n              async () => {\n                retryCount++;\n                if (retryCount > allowedRetries) {\n                  throw new Error(`Number of retries exceeded for page ${pageNumber}`);\n                }\n                return await this.client!.request(req.clone());\n              },\n              { config: retryConfig, statusCodes: retryCodes }\n          );\n          if (response.status === 200) {\n            (this.partitionSuccessfulResponses[operationID] as Response[])[pageIndex] =\n              response.clone();\n          } else {\n            (this.partitionFailedResponses[operationID] as Response[])[pageIndex] =\n              response.clone();\n              if (!allowFailed) {\n                throw new Error(`Failed to send request for page ${pageNumber}.`);\n              }\n          }\n        } catch (e) {\n          console.error(`Failed to send request for page ${pageNumber}.`, e);\n          if (!allowFailed) {\n            throw e;\n          }\n        }\n      }),\n      concurrencyLevel\n    );\n\n    return new Request(\"https://no-op/\");\n  }\n\n    /**\n     * Forms the final response object based on the successful and failed responses.\n     * @param response - The response object returned from the API request.\n     *   Expected to be a successful response.\n     * @param successfulResponses - The list of successful responses.\n     * @param failedResponses - The list of failed responses.\n     * @returns The final response object.\n     */\n  async formFinalResponse(response: Response,\n                    successfulResponses: Response[],\n                    failedResponses: Response[]\n  ): Promise<Response>  {\n    let realResponse = response.clone();\n    const firstSuccessfulResponse = successfulResponses.at(0);\n    const isFakeResponse = response.headers.has(\"fake-response\");\n    if (firstSuccessfulResponse !== undefined && isFakeResponse) {\n      realResponse = firstSuccessfulResponse.clone();\n    }\n\n    let responseBody, responseStatus, responseStatusText;\n    const numFailedResponses = failedResponses?.length ?? 0;\n    const headers = prepareResponseHeaders(realResponse);\n\n    if (!this.allowFailed && failedResponses && failedResponses.length > 0) {\n       const failedResponse = failedResponses[0]?.clone();\n       if (failedResponse) {\n            responseBody = await failedResponse.text();\n            responseStatusText = failedResponse.statusText;\n        } else {\n            responseBody = JSON.stringify({\"details:\": \"Unknown error\"});\n            responseStatusText = \"Unknown error\"\n        }\n        // if the response status is unknown or was 502, 503, 504, set back to 500 to ensure we don't cause more retries\n        responseStatus = 500;\n        console.warn(\n            `${numFailedResponses} requests failed. The partition operation is cancelled.`\n          );\n      } else {\n        if (isFakeResponse) {\n          responseBody = await prepareResponseBody([...successfulResponses]);\n        } else {\n          responseBody = await prepareResponseBody([...successfulResponses, response]);\n        }\n        responseStatus = realResponse.status\n        responseStatusText = realResponse.statusText\n        if (numFailedResponses > 0) {\n          console.warn(\n            `${numFailedResponses} requests failed. The results might miss some pages.`\n          );\n          }\n    }\n    return new Response(responseBody, {\n        headers: headers,\n        status: responseStatus,\n        statusText: responseStatusText,\n      });\n\n  }\n\n  /**\n   * Executes after a successful API request. Awaits all parallel requests and combines\n   * the responses into a single response object.\n   * @param hookCtx - The context object containing information about the hook execution.\n   * @param response - The response object returned from the API request.\n   * @returns If requests were run in parallel, a combined response object; otherwise,\n   * the original response.\n   */\n  async afterSuccess(\n    hookCtx: AfterSuccessContext,\n    response: Response\n  ): Promise<Response> {\n    const { operationID } = hookCtx;\n    const responses = await this.awaitAllRequests(operationID);\n    const successfulResponses = responses?.get(\"success\") ?? [];\n    const failedResponses = responses?.get(\"failed\") ?? [];\n    if (!successfulResponses) {\n      return response;\n    }\n\n    const finalResponse = await this.formFinalResponse(response, successfulResponses, failedResponses);\n\n    this.clearOperation(operationID);\n\n    return finalResponse;\n    }\n\n\n  /**\n   * Executes after an unsuccessful API request. Awaits all parallel requests, if at least one\n   * request was successful, combines the responses into a single response object and doesn't\n   * throw an error. It will return an error only if all requests failed, or there was no PDF split.\n   * @param hookCtx - The AfterErrorContext object containing information about the hook context.\n   * @param response - The Response object representing the response received before the error occurred.\n   * @param error - The error object that was thrown.\n   * @returns If requests were run in parallel, and at least one was successful, a combined response\n   * object; otherwise, the original response and error.\n   */\n  async afterError(\n    hookCtx: AfterErrorContext,\n    response: Response | null,\n    error: unknown\n  ): Promise<{ response: Response | null; error: unknown }> {\n    const { operationID } = hookCtx;\n    const responses = await this.awaitAllRequests(operationID);\n    const successfulResponses = responses?.get(\"success\") ?? [];\n    const failedResponses = responses?.get(\"failed\") ?? [];\n    if (!successfulResponses?.length) {\n      this.clearOperation(operationID);\n      return { response, error };\n    }\n\n    const okResponse = successfulResponses[0] as Response;\n    const finalResponse = await this.formFinalResponse(\n        okResponse,\n        successfulResponses.slice(1),\n        failedResponses\n    );\n\n    this.clearOperation(operationID);\n\n    return { response: finalResponse, error: null };\n  }\n\n  /**\n   * Clears the parallel requests and response data associated with the given\n   * operation ID.\n   *\n   * @param operationID - The ID of the operation to clear.\n   */\n  clearOperation(operationID: string) {\n    delete this.partitionSuccessfulResponses[operationID];\n    delete this.partitionFailedResponses[operationID];\n    delete this.partitionRequests[operationID];\n  }\n\n  /**\n   * Awaits all parallel requests for a given operation ID and returns the\n   * responses.\n   * @param operationID - The ID of the operation.\n   * @returns A promise that resolves to an array of responses, or undefined\n   * if there are no requests for the given operation ID.\n   */\n  async awaitAllRequests(operationID: string): Promise<Map<string, Response[]>> {\n    const requests = this.partitionRequests[operationID];\n    const responseMap = new Map<string, Response[]>();\n\n    if (!requests) {\n      return responseMap;\n    }\n    await requests;\n\n    responseMap.set(\"success\", this.partitionSuccessfulResponses[operationID]?.filter((e) => e) ?? []);\n    responseMap.set(\"failed\", this.partitionFailedResponses[operationID]?.filter((e) => e) ?? []);\n    return responseMap\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1270, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1275, "column": 0}, "map": {"version":3,"file":"HttpsCheckHook.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/hooks/custom/HttpsCheckHook.ts"],"sourcesContent":["import { BASE_HOSTNAME_REGEX, BASE_PROTOCOL } from \"./common.js\";\nimport { SDKInitHook, SDKInitOptions } from \"../types.js\";\n\n/**\n * Represents a hook that performs base host HTTPS check during SDK initialization.\n */\nexport class HttpsCheckHook implements SDKInitHook {\n  /**\n   * Performs the base host HTTPS check during SDK initialization. If hostname\n   * matches \"*.unstructuredapp.io\" and the protocol is not \"https:\", the protocol\n   * is updated to \"https:\".\n   * @param opts - The SDK initialization options.\n   * @returns The updated SDK initialization options.\n   */\n  sdkInit(opts: SDKInitOptions): SDKInitOptions {\n    const { baseURL, client } = opts;\n\n    if (baseURL) {\n      // -- pathname should always be empty\n      baseURL.pathname = \"/\";\n\n      if (BASE_HOSTNAME_REGEX.test(baseURL.hostname) && baseURL.protocol !== BASE_PROTOCOL) {\n        console.warn(\"Base URL protocol is not HTTPS. Updating to HTTPS.\");\n        const newBaseURL = baseURL.href.replace(baseURL.protocol, BASE_PROTOCOL);\n        return {baseURL: new URL(newBaseURL), client: client};\n      }\n    }\n\n    return { baseURL: baseURL, client: client };\n  }\n}\n"],"names":[],"mappings":";;;;;AAAA,MAAA,qCAAiE;AAGjE;;GAEG,CACH,MAAa,cAAc;IACzB;;;;;;OAMG,CACH,OAAO,CAAC,IAAoB,EAAA;QAC1B,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;QAEjC,IAAI,OAAO,EAAE,CAAC;YACZ,qCAAqC;YACrC,OAAO,CAAC,QAAQ,GAAG,GAAG,CAAC;YAEvB,IAAI,YAAA,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,QAAQ,KAAK,YAAA,aAAa,EAAE,CAAC;gBACrF,OAAO,CAAC,IAAI,CAAC,oDAAoD,CAAC,CAAC;gBACnE,MAAM,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,YAAA,aAAa,CAAC,CAAC;gBACzE,OAAO;oBAAC,OAAO,EAAE,IAAI,GAAG,CAAC,UAAU,CAAC;oBAAE,MAAM,EAAE,MAAM;gBAAA,CAAC,CAAC;YACxD,CAAC;QACH,CAAC;QAED,OAAO;YAAE,OAAO,EAAE,OAAO;YAAE,MAAM,EAAE,MAAM;QAAA,CAAE,CAAC;IAC9C,CAAC;CACF;AAxBD,QAAA,cAAA,GAAA,eAwBC","ignoreList":[0]}},
    {"offset": {"line": 1311, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1316, "column": 0}, "map": {"version":3,"file":"registration.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/hooks/registration.ts"],"sourcesContent":["import { Hooks } from \"./types\";\n\nimport { LoggerHook } from \"./custom/LoggerHook.js\";\nimport { SplitPdfHook } from \"./custom/SplitPdfHook.js\";\nimport { HttpsCheckHook } from \"./custom/HttpsCheckHook.js\";\n\n/*\n * This file is only ever generated once on the first generation and then is free to be modified.\n * Any hooks you wish to add should be registered in the initHooks function. Feel free to define them\n * in this file or in separate files in the hooks folder.\n */\n\nexport function initHooks(hooks: Hooks) {\n  // Add hooks by calling hooks.register{ClientInit/BeforeRequest/AfterSuccess/AfterError}Hook\n  // with an instance of a hook that implements that specific Hook interface\n  // Hooks are registered per SDK instance, and are valid for the lifetime of the SDK instance\n\n  // Initialize hooks\n  const loggerHook = new LoggerHook();\n  const splitPdfHook = new SplitPdfHook();\n  const httpsCheckHook = new HttpsCheckHook();\n\n  // NOTE: logger_hook should stay registered last as logs the status of\n  // request and whether it will be retried which can be changed by e.g. split_pdf_hook\n\n  // Register SDK init hooks\n  hooks.registerSDKInitHook(httpsCheckHook);\n  hooks.registerSDKInitHook(splitPdfHook);\n\n  // Register before request hooks\n  hooks.registerBeforeRequestHook(splitPdfHook);\n\n  // Register after success hooks\n  hooks.registerAfterSuccessHook(splitPdfHook);\n  hooks.registerAfterSuccessHook(loggerHook)\n\n  // Register after error hooks\n  hooks.registerAfterErrorHook(splitPdfHook);\n  hooks.registerAfterErrorHook(loggerHook);\n}\n"],"names":[],"mappings":";;;;;AAEA,MAAA,oDAAoD;AACpD,MAAA,wDAAwD;AACxD,MAAA,4DAA4D;AAE5D;;;;GAIG,CAEH,SAAgB,SAAS,CAAC,KAAY;IACpC,4FAA4F;IAC5F,0EAA0E;IAC1E,4FAA4F;IAE5F,mBAAmB;IACnB,MAAM,UAAU,GAAG,IAAI,gBAAA,UAAU,EAAE,CAAC;IACpC,MAAM,YAAY,GAAG,IAAI,kBAAA,YAAY,EAAE,CAAC;IACxC,MAAM,cAAc,GAAG,IAAI,oBAAA,cAAc,EAAE,CAAC;IAE5C,sEAAsE;IACtE,qFAAqF;IAErF,0BAA0B;IAC1B,KAAK,CAAC,mBAAmB,CAAC,cAAc,CAAC,CAAC;IAC1C,KAAK,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC;IAExC,gCAAgC;IAChC,KAAK,CAAC,yBAAyB,CAAC,YAAY,CAAC,CAAC;IAE9C,+BAA+B;IAC/B,KAAK,CAAC,wBAAwB,CAAC,YAAY,CAAC,CAAC;IAC7C,KAAK,CAAC,wBAAwB,CAAC,UAAU,CAAC,CAAA;IAE1C,6BAA6B;IAC7B,KAAK,CAAC,sBAAsB,CAAC,YAAY,CAAC,CAAC;IAC3C,KAAK,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;AAC3C,CAAC;AA3BD,QAAA,SAAA,GAAA,UA2BC","ignoreList":[0]}},
    {"offset": {"line": 1351, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1356, "column": 0}, "map": {"version":3,"file":"hooks.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/hooks/hooks.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport { RequestInput } from \"../lib/http.js\";\nimport {\n  AfterErrorContext,\n  AfterErrorHook,\n  AfterSuccessContext,\n  AfterSuccessHook,\n  BeforeCreateRequestContext,\n  BeforeCreateRequestHook,\n  BeforeRequestContext,\n  BeforeRequestHook,\n  Hooks,\n  SDKInitHook,\n  SDKInitOptions,\n} from \"./types.js\";\n\nimport { initHooks } from \"./registration.js\";\n\nexport class SDKHooks implements Hooks {\n  sdkInitHooks: SDKInitHook[] = [];\n  beforeCreateRequestHooks: BeforeCreateRequestHook[] = [];\n  beforeRequestHooks: BeforeRequestHook[] = [];\n  afterSuccessHooks: AfterSuccessHook[] = [];\n  afterErrorHooks: AfterErrorHook[] = [];\n\n  constructor() {\n    initHooks(this);\n  }\n\n  registerSDKInitHook(hook: SDKInitHook) {\n    this.sdkInitHooks.push(hook);\n  }\n\n  registerBeforeCreateRequestHook(hook: BeforeCreateRequestHook) {\n    this.beforeCreateRequestHooks.push(hook);\n  }\n\n  registerBeforeRequestHook(hook: BeforeRequestHook) {\n    this.beforeRequestHooks.push(hook);\n  }\n\n  registerAfterSuccessHook(hook: AfterSuccessHook) {\n    this.afterSuccessHooks.push(hook);\n  }\n\n  registerAfterErrorHook(hook: AfterErrorHook) {\n    this.afterErrorHooks.push(hook);\n  }\n\n  sdkInit(opts: SDKInitOptions): SDKInitOptions {\n    return this.sdkInitHooks.reduce((opts, hook) => hook.sdkInit(opts), opts);\n  }\n\n  beforeCreateRequest(\n    hookCtx: BeforeCreateRequestContext,\n    input: RequestInput,\n  ): RequestInput {\n    let inp = input;\n\n    for (const hook of this.beforeCreateRequestHooks) {\n      inp = hook.beforeCreateRequest(hookCtx, inp);\n    }\n\n    return inp;\n  }\n\n  async beforeRequest(\n    hookCtx: BeforeRequestContext,\n    request: Request,\n  ): Promise<Request> {\n    let req = request;\n\n    for (const hook of this.beforeRequestHooks) {\n      req = await hook.beforeRequest(hookCtx, req);\n    }\n\n    return req;\n  }\n\n  async afterSuccess(\n    hookCtx: AfterSuccessContext,\n    response: Response,\n  ): Promise<Response> {\n    let res = response;\n\n    for (const hook of this.afterSuccessHooks) {\n      res = await hook.afterSuccess(hookCtx, res);\n    }\n\n    return res;\n  }\n\n  async afterError(\n    hookCtx: AfterErrorContext,\n    response: Response | null,\n    error: unknown,\n  ): Promise<{ response: Response | null; error: unknown }> {\n    let res = response;\n    let err = error;\n\n    for (const hook of this.afterErrorHooks) {\n      const result = await hook.afterError(hookCtx, res, err);\n      res = result.response;\n      err = result.error;\n    }\n\n    return { response: res, error: err };\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1427, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1432, "column": 0}, "map": {"version":3,"file":"httpclienterrors.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/sdk/models/errors/httpclienterrors.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\n/**\n * Base class for all HTTP errors.\n */\nexport class HTTPClientError extends Error {\n  /** The underlying cause of the error. */\n  override readonly cause: unknown;\n  override name = \"HTTPClientError\";\n  constructor(message: string, opts?: { cause?: unknown }) {\n    let msg = message;\n    if (opts?.cause) {\n      msg += `: ${opts.cause}`;\n    }\n\n    super(msg, opts);\n    // In older runtimes, the cause field would not have been assigned through\n    // the super() call.\n    if (typeof this.cause === \"undefined\") {\n      this.cause = opts?.cause;\n    }\n  }\n}\n\n/**\n * An error to capture unrecognised or unexpected errors when making HTTP calls.\n */\nexport class UnexpectedClientError extends HTTPClientError {\n  override name = \"UnexpectedClientError\";\n}\n\n/**\n * An error that is raised when any inputs used to create a request are invalid.\n */\nexport class InvalidRequestError extends HTTPClientError {\n  override name = \"InvalidRequestError\";\n}\n\n/**\n * An error that is raised when a HTTP request was aborted by the client error.\n */\nexport class RequestAbortedError extends HTTPClientError {\n  override readonly name = \"RequestAbortedError\";\n}\n\n/**\n * An error that is raised when a HTTP request timed out due to an AbortSignal\n * signal timeout.\n */\nexport class RequestTimeoutError extends HTTPClientError {\n  override readonly name = \"RequestTimeoutError\";\n}\n\n/**\n * An error that is raised when a HTTP client is unable to make a request to\n * a server.\n */\nexport class ConnectionError extends HTTPClientError {\n  override readonly name = \"ConnectionError\";\n}\n"],"names":[],"mappings":";AAAA;;GAEG;;;;AAEH;;GAEG,CACH,MAAa,eAAgB,SAAQ,KAAK;IAIxC,YAAY,OAAe,EAAE,IAA0B,CAAA;QACrD,IAAI,GAAG,GAAG,OAAO,CAAC;QAClB,IAAI,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAA,KAAA,IAAJ,IAAI,CAAE,KAAK,EAAE,CAAC;YAChB,GAAG,IAAI,CAAA,EAAA,EAAK,IAAI,CAAC,KAAK,EAAE,CAAC;QAC3B,CAAC;QAED,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAPV,IAAA,CAAA,IAAI,GAAG,iBAAiB,CAAC;QAQhC,0EAA0E;QAC1E,oBAAoB;QACpB,IAAI,OAAO,IAAI,CAAC,KAAK,KAAK,WAAW,EAAE,CAAC;YACtC,IAAI,CAAC,KAAK,GAAG,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAA,KAAA,IAAJ,IAAI,CAAE,KAAK,CAAC;QAC3B,CAAC;IACH,CAAC;CACF;AAjBD,QAAA,eAAA,GAAA,gBAiBC;AAED;;GAEG,CACH,MAAa,qBAAsB,SAAQ,eAAe;IAA1D,aAAA;;QACW,IAAA,CAAA,IAAI,GAAG,uBAAuB,CAAC;IAC1C,CAAC;CAAA;AAFD,QAAA,qBAAA,GAAA,sBAEC;AAED;;GAEG,CACH,MAAa,mBAAoB,SAAQ,eAAe;IAAxD,aAAA;;QACW,IAAA,CAAA,IAAI,GAAG,qBAAqB,CAAC;IACxC,CAAC;CAAA;AAFD,QAAA,mBAAA,GAAA,oBAEC;AAED;;GAEG,CACH,MAAa,mBAAoB,SAAQ,eAAe;IAAxD,aAAA;;QACoB,IAAA,CAAA,IAAI,GAAG,qBAAqB,CAAC;IACjD,CAAC;CAAA;AAFD,QAAA,mBAAA,GAAA,oBAEC;AAED;;;GAGG,CACH,MAAa,mBAAoB,SAAQ,eAAe;IAAxD,aAAA;;QACoB,IAAA,CAAA,IAAI,GAAG,qBAAqB,CAAC;IACjD,CAAC;CAAA;AAFD,QAAA,mBAAA,GAAA,oBAEC;AAED;;;GAGG,CACH,MAAa,eAAgB,SAAQ,eAAe;IAApD,aAAA;;QACoB,IAAA,CAAA,IAAI,GAAG,iBAAiB,CAAC;IAC7C,CAAC;CAAA;AAFD,QAAA,eAAA,GAAA,gBAEC","ignoreList":[0]}},
    {"offset": {"line": 1504, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1509, "column": 0}, "map": {"version":3,"file":"fp.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/sdk/types/fp.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\n/**\n * A monad that captures the result of a function call or an error if it was not\n * successful. Railway programming, enabled by this type, can be a nicer\n * alternative to traditional exception throwing because it allows functions to\n * declare all _known_ errors with static types and then check for them\n * exhaustively in application code. Thrown exception have a type of `unknown`\n * and break out of regular control flow of programs making them harder to\n * inspect and more verbose work with due to try-catch blocks.\n */\nexport type Result<T, E = unknown> =\n  | { ok: true; value: T; error?: never }\n  | { ok: false; value?: never; error: E };\n\nexport function OK<V>(value: V): Result<V, never> {\n  return { ok: true, value };\n}\n\nexport function ERR<E>(error: E): Result<never, E> {\n  return { ok: false, error };\n}\n\n/**\n * unwrap is a convenience function for extracting a value from a result or\n * throwing if there was an error.\n */\nexport function unwrap<T>(r: Result<T, unknown>): T {\n  if (!r.ok) {\n    throw r.error;\n  }\n  return r.value;\n}\n\n/**\n * unwrapAsync is a convenience function for resolving a value from a Promise\n * of a result or rejecting if an error occurred.\n */\nexport async function unwrapAsync<T>(\n  pr: Promise<Result<T, unknown>>,\n): Promise<T> {\n  const r = await pr;\n  if (!r.ok) {\n    throw r.error;\n  }\n\n  return r.value;\n}\n"],"names":[],"mappings":";AAAA;;GAEG;;;;AAeH,SAAgB,EAAE,CAAI,KAAQ;IAC5B,OAAO;QAAE,EAAE,EAAE,IAAI;QAAE,KAAK;IAAA,CAAE,CAAC;AAC7B,CAAC;AAFD,QAAA,EAAA,GAAA,GAEC;AAED,SAAgB,GAAG,CAAI,KAAQ;IAC7B,OAAO;QAAE,EAAE,EAAE,KAAK;QAAE,KAAK;IAAA,CAAE,CAAC;AAC9B,CAAC;AAFD,QAAA,GAAA,GAAA,IAEC;AAED;;;GAGG,CACH,SAAgB,MAAM,CAAI,CAAqB;IAC7C,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;QACV,MAAM,CAAC,CAAC,KAAK,CAAC;IAChB,CAAC;IACD,OAAO,CAAC,CAAC,KAAK,CAAC;AACjB,CAAC;AALD,QAAA,MAAA,GAAA,OAKC;AAED;;;GAGG,CACI,KAAK,UAAU,WAAW,CAC/B,EAA+B;IAE/B,MAAM,CAAC,GAAG,MAAM,EAAE,CAAC;IACnB,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;QACV,MAAM,CAAC,CAAC,KAAK,CAAC;IAChB,CAAC;IAED,OAAO,CAAC,CAAC,KAAK,CAAC;AACjB,CAAC;AATD,QAAA,WAAA,GAAA,YASC","ignoreList":[0]}},
    {"offset": {"line": 1551, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1556, "column": 0}, "map": {"version":3,"file":"base64.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/lib/base64.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\n\nexport function bytesToBase64(u8arr: Uint8Array): string {\n  return btoa(String.fromCodePoint(...u8arr));\n}\n\nexport function bytesFromBase64(encoded: string): Uint8Array {\n  return Uint8Array.from(atob(encoded), (c) => c.charCodeAt(0));\n}\n\nexport function stringToBytes(str: string): Uint8Array {\n  return new TextEncoder().encode(str);\n}\n\nexport function stringFromBytes(u8arr: Uint8Array): string {\n  return new TextDecoder().decode(u8arr);\n}\n\nexport function stringToBase64(str: string): string {\n  return bytesToBase64(stringToBytes(str));\n}\n\nexport function stringFromBase64(b64str: string): string {\n  return stringFromBytes(bytesFromBase64(b64str));\n}\n\nexport const zodOutbound = z\n  .instanceof(Uint8Array)\n  .or(z.string().transform(stringToBytes));\n\nexport const zodInbound = z\n  .instanceof(Uint8Array)\n  .or(z.string().transform(bytesFromBase64));\n"],"names":[],"mappings":";AAAA;;GAEG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,MAAA,IAAA,6BAAyB;AAEzB,SAAgB,aAAa,CAAC,KAAiB;IAC7C,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;AAC9C,CAAC;AAFD,QAAA,aAAA,GAAA,cAEC;AAED,SAAgB,eAAe,CAAC,OAAe;IAC7C,OAAO,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE,CAAG,CAAD,AAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;AAChE,CAAC;AAFD,QAAA,eAAA,GAAA,gBAEC;AAED,SAAgB,aAAa,CAAC,GAAW;IACvC,OAAO,IAAI,WAAW,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AACvC,CAAC;AAFD,QAAA,aAAA,GAAA,cAEC;AAED,SAAgB,eAAe,CAAC,KAAiB;IAC/C,OAAO,IAAI,WAAW,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACzC,CAAC;AAFD,QAAA,eAAA,GAAA,gBAEC;AAED,SAAgB,cAAc,CAAC,GAAW;IACxC,OAAO,aAAa,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;AAC3C,CAAC;AAFD,QAAA,cAAA,GAAA,eAEC;AAED,SAAgB,gBAAgB,CAAC,MAAc;IAC7C,OAAO,eAAe,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC;AAClD,CAAC;AAFD,QAAA,gBAAA,GAAA,iBAEC;AAEY,QAAA,WAAW,GAAG,CAAC,CACzB,UAAU,CAAC,UAAU,CAAC,CACtB,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;AAE9B,QAAA,UAAU,GAAG,CAAC,CACxB,UAAU,CAAC,UAAU,CAAC,CACtB,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1623, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1628, "column": 0}, "map": {"version":3,"file":"is-plain-object.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/lib/is-plain-object.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\n/*\nMIT License\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n// Taken from https://github.com/sindresorhus/is-plain-obj/blob/97f38e8836f86a642cce98fc6ab3058bc36df181/index.js\n\nexport function isPlainObject(value: unknown): value is object {\n  if (typeof value !== \"object\" || value === null) {\n    return false;\n  }\n\n  const prototype = Object.getPrototypeOf(value);\n  return (\n    (prototype === null ||\n      prototype === Object.prototype ||\n      Object.getPrototypeOf(prototype) === null) &&\n    !(Symbol.toStringTag in value) &&\n    !(Symbol.iterator in value)\n  );\n}\n"],"names":[],"mappings":";AAAA;;GAEG;;;;AAEH;;;;;;;;;;;;;;;;;;;;;EAqBE,CAEF,iHAAiH;AAEjH,SAAgB,aAAa,CAAC,KAAc;IAC1C,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,IAAI,EAAE,CAAC;QAChD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,MAAM,SAAS,GAAG,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAC/C,OAAO,AACL,CAAC,SAAS,KAAK,IAAI,IACjB,SAAS,KAAK,MAAM,CAAC,SAAS,IAC9B,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,IAC5C,CAAC,CAAC,MAAM,CAAC,WAAW,IAAI,KAAK,CAAC,IAC9B,CAAC,CAAC,MAAM,CAAC,QAAQ,IAAI,KAAK,CAAC,CAC5B,CAAC;AACJ,CAAC;AAbD,QAAA,aAAA,GAAA,cAaC","ignoreList":[0]}},
    {"offset": {"line": 1665, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1670, "column": 0}, "map": {"version":3,"file":"encodings.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/lib/encodings.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport { bytesToBase64 } from \"./base64.js\";\nimport { isPlainObject } from \"./is-plain-object.js\";\n\nexport class EncodingError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"EncodingError\";\n  }\n}\n\nexport function encodeMatrix(\n  key: string,\n  value: unknown,\n  options?: { explode?: boolean; charEncoding?: \"percent\" | \"none\" },\n): string {\n  let out = \"\";\n  const pairs: [string, unknown][] = options?.explode\n    ? explode(key, value)\n    : [[key, value]];\n\n  const encodeString = (v: string) => {\n    return options?.charEncoding === \"percent\" ? encodeURIComponent(v) : v;\n  };\n  const encodeValue = (v: unknown) => encodeString(serializeValue(v));\n\n  pairs.forEach(([pk, pv]) => {\n    let tmp = \"\";\n    let encValue = \"\";\n\n    if (pv === undefined) {\n      return;\n    } else if (Array.isArray(pv)) {\n      encValue = mapDefined(pv, (v) => `${encodeValue(v)}`).join(\",\");\n    } else if (isPlainObject(pv)) {\n      encValue = mapDefinedEntries(Object.entries(pv), ([k, v]) => {\n        return `,${encodeString(k)},${encodeValue(v)}`;\n      }).join(\"\");\n      encValue = encValue.slice(1);\n    } else {\n      encValue = `${encodeValue(pv)}`;\n    }\n\n    const keyPrefix = encodeString(pk);\n    tmp = `${keyPrefix}=${encValue}`;\n    // trim trailing '=' if value was empty\n    if (tmp === `${keyPrefix}=`) {\n      tmp = tmp.slice(0, -1);\n    }\n\n    // If we end up with the nothing then skip forward\n    if (!tmp) {\n      return;\n    }\n\n    out += `;${tmp}`;\n  });\n\n  return out;\n}\n\nexport function encodeLabel(\n  key: string,\n  value: unknown,\n  options?: { explode?: boolean; charEncoding?: \"percent\" | \"none\" },\n): string {\n  let out = \"\";\n  const pairs: [string, unknown][] = options?.explode\n    ? explode(key, value)\n    : [[key, value]];\n\n  const encodeString = (v: string) => {\n    return options?.charEncoding === \"percent\" ? encodeURIComponent(v) : v;\n  };\n  const encodeValue = (v: unknown) => encodeString(serializeValue(v));\n\n  pairs.forEach(([pk, pv]) => {\n    let encValue = \"\";\n\n    if (pv === undefined) {\n      return;\n    } else if (Array.isArray(pv)) {\n      encValue = mapDefined(pv, (v) => `${encodeValue(v)}`).join(\".\");\n    } else if (isPlainObject(pv)) {\n      encValue = mapDefinedEntries(Object.entries(pv), ([k, v]) => {\n        return `.${encodeString(k)}.${encodeValue(v)}`;\n      }).join(\"\");\n      encValue = encValue.slice(1);\n    } else {\n      const k =\n        options?.explode && isPlainObject(value) ? `${encodeString(pk)}=` : \"\";\n      encValue = `${k}${encodeValue(pv)}`;\n    }\n\n    out += `.${encValue}`;\n  });\n\n  return out;\n}\n\ntype FormEncoder = (\n  key: string,\n  value: unknown,\n  options?: { explode?: boolean; charEncoding?: \"percent\" | \"none\" },\n) => string;\n\nfunction formEncoder(sep: string): FormEncoder {\n  return (\n    key: string,\n    value: unknown,\n    options?: { explode?: boolean; charEncoding?: \"percent\" | \"none\" },\n  ) => {\n    let out = \"\";\n    const pairs: [string, unknown][] = options?.explode\n      ? explode(key, value)\n      : [[key, value]];\n\n    const encodeString = (v: string) => {\n      return options?.charEncoding === \"percent\" ? encodeURIComponent(v) : v;\n    };\n\n    const encodeValue = (v: unknown) => encodeString(serializeValue(v));\n\n    const encodedSep = encodeString(sep);\n\n    pairs.forEach(([pk, pv]) => {\n      let tmp = \"\";\n      let encValue = \"\";\n\n      if (pv === undefined) {\n        return;\n      } else if (Array.isArray(pv)) {\n        encValue = mapDefined(pv, (v) => `${encodeValue(v)}`).join(encodedSep);\n      } else if (isPlainObject(pv)) {\n        encValue = mapDefinedEntries(Object.entries(pv), ([k, v]) => {\n          return `${encodeString(k)}${encodedSep}${encodeValue(v)}`;\n        }).join(encodedSep);\n      } else {\n        encValue = `${encodeValue(pv)}`;\n      }\n\n      tmp = `${encodeString(pk)}=${encValue}`;\n\n      // If we end up with the nothing then skip forward\n      if (!tmp || tmp === \"=\") {\n        return;\n      }\n\n      out += `&${tmp}`;\n    });\n\n    return out.slice(1);\n  };\n}\n\nexport const encodeForm = formEncoder(\",\");\nexport const encodeSpaceDelimited = formEncoder(\" \");\nexport const encodePipeDelimited = formEncoder(\"|\");\n\nexport function encodeBodyForm(\n  key: string,\n  value: unknown,\n  options?: { explode?: boolean; charEncoding?: \"percent\" | \"none\" },\n): string {\n  let out = \"\";\n  const pairs: [string, unknown][] = options?.explode\n    ? explode(key, value)\n    : [[key, value]];\n\n  const encodeString = (v: string) => {\n    return options?.charEncoding === \"percent\" ? encodeURIComponent(v) : v;\n  };\n\n  const encodeValue = (v: unknown) => encodeString(serializeValue(v));\n\n  pairs.forEach(([pk, pv]) => {\n    let tmp = \"\";\n    let encValue = \"\";\n\n    if (pv === undefined) {\n      return;\n    } else if (Array.isArray(pv)) {\n      encValue = JSON.stringify(pv, jsonReplacer);\n    } else if (isPlainObject(pv)) {\n      encValue = JSON.stringify(pv, jsonReplacer);\n    } else {\n      encValue = `${encodeValue(pv)}`;\n    }\n\n    tmp = `${encodeString(pk)}=${encValue}`;\n\n    // If we end up with the nothing then skip forward\n    if (!tmp || tmp === \"=\") {\n      return;\n    }\n\n    out += `&${tmp}`;\n  });\n\n  return out.slice(1);\n}\n\nexport function encodeDeepObject(\n  key: string,\n  value: unknown,\n  options?: { charEncoding?: \"percent\" | \"none\" },\n): string {\n  if (value == null) {\n    return \"\";\n  }\n\n  if (!isPlainObject(value)) {\n    throw new EncodingError(\n      `Value of parameter '${key}' which uses deepObject encoding must be an object`,\n    );\n  }\n\n  return encodeDeepObjectObject(key, value, options);\n}\n\nexport function encodeDeepObjectObject(\n  key: string,\n  value: unknown,\n  options?: { charEncoding?: \"percent\" | \"none\" },\n): string {\n  if (value == null) {\n    return \"\";\n  }\n\n  let out = \"\";\n\n  const encodeString = (v: string) => {\n    return options?.charEncoding === \"percent\" ? encodeURIComponent(v) : v;\n  };\n\n  if (!isPlainObject(value)) {\n    throw new EncodingError(`Expected parameter '${key}' to be an object.`);\n  }\n\n  Object.entries(value).forEach(([ck, cv]) => {\n    if (cv === undefined) {\n      return;\n    }\n\n    const pk = `${key}[${ck}]`;\n\n    if (isPlainObject(cv)) {\n      const objOut = encodeDeepObjectObject(pk, cv, options);\n\n      out += `&${objOut}`;\n\n      return;\n    }\n\n    const pairs: unknown[] = Array.isArray(cv) ? cv : [cv];\n    let encoded = \"\";\n\n    encoded = mapDefined(pairs, (v) => {\n      return `${encodeString(pk)}=${encodeString(serializeValue(v))}`;\n    }).join(\"&\");\n\n    out += `&${encoded}`;\n  });\n\n  return out.slice(1);\n}\n\nexport function encodeJSON(\n  key: string,\n  value: unknown,\n  options?: { explode?: boolean; charEncoding?: \"percent\" | \"none\" },\n): string {\n  if (typeof value === \"undefined\") {\n    return \"\";\n  }\n\n  const encodeString = (v: string) => {\n    return options?.charEncoding === \"percent\" ? encodeURIComponent(v) : v;\n  };\n\n  const encVal = encodeString(JSON.stringify(value, jsonReplacer));\n\n  return options?.explode ? encVal : `${encodeString(key)}=${encVal}`;\n}\n\nexport const encodeSimple = (\n  key: string,\n  value: unknown,\n  options?: { explode?: boolean; charEncoding?: \"percent\" | \"none\" },\n): string => {\n  let out = \"\";\n  const pairs: [string, unknown][] = options?.explode\n    ? explode(key, value)\n    : [[key, value]];\n\n  const encodeString = (v: string) => {\n    return options?.charEncoding === \"percent\" ? encodeURIComponent(v) : v;\n  };\n  const encodeValue = (v: unknown) => encodeString(serializeValue(v));\n\n  pairs.forEach(([pk, pv]) => {\n    let tmp = \"\";\n\n    if (pv === undefined) {\n      return;\n    } else if (Array.isArray(pv)) {\n      tmp = mapDefined(pv, (v) => `${encodeValue(v)}`).join(\",\");\n    } else if (isPlainObject(pv)) {\n      tmp = mapDefinedEntries(Object.entries(pv), ([k, v]) => {\n        return `,${encodeString(k)},${encodeValue(v)}`;\n      }).join(\"\");\n      tmp = tmp.slice(1);\n    } else {\n      const k = options?.explode && isPlainObject(value) ? `${pk}=` : \"\";\n      tmp = `${k}${encodeValue(pv)}`;\n    }\n\n    // If we end up with the nothing then skip forward\n    if (!tmp) {\n      return;\n    }\n\n    out += `,${tmp}`;\n  });\n\n  return out.slice(1);\n};\n\nfunction explode(key: string, value: unknown): [string, unknown][] {\n  if (Array.isArray(value)) {\n    return value.map((v) => [key, v]);\n  } else if (isPlainObject(value)) {\n    const o = value ?? {};\n    return Object.entries(o).map(([k, v]) => [k, v]);\n  } else {\n    return [[key, value]];\n  }\n}\n\nfunction serializeValue(value: unknown): string {\n  if (value === null) {\n    return \"null\";\n  } else if (typeof value === \"undefined\") {\n    return \"\";\n  } else if (value instanceof Date) {\n    return value.toISOString();\n  } else if (value instanceof Uint8Array) {\n    return bytesToBase64(value);\n  } else if (typeof value === \"object\") {\n    return JSON.stringify(value, jsonReplacer);\n  }\n\n  return `${value}`;\n}\n\nfunction jsonReplacer(_: string, value: unknown): unknown {\n  if (value instanceof Uint8Array) {\n    return bytesToBase64(value);\n  } else {\n    return value;\n  }\n}\n\nfunction mapDefined<T, R>(inp: T[], mapper: (v: T) => R): R[] {\n  return inp.reduce<R[]>((acc, v) => {\n    if (v === undefined) {\n      return acc;\n    }\n\n    const m = mapper(v);\n    if (m === undefined) {\n      return acc;\n    }\n\n    acc.push(m);\n\n    return acc;\n  }, []);\n}\n\nfunction mapDefinedEntries<K, V, R>(\n  inp: Iterable<[K, V]>,\n  mapper: (v: [K, V]) => R,\n): R[] {\n  const acc: R[] = [];\n  for (const [k, v] of inp) {\n    if (v === undefined) {\n      continue;\n    }\n\n    const m = mapper([k, v]);\n    if (m === undefined) {\n      continue;\n    }\n\n    acc.push(m);\n  }\n\n  return acc;\n}\n\nexport function queryJoin(...args: string[]): string {\n  return args.filter(Boolean).join(\"&\");\n}\n\ntype QueryEncoderOptions = {\n  explode?: boolean;\n  charEncoding?: \"percent\" | \"none\";\n};\n\ntype QueryEncoder = (\n  key: string,\n  value: unknown,\n  options?: QueryEncoderOptions,\n) => string;\n\ntype BulkQueryEncoder = (\n  values: Record<string, unknown>,\n  options?: QueryEncoderOptions,\n) => string;\n\nexport function queryEncoder(f: QueryEncoder): BulkQueryEncoder {\n  const bulkEncode = function (\n    values: Record<string, unknown>,\n    options?: QueryEncoderOptions,\n  ): string {\n    const opts: QueryEncoderOptions = {\n      ...options,\n      explode: options?.explode ?? true,\n      charEncoding: options?.charEncoding ?? \"percent\",\n    };\n\n    const encoded = Object.entries(values).map(([key, value]) => {\n      return f(key, value, opts);\n    });\n    return queryJoin(...encoded);\n  };\n\n  return bulkEncode;\n}\n\nexport const encodeJSONQuery = queryEncoder(encodeJSON);\nexport const encodeFormQuery = queryEncoder(encodeForm);\nexport const encodeSpaceDelimitedQuery = queryEncoder(encodeSpaceDelimited);\nexport const encodePipeDelimitedQuery = queryEncoder(encodePipeDelimited);\nexport const encodeDeepObjectQuery = queryEncoder(encodeDeepObject);\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2022, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2027, "column": 0}, "map": {"version":3,"file":"sdks.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/lib/sdks.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport { SDKHooks } from \"../hooks/hooks.js\";\nimport { HookContext } from \"../hooks/types.js\";\nimport {\n  ConnectionError,\n  InvalidRequestError,\n  RequestAbortedError,\n  RequestTimeoutError,\n  UnexpectedClientError,\n} from \"../sdk/models/errors/httpclienterrors.js\";\nimport { ERR, OK, Result } from \"../sdk/types/fp.js\";\nimport { stringToBase64 } from \"./base64.js\";\nimport { SDK_METADATA, SDKOptions, serverURLFromOptions } from \"./config.js\";\nimport { encodeForm } from \"./encodings.js\";\nimport {\n  HTTPClient,\n  isAbortError,\n  isConnectionError,\n  isTimeoutError,\n  matchContentType,\n  matchStatusCode,\n} from \"./http.js\";\nimport { Logger } from \"./logger.js\";\nimport { retry, RetryConfig } from \"./retries.js\";\nimport { SecurityState } from \"./security.js\";\n\nexport type RequestOptions = {\n  /**\n   * Sets a timeout, in milliseconds, on HTTP requests made by an SDK method. If\n   * `fetchOptions.signal` is set then it will take precedence over this option.\n   */\n  timeoutMs?: number;\n  /**\n   * Set or override a retry policy on HTTP calls.\n   */\n  retries?: RetryConfig;\n  /**\n   * Specifies the status codes which should be retried using the given retry policy.\n   */\n  retryCodes?: string[];\n  /**\n   * Sets various request options on the `fetch` call made by an SDK method.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Request/Request#options|Request}\n   */\n  fetchOptions?: Omit<RequestInit, \"method\" | \"body\">;\n};\n\ntype RequestConfig = {\n  method: string;\n  path: string;\n  baseURL?: string | URL;\n  query?: string;\n  body?: RequestInit[\"body\"];\n  headers?: HeadersInit;\n  security?: SecurityState | null;\n  uaHeader?: string;\n  timeoutMs?: number;\n};\n\nconst gt: unknown = typeof globalThis === \"undefined\" ? null : globalThis;\nconst webWorkerLike = typeof gt === \"object\"\n  && gt != null\n  && \"importScripts\" in gt\n  && typeof gt[\"importScripts\"] === \"function\";\nconst isBrowserLike = webWorkerLike\n  || (typeof navigator !== \"undefined\" && \"serviceWorker\" in navigator)\n  || (typeof window === \"object\" && typeof window.document !== \"undefined\");\n\nexport class ClientSDK {\n  readonly #httpClient: HTTPClient;\n  readonly #hooks: SDKHooks;\n  readonly #logger?: Logger | undefined;\n  protected readonly _baseURL: URL | null;\n  public readonly _options: SDKOptions & { hooks?: SDKHooks };\n\n  constructor(options: SDKOptions = {}) {\n    const opt = options as unknown;\n    if (\n      typeof opt === \"object\"\n      && opt != null\n      && \"hooks\" in opt\n      && opt.hooks instanceof SDKHooks\n    ) {\n      this.#hooks = opt.hooks;\n    } else {\n      this.#hooks = new SDKHooks();\n    }\n    this._options = { ...options, hooks: this.#hooks };\n\n    const url = serverURLFromOptions(options);\n    if (url) {\n      url.pathname = url.pathname.replace(/\\/+$/, \"\") + \"/\";\n    }\n    const { baseURL, client } = this.#hooks.sdkInit({\n      baseURL: url,\n      client: options.httpClient || new HTTPClient(),\n    });\n    this._baseURL = baseURL;\n    this.#httpClient = client;\n    this.#logger = options.debugLogger;\n  }\n\n  public _createRequest(\n    context: HookContext,\n    conf: RequestConfig,\n    options?: RequestOptions,\n  ): Result<Request, InvalidRequestError | UnexpectedClientError> {\n    const { method, path, query, headers: opHeaders, security } = conf;\n\n    const base = conf.baseURL ?? this._baseURL;\n    if (!base) {\n      return ERR(new InvalidRequestError(\"No base URL provided for operation\"));\n    }\n    const reqURL = new URL(base);\n    const inputURL = new URL(path, reqURL);\n\n    if (path) {\n      reqURL.pathname += inputURL.pathname.replace(/^\\/+/, \"\");\n    }\n\n    let finalQuery = query || \"\";\n\n    const secQuery: string[] = [];\n    for (const [k, v] of Object.entries(security?.queryParams || {})) {\n      secQuery.push(encodeForm(k, v, { charEncoding: \"percent\" }));\n    }\n    if (secQuery.length) {\n      finalQuery += `&${secQuery.join(\"&\")}`;\n    }\n\n    if (finalQuery) {\n      const q = finalQuery.startsWith(\"&\") ? finalQuery.slice(1) : finalQuery;\n      reqURL.search = `?${q}`;\n    }\n\n    const headers = new Headers(opHeaders);\n\n    const username = security?.basic.username;\n    const password = security?.basic.password;\n    if (username != null || password != null) {\n      const encoded = stringToBase64(\n        [username || \"\", password || \"\"].join(\":\"),\n      );\n      headers.set(\"Authorization\", `Basic ${encoded}`);\n    }\n\n    const securityHeaders = new Headers(security?.headers || {});\n    for (const [k, v] of securityHeaders) {\n      headers.set(k, v);\n    }\n\n    let cookie = headers.get(\"cookie\") || \"\";\n    for (const [k, v] of Object.entries(security?.cookies || {})) {\n      cookie += `; ${k}=${v}`;\n    }\n    cookie = cookie.startsWith(\"; \") ? cookie.slice(2) : cookie;\n    headers.set(\"cookie\", cookie);\n\n    const userHeaders = new Headers(options?.fetchOptions?.headers);\n    for (const [k, v] of userHeaders) {\n      headers.set(k, v);\n    }\n\n    // Only set user agent header in non-browser-like environments since CORS\n    // policy disallows setting it in browsers e.g. Chrome throws an error.\n    if (!isBrowserLike) {\n      headers.set(conf.uaHeader ?? \"user-agent\", SDK_METADATA.userAgent);\n    }\n\n    let fetchOptions = options?.fetchOptions;\n    if (!fetchOptions?.signal && conf.timeoutMs && conf.timeoutMs > 0) {\n      const timeoutSignal = AbortSignal.timeout(conf.timeoutMs);\n      if (!fetchOptions) {\n        fetchOptions = { signal: timeoutSignal };\n      } else {\n        fetchOptions.signal = timeoutSignal;\n      }\n    }\n\n    if (conf.body instanceof ReadableStream) {\n      if (!fetchOptions) {\n        fetchOptions = {\n          // @ts-expect-error see https://github.com/node-fetch/node-fetch/issues/1769\n          duplex: \"half\",\n        };\n      } else {\n        // @ts-expect-error see https://github.com/node-fetch/node-fetch/issues/1769\n        fetchOptions.duplex = \"half\";\n      }\n    }\n\n    let input;\n    try {\n      input = this.#hooks.beforeCreateRequest(context, {\n        url: reqURL,\n        options: {\n          ...fetchOptions,\n          body: conf.body ?? null,\n          headers,\n          method,\n        },\n      });\n    } catch (err: unknown) {\n      return ERR(\n        new UnexpectedClientError(\"Create request hook failed to execute\", {\n          cause: err,\n        }),\n      );\n    }\n\n    return OK(new Request(input.url, input.options));\n  }\n\n  public async _do(\n    request: Request,\n    options: {\n      context: HookContext;\n      errorCodes: number | string | (number | string)[];\n      retryConfig?: RetryConfig | undefined;\n      retryCodes?: string[] | undefined;\n    },\n  ): Promise<\n    Result<\n      Response,\n      | RequestAbortedError\n      | RequestTimeoutError\n      | ConnectionError\n      | UnexpectedClientError\n    >\n  > {\n    const { context, errorCodes } = options;\n    const retryConfig = options.retryConfig || { strategy: \"none\" };\n    const retryCodes = options.retryCodes || [];\n\n    return retry(\n      async () => {\n        const req = await this.#hooks.beforeRequest(context, request.clone());\n        await logRequest(this.#logger, req).catch((e) =>\n          this.#logger?.log(\"Failed to log request:\", e)\n        );\n\n        let response = await this.#httpClient.request(req);\n\n        if (matchStatusCode(response, errorCodes)) {\n          const result = await this.#hooks.afterError(context, response, null);\n          if (result.error) {\n            throw result.error;\n          }\n          response = result.response || response;\n        } else {\n          response = await this.#hooks.afterSuccess(context, response);\n        }\n\n        await logResponse(this.#logger, response, req)\n          .catch(e => this.#logger?.log(\"Failed to log response:\", e));\n\n        return response;\n      },\n      { config: retryConfig, statusCodes: retryCodes },\n    ).then(\n      (r) => OK(r),\n      (err) => {\n        switch (true) {\n          case isAbortError(err):\n            return ERR(\n              new RequestAbortedError(\"Request aborted by client\", {\n                cause: err,\n              }),\n            );\n          case isTimeoutError(err):\n            return ERR(\n              new RequestTimeoutError(\"Request timed out\", { cause: err }),\n            );\n          case isConnectionError(err):\n            return ERR(\n              new ConnectionError(\"Unable to make request\", { cause: err }),\n            );\n          default:\n            return ERR(\n              new UnexpectedClientError(\"Unexpected HTTP client error\", {\n                cause: err,\n              }),\n            );\n        }\n      },\n    );\n  }\n}\n\nconst jsonLikeContentTypeRE = /^application\\/(?:.{0,100}\\+)?json/;\nasync function logRequest(logger: Logger | undefined, req: Request) {\n  if (!logger) {\n    return;\n  }\n\n  const contentType = req.headers.get(\"content-type\");\n  const ct = contentType?.split(\";\")[0] || \"\";\n\n  logger.group(`> Request: ${req.method} ${req.url}`);\n\n  logger.group(\"Headers:\");\n  for (const [k, v] of req.headers.entries()) {\n    logger.log(`${k}: ${v}`);\n  }\n  logger.groupEnd();\n\n  logger.group(\"Body:\");\n  switch (true) {\n    case jsonLikeContentTypeRE.test(ct):\n      logger.log(await req.clone().json());\n      break;\n    case ct.startsWith(\"text/\"):\n      logger.log(await req.clone().text());\n      break;\n    case ct === \"multipart/form-data\": {\n      const body = await req.clone().formData();\n      for (const [k, v] of body) {\n        const vlabel = v instanceof Blob ? \"<Blob>\" : v;\n        logger.log(`${k}: ${vlabel}`);\n      }\n      break;\n    }\n    default:\n      logger.log(`<${contentType}>`);\n      break;\n  }\n  logger.groupEnd();\n\n  logger.groupEnd();\n}\n\nasync function logResponse(\n  logger: Logger | undefined,\n  res: Response,\n  req: Request,\n) {\n  if (!logger) {\n    return;\n  }\n\n  const contentType = res.headers.get(\"content-type\");\n  const ct = contentType?.split(\";\")[0] || \"\";\n\n  logger.group(`< Response: ${req.method} ${req.url}`);\n  logger.log(\"Status Code:\", res.status, res.statusText);\n\n  logger.group(\"Headers:\");\n  for (const [k, v] of res.headers.entries()) {\n    logger.log(`${k}: ${v}`);\n  }\n  logger.groupEnd();\n\n  logger.group(\"Body:\");\n  switch (true) {\n    case matchContentType(res, \"application/json\")\n      || jsonLikeContentTypeRE.test(ct):\n      logger.log(await res.clone().json());\n      break;\n    case matchContentType(res, \"text/event-stream\"):\n      logger.log(`<${contentType}>`);\n      break;\n    case matchContentType(res, \"text/*\"):\n      logger.log(await res.clone().text());\n      break;\n    case matchContentType(res, \"multipart/form-data\"): {\n      const body = await res.clone().formData();\n      for (const [k, v] of body) {\n        const vlabel = v instanceof Blob ? \"<Blob>\" : v;\n        logger.log(`${k}: ${vlabel}`);\n      }\n      break;\n    }\n    default:\n      logger.log(`<${contentType}>`);\n      break;\n  }\n  logger.groupEnd();\n\n  logger.groupEnd();\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2310, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2315, "column": 0}, "map": {"version":3,"file":"sdkerror.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/sdk/models/errors/sdkerror.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nexport class SDKError extends Error {\n  public readonly statusCode: number;\n  public readonly contentType: string;\n\n  constructor(\n    message: string,\n    public readonly rawResponse: Response,\n    public readonly body: string = \"\",\n  ) {\n    const statusCode = rawResponse.status;\n    const contentType = rawResponse.headers.get(\"content-type\") || \"\";\n    const bodyString = body.length > 0 ? `\\n${body}` : \"\";\n\n    super(\n      `${message}: Status ${statusCode} Content-Type ${contentType} Body ${bodyString}`,\n    );\n\n    this.statusCode = statusCode;\n    this.contentType = contentType;\n\n    this.name = \"SDKError\";\n  }\n}\n"],"names":[],"mappings":";AAAA;;GAEG;;;;AAEH,MAAa,QAAS,SAAQ,KAAK;IAIjC,YACE,OAAe,EACC,WAAqB,EACrB,OAAe,EAAE,CAAA;QAEjC,MAAM,UAAU,GAAG,WAAW,CAAC,MAAM,CAAC;QACtC,MAAM,WAAW,GAAG,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAClE,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA,EAAA,EAAK,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAEtD,KAAK,CACH,GAAG,OAAO,CAAA,SAAA,EAAY,UAAU,CAAA,cAAA,EAAiB,WAAW,CAAA,MAAA,EAAS,UAAU,EAAE,CAClF,CAAC;QATc,IAAA,CAAA,WAAW,GAAX,WAAW,CAAU;QACrB,IAAA,CAAA,IAAI,GAAJ,IAAI,CAAa;QAUjC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAE/B,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;IACzB,CAAC;CACF;AAtBD,QAAA,QAAA,GAAA,SAsBC","ignoreList":[0]}},
    {"offset": {"line": 2336, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2341, "column": 0}, "map": {"version":3,"file":"sdkvalidationerror.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/sdk/models/errors/sdkvalidationerror.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\n\nexport class SDKValidationError extends Error {\n  /**\n   * The raw value that failed validation.\n   */\n  public readonly rawValue: unknown;\n\n  /**\n   * The raw message that failed validation.\n   */\n  public readonly rawMessage: unknown;\n\n  constructor(message: string, cause: unknown, rawValue: unknown) {\n    super(`${message}: ${cause}`);\n    this.name = \"SDKValidationError\";\n    this.cause = cause;\n    this.rawValue = rawValue;\n    this.rawMessage = message;\n  }\n\n  /**\n   * Return a pretty-formatted error message if the underlying validation error\n   * is a ZodError or some other recognized error type, otherwise return the\n   * default error message.\n   */\n  public pretty(): string {\n    if (this.cause instanceof z.ZodError) {\n      return `${this.rawMessage}\\n${formatZodError(this.cause)}`;\n    } else {\n      return this.toString();\n    }\n  }\n}\n\nexport function formatZodError(err: z.ZodError, level = 0): string {\n  let pre = \"  \".repeat(level);\n  pre = level > 0 ? `│${pre}` : pre;\n  pre += \" \".repeat(level);\n\n  let message = \"\";\n  const append = (str: string) => (message += `\\n${pre}${str}`);\n\n  const len = err.issues.length;\n  const headline = len === 1 ? `${len} issue found` : `${len} issues found`;\n\n  if (len) {\n    append(`┌ ${headline}:`);\n  }\n\n  for (const issue of err.issues) {\n    let path = issue.path.join(\".\");\n    path = path ? `<root>.${path}` : \"<root>\";\n    append(`│ • [${path}]: ${issue.message} (${issue.code})`);\n    switch (issue.code) {\n      case \"invalid_literal\":\n      case \"invalid_type\": {\n        append(`│     Want: ${issue.expected}`);\n        append(`│      Got: ${issue.received}`);\n        break;\n      }\n      case \"unrecognized_keys\": {\n        append(`│     Keys: ${issue.keys.join(\", \")}`);\n        break;\n      }\n      case \"invalid_enum_value\": {\n        append(`│     Allowed: ${issue.options.join(\", \")}`);\n        append(`│         Got: ${issue.received}`);\n        break;\n      }\n      case \"invalid_union_discriminator\": {\n        append(`│     Allowed: ${issue.options.join(\", \")}`);\n        break;\n      }\n      case \"invalid_union\": {\n        const len = issue.unionErrors.length;\n        append(\n          `│   ✖︎ Attemped to deserialize into one of ${len} union members:`,\n        );\n        issue.unionErrors.forEach((err, i) => {\n          append(`│   ✖︎ Member ${i + 1} of ${len}`);\n          append(`${formatZodError(err, level + 1)}`);\n        });\n      }\n    }\n  }\n\n  if (err.issues.length) {\n    append(`└─*`);\n  }\n\n  return message.slice(1);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2459, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2464, "column": 0}, "map": {"version":3,"file":"schemas.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/lib/schemas.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport {\n  output,\n  ZodEffects,\n  ZodError,\n  ZodObject,\n  ZodRawShape,\n  ZodTypeAny,\n} from \"zod\";\nimport { SDKValidationError } from \"../sdk/models/errors/sdkvalidationerror.js\";\nimport { ERR, OK, Result } from \"../sdk/types/fp.js\";\n\n/**\n * Utility function that executes some code which may throw a ZodError. It\n * intercepts this error and converts it to an SDKValidationError so as to not\n * leak Zod implementation details to user code.\n */\nexport function parse<Inp, Out>(\n  rawValue: Inp,\n  fn: (value: Inp) => Out,\n  errorMessage: string,\n): Out {\n  try {\n    return fn(rawValue);\n  } catch (err) {\n    if (err instanceof ZodError) {\n      throw new SDKValidationError(errorMessage, err, rawValue);\n    }\n    throw err;\n  }\n}\n\n/**\n * Utility function that executes some code which may result in a ZodError. It\n * intercepts this error and converts it to an SDKValidationError so as to not\n * leak Zod implementation details to user code.\n */\nexport function safeParse<Inp, Out>(\n  rawValue: Inp,\n  fn: (value: Inp) => Out,\n  errorMessage: string,\n): Result<Out, SDKValidationError> {\n  try {\n    return OK(fn(rawValue));\n  } catch (err) {\n    return ERR(new SDKValidationError(errorMessage, err, rawValue));\n  }\n}\n\nexport function collectExtraKeys<\n  Shape extends ZodRawShape,\n  Catchall extends ZodTypeAny,\n  K extends string,\n>(\n  obj: ZodObject<Shape, \"strip\", Catchall>,\n  extrasKey: K,\n): ZodEffects<\n  typeof obj,\n  & output<ZodObject<Shape, \"strict\">>\n  & {\n    [k in K]: Record<string, output<Catchall>>;\n  }\n> {\n  return obj.transform((val) => {\n    const extras: Record<string, output<Catchall>> = {};\n    const { shape } = obj;\n    for (const [key] of Object.entries(val)) {\n      if (key in shape) {\n        continue;\n      }\n\n      const v = val[key];\n      if (typeof v === \"undefined\") {\n        continue;\n      }\n\n      extras[key] = v;\n      delete val[key];\n    }\n\n    return { ...val, [extrasKey]: extras };\n  });\n}\n"],"names":[],"mappings":";AAAA;;GAEG;;;;AAEH,MAAA,uBAOa;AACb,MAAA,gFAAgF;AAChF,MAAA,wCAAqD;AAErD;;;;GAIG,CACH,SAAgB,KAAK,CACnB,QAAa,EACb,EAAuB,EACvB,YAAoB;IAEpB,IAAI,CAAC;QACH,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;IACtB,CAAC,CAAC,OAAO,GAAG,EAAE,CAAC;QACb,IAAI,GAAG,YAAY,MAAA,QAAQ,EAAE,CAAC;YAC5B,MAAM,IAAI,wBAAA,kBAAkB,CAAC,YAAY,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC;QAC5D,CAAC;QACD,MAAM,GAAG,CAAC;IACZ,CAAC;AACH,CAAC;AAbD,QAAA,KAAA,GAAA,MAaC;AAED;;;;GAIG,CACH,SAAgB,SAAS,CACvB,QAAa,EACb,EAAuB,EACvB,YAAoB;IAEpB,IAAI,CAAC;QACH,OAAO,CAAA,GAAA,QAAA,EAAE,EAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAO,GAAG,EAAE,CAAC;QACb,OAAO,CAAA,GAAA,QAAA,GAAG,EAAC,IAAI,wBAAA,kBAAkB,CAAC,YAAY,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC;IAClE,CAAC;AACH,CAAC;AAVD,QAAA,SAAA,GAAA,UAUC;AAED,SAAgB,gBAAgB,CAK9B,GAAwC,EACxC,SAAY;IAQZ,OAAO,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;QAC3B,MAAM,MAAM,GAAqC,CAAA,CAAE,CAAC;QACpD,MAAM,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC;QACtB,KAAK,MAAM,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAE,CAAC;YACxC,IAAI,GAAG,IAAI,KAAK,EAAE,CAAC;gBACjB,SAAS;YACX,CAAC;YAED,MAAM,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,IAAI,OAAO,CAAC,KAAK,WAAW,EAAE,CAAC;gBAC7B,SAAS;YACX,CAAC;YAED,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAChB,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;QAClB,CAAC;QAED,OAAO;YAAE,GAAG,GAAG;YAAE,CAAC,SAAS,CAAC,EAAE,MAAM;QAAA,CAAE,CAAC;IACzC,CAAC,CAAC,CAAC;AACL,CAAC;AAjCD,QAAA,gBAAA,GAAA,iBAiCC","ignoreList":[0]}},
    {"offset": {"line": 2523, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2528, "column": 0}, "map": {"version":3,"file":"matchers.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/lib/matchers.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport { SDKError } from \"../sdk/models/errors/sdkerror.js\";\nimport { SDKValidationError } from \"../sdk/models/errors/sdkvalidationerror.js\";\nimport { Result } from \"../sdk/types/fp.js\";\nimport { matchResponse, matchStatusCode, StatusCodePredicate } from \"./http.js\";\nimport { isPlainObject } from \"./is-plain-object.js\";\nimport { safeParse } from \"./schemas.js\";\n\nexport type Encoding =\n  | \"json\"\n  | \"text\"\n  | \"bytes\"\n  | \"stream\"\n  | \"sse\"\n  | \"nil\"\n  | \"fail\";\n\nconst DEFAULT_CONTENT_TYPES: Record<Encoding, string> = {\n  json: \"application/json\",\n  text: \"text/plain\",\n  bytes: \"application/octet-stream\",\n  stream: \"application/octet-stream\",\n  sse: \"text/event-stream\",\n  nil: \"*\",\n  fail: \"*\",\n};\n\ntype Schema<T> = { parse(raw: unknown): T };\n\ntype MatchOptions = {\n  ctype?: string;\n  hdrs?: boolean;\n  key?: string;\n  sseSentinel?: string;\n};\n\nexport type ValueMatcher<V> = MatchOptions & {\n  enc: Encoding;\n  codes: StatusCodePredicate;\n  schema: Schema<V>;\n};\n\nexport type ErrorMatcher<E> = MatchOptions & {\n  enc: Encoding;\n  codes: StatusCodePredicate;\n  schema: Schema<E>;\n  err: true;\n};\n\nexport type FailMatcher = {\n  enc: \"fail\";\n  codes: StatusCodePredicate;\n};\n\nexport type Matcher<T, E> = ValueMatcher<T> | ErrorMatcher<E> | FailMatcher;\n\nexport function jsonErr<E>(\n  codes: StatusCodePredicate,\n  schema: Schema<E>,\n  options?: MatchOptions,\n): ErrorMatcher<E> {\n  return { ...options, err: true, enc: \"json\", codes, schema };\n}\nexport function json<T>(\n  codes: StatusCodePredicate,\n  schema: Schema<T>,\n  options?: MatchOptions,\n): ValueMatcher<T> {\n  return { ...options, enc: \"json\", codes, schema };\n}\n\nexport function textErr<E>(\n  codes: StatusCodePredicate,\n  schema: Schema<E>,\n  options?: MatchOptions,\n): ErrorMatcher<E> {\n  return { ...options, err: true, enc: \"text\", codes, schema };\n}\nexport function text<T>(\n  codes: StatusCodePredicate,\n  schema: Schema<T>,\n  options?: MatchOptions,\n): ValueMatcher<T> {\n  return { ...options, enc: \"text\", codes, schema };\n}\n\nexport function bytesErr<E>(\n  codes: StatusCodePredicate,\n  schema: Schema<E>,\n  options?: MatchOptions,\n): ErrorMatcher<E> {\n  return { ...options, err: true, enc: \"bytes\", codes, schema };\n}\nexport function bytes<T>(\n  codes: StatusCodePredicate,\n  schema: Schema<T>,\n  options?: MatchOptions,\n): ValueMatcher<T> {\n  return { ...options, enc: \"bytes\", codes, schema };\n}\n\nexport function streamErr<E>(\n  codes: StatusCodePredicate,\n  schema: Schema<E>,\n  options?: MatchOptions,\n): ErrorMatcher<E> {\n  return { ...options, err: true, enc: \"stream\", codes, schema };\n}\nexport function stream<T>(\n  codes: StatusCodePredicate,\n  schema: Schema<T>,\n  options?: MatchOptions,\n): ValueMatcher<T> {\n  return { ...options, enc: \"stream\", codes, schema };\n}\n\nexport function sseErr<E>(\n  codes: StatusCodePredicate,\n  schema: Schema<E>,\n  options?: MatchOptions,\n): ErrorMatcher<E> {\n  return { ...options, err: true, enc: \"sse\", codes, schema };\n}\nexport function sse<T>(\n  codes: StatusCodePredicate,\n  schema: Schema<T>,\n  options?: MatchOptions,\n): ValueMatcher<T> {\n  return { ...options, enc: \"sse\", codes, schema };\n}\n\nexport function nilErr<E>(\n  codes: StatusCodePredicate,\n  schema: Schema<E>,\n  options?: MatchOptions,\n): ErrorMatcher<E> {\n  return { ...options, err: true, enc: \"nil\", codes, schema };\n}\nexport function nil<T>(\n  codes: StatusCodePredicate,\n  schema: Schema<T>,\n  options?: MatchOptions,\n): ValueMatcher<T> {\n  return { ...options, enc: \"nil\", codes, schema };\n}\n\nexport function fail(codes: StatusCodePredicate): FailMatcher {\n  return { enc: \"fail\", codes };\n}\n\nexport type MatchedValue<Matchers> = Matchers extends Matcher<infer T, any>[]\n  ? T\n  : never;\nexport type MatchedError<Matchers> = Matchers extends Matcher<any, infer E>[]\n  ? E\n  : never;\nexport type MatchFunc<T, E> = (\n  response: Response,\n  options?: { resultKey?: string; extraFields?: Record<string, unknown> },\n) => Promise<[result: Result<T, E>, raw: unknown]>;\n\nexport function match<T, E>(\n  ...matchers: Array<Matcher<T, E>>\n): MatchFunc<T, E | SDKError | SDKValidationError> {\n  return async function matchFunc(\n    response: Response,\n    options?: { resultKey?: string; extraFields?: Record<string, unknown> },\n  ): Promise<\n    [result: Result<T, E | SDKError | SDKValidationError>, raw: unknown]\n  > {\n    let raw: unknown;\n    let matcher: Matcher<T, E> | undefined;\n    for (const match of matchers) {\n      const { codes } = match;\n      const ctpattern = \"ctype\" in match\n        ? match.ctype\n        : DEFAULT_CONTENT_TYPES[match.enc];\n      if (ctpattern && matchResponse(response, codes, ctpattern)) {\n        matcher = match;\n        break;\n      } else if (!ctpattern && matchStatusCode(response, codes)) {\n        matcher = match;\n        break;\n      }\n    }\n\n    if (!matcher) {\n      const responseBody = await response.text();\n      return [{\n        ok: false,\n        error: new SDKError(\n          \"Unexpected API response status or content-type\",\n          response,\n          responseBody,\n        ),\n      }, responseBody];\n    }\n\n    const encoding = matcher.enc;\n    switch (encoding) {\n      case \"json\":\n        raw = await response.json();\n        break;\n      case \"bytes\":\n        raw = await response.arrayBuffer();\n        break;\n      case \"stream\":\n        raw = response.body;\n        break;\n      case \"text\":\n        raw = await response.text();\n        break;\n      case \"sse\":\n        raw = response.body;\n        break;\n      case \"nil\":\n        raw = await discardResponseBody(response);\n        break;\n      case \"fail\":\n        raw = await response.text();\n        break;\n      default:\n        encoding satisfies never;\n        throw new Error(`Unsupported response type: ${encoding}`);\n    }\n\n    if (matcher.enc === \"fail\") {\n      return [{\n        ok: false,\n        error: new SDKError(\n          \"API error occurred\",\n          response,\n          typeof raw === \"string\" ? raw : \"\",\n        ),\n      }, raw];\n    }\n\n    const resultKey = matcher.key || options?.resultKey;\n    let data: unknown;\n\n    if (\"err\" in matcher) {\n      data = {\n        ...options?.extraFields,\n        ...(matcher.hdrs ? { Headers: unpackHeaders(response.headers) } : null),\n        ...(isPlainObject(raw) ? raw : null),\n      };\n    } else if (resultKey) {\n      data = {\n        ...options?.extraFields,\n        ...(matcher.hdrs ? { Headers: unpackHeaders(response.headers) } : null),\n        [resultKey]: raw,\n      };\n    } else {\n      data = {\n        ...options?.extraFields,\n        ...(matcher.hdrs ? { Headers: unpackHeaders(response.headers) } : null),\n      };\n    }\n\n    if (\"err\" in matcher) {\n      const result = safeParse(\n        data,\n        (v: unknown) => matcher.schema.parse(v),\n        \"Response validation failed\",\n      );\n      return [result.ok ? { ok: false, error: result.value } : result, raw];\n    } else {\n      return [\n        safeParse(\n          data,\n          (v: unknown) => matcher.schema.parse(v),\n          \"Response validation failed\",\n        ),\n        raw,\n      ];\n    }\n  };\n}\n\nconst headerValRE = /, */;\n/**\n * Iterates over a Headers object and returns an object with all the header\n * entries. Values are represented as an array to account for repeated headers.\n */\nexport function unpackHeaders(headers: Headers): Record<string, string[]> {\n  const out: Record<string, string[]> = {};\n\n  for (const [k, v] of headers.entries()) {\n    out[k] = v.split(headerValRE);\n  }\n\n  return out;\n}\n\n/**\n * Discards the response body to free up resources.\n *\n * To learn why this is need, see the undici docs:\n * https://undici.nodejs.org/#/?id=garbage-collection\n */\nexport async function discardResponseBody(res: Response) {\n  const reader = res.body?.getReader();\n  if (reader == null) {\n    return;\n  }\n\n  try {\n    let done = false;\n    while (!done) {\n      const res = await reader.read();\n      done = res.done;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2808, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2813, "column": 0}, "map": {"version":3,"file":"security.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/lib/security.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as shared from \"../sdk/models/shared/index.js\";\n\nexport enum SecurityErrorCode {\n  Incomplete = \"incomplete\",\n  UnrecognisedSecurityType = \"unrecognized_security_type\",\n}\n\nexport class SecurityError extends Error {\n  constructor(\n    public code: SecurityErrorCode,\n    message: string,\n  ) {\n    super(message);\n    this.name = \"SecurityError\";\n  }\n\n  static incomplete(): SecurityError {\n    return new SecurityError(\n      SecurityErrorCode.Incomplete,\n      \"Security requirements not met in order to perform the operation\",\n    );\n  }\n  static unrecognizedType(type: string): SecurityError {\n    return new SecurityError(\n      SecurityErrorCode.UnrecognisedSecurityType,\n      `Unrecognised security type: ${type}`,\n    );\n  }\n}\n\nexport type SecurityState = {\n  basic: { username?: string | undefined; password?: string | undefined };\n  headers: Record<string, string>;\n  queryParams: Record<string, string>;\n  cookies: Record<string, string>;\n};\n\ntype SecurityInputBasic = {\n  type: \"http:basic\";\n  value:\n    | { username?: string | undefined; password?: string | undefined }\n    | null\n    | undefined;\n};\n\ntype SecurityInputBearer = {\n  type: \"http:bearer\";\n  value: string | null | undefined;\n  fieldName: string;\n};\n\ntype SecurityInputAPIKey = {\n  type: \"apiKey:header\" | \"apiKey:query\" | \"apiKey:cookie\";\n  value: string | null | undefined;\n  fieldName: string;\n};\n\ntype SecurityInputOIDC = {\n  type: \"openIdConnect\";\n  value: string | null | undefined;\n  fieldName: string;\n};\n\ntype SecurityInputOAuth2 = {\n  type: \"oauth2\";\n  value: string | null | undefined;\n  fieldName: string;\n};\n\ntype SecurityInputOAuth2ClientCredentials = {\n  type: \"oauth2:client_credentials\";\n  value: string | null | undefined;\n  fieldName: string;\n};\n\ntype SecurityInputCustom = {\n  type: \"http:custom\";\n  value: any | null | undefined;\n  fieldName: string;\n};\n\nexport type SecurityInput =\n  | SecurityInputBasic\n  | SecurityInputBearer\n  | SecurityInputAPIKey\n  | SecurityInputOAuth2\n  | SecurityInputOAuth2ClientCredentials\n  | SecurityInputOIDC\n  | SecurityInputCustom;\n\nexport function resolveSecurity(\n  ...options: SecurityInput[][]\n): SecurityState | null {\n  const state: SecurityState = {\n    basic: { username: \"\", password: \"\" },\n    headers: {},\n    queryParams: {},\n    cookies: {},\n  };\n\n  const option = options.find((opts) => {\n    return opts.every((o) => {\n      if (o.value == null) {\n        return false;\n      } else if (o.type === \"http:basic\") {\n        return o.value.username != null || o.value.password != null;\n      } else if (o.type === \"http:custom\") {\n        return null;\n      } else if (typeof o.value === \"string\") {\n        return !!o.value;\n      } else {\n        throw new Error(\n          `Unrecognized security type: ${o.type} (value type: ${typeof o\n            .value})`,\n        );\n      }\n    });\n  });\n  if (option == null) {\n    return null;\n  }\n\n  option.forEach((spec) => {\n    if (spec.value == null) {\n      return;\n    }\n\n    const { type } = spec;\n\n    switch (type) {\n      case \"apiKey:header\":\n        state.headers[spec.fieldName] = spec.value;\n        break;\n      case \"apiKey:query\":\n        state.queryParams[spec.fieldName] = spec.value;\n        break;\n      case \"apiKey:cookie\":\n        state.cookies[spec.fieldName] = spec.value;\n        break;\n      case \"http:basic\":\n        applyBasic(state, spec);\n        break;\n      case \"http:custom\":\n        break;\n      case \"http:bearer\":\n        applyBearer(state, spec);\n        break;\n      case \"oauth2\":\n        applyBearer(state, spec);\n        break;\n      case \"oauth2:client_credentials\":\n        break;\n      case \"openIdConnect\":\n        applyBearer(state, spec);\n        break;\n      default:\n        spec satisfies never;\n        throw SecurityError.unrecognizedType(type);\n    }\n  });\n\n  return state;\n}\n\nfunction applyBasic(\n  state: SecurityState,\n  spec: SecurityInputBasic,\n) {\n  if (spec.value == null) {\n    return;\n  }\n\n  state.basic = spec.value;\n}\n\nfunction applyBearer(\n  state: SecurityState,\n  spec: SecurityInputBearer | SecurityInputOAuth2 | SecurityInputOIDC,\n) {\n  if (spec.value == null) {\n    return;\n  }\n\n  let value = spec.value;\n  if (value.slice(0, 7).toLowerCase() !== \"bearer \") {\n    value = `Bearer ${value}`;\n  }\n\n  state.headers[spec.fieldName] = value;\n}\nexport function resolveGlobalSecurity(\n  security: Partial<shared.Security> | null | undefined,\n): SecurityState | null {\n  return resolveSecurity(\n    [\n      {\n        fieldName: \"unstructured-api-key\",\n        type: \"apiKey:header\",\n        value: security?.apiKeyAuth,\n      },\n    ],\n  );\n}\n\nexport async function extractSecurity<\n  T extends string | Record<string, unknown>,\n>(sec: T | (() => Promise<T>) | undefined): Promise<T | undefined> {\n  if (sec == null) {\n    return;\n  }\n\n  return typeof sec === \"function\" ? sec() : sec;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2939, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2944, "column": 0}, "map": {"version":3,"file":"primitives.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/lib/primitives.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nexport type Remap<Inp, Mapping extends { [k in keyof Inp]?: string | null }> = {\n  [k in keyof Inp as Mapping[k] extends string /* if we have a string mapping for this key then use it */\n    ? Mapping[k]\n    : Mapping[k] extends null /* if the mapping is to `null` then drop the key */\n    ? never\n    : k /* otherwise keep the key as-is */]: Inp[k];\n};\n\n/**\n * Converts or omits an object's keys according to a mapping.\n *\n * @param inp An object whose keys will be remapped\n * @param mappings A mapping of original keys to new keys. If a key is not present in the mapping, it will be left as is. If a key is mapped to `null`, it will be removed in the resulting object.\n * @returns A new object with keys remapped or omitted according to the mappings\n */\nexport function remap<\n  Inp extends Record<string, unknown>,\n  const Mapping extends { [k in keyof Inp]?: string | null },\n>(inp: Inp, mappings: Mapping): Remap<Inp, Mapping> {\n  let out: any = {};\n\n  if (!Object.keys(mappings).length) {\n    out = inp;\n    return out;\n  }\n\n  for (const [k, v] of Object.entries(inp)) {\n    const j = mappings[k];\n    if (j === null) {\n      continue;\n    }\n    out[j ?? k] = v;\n  }\n\n  return out;\n}\n"],"names":[],"mappings":";AAAA;;GAEG;;;;AAUH;;;;;;GAMG,CACH,SAAgB,KAAK,CAGnB,GAAQ,EAAE,QAAiB;IAC3B,IAAI,GAAG,GAAQ,CAAA,CAAE,CAAC;IAElB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;QAClC,GAAG,GAAG,GAAG,CAAC;QACV,OAAO,GAAG,CAAC;IACb,CAAC;IAED,KAAK,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAE,CAAC;QACzC,MAAM,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;QACtB,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;YACf,SAAS;QACX,CAAC;QACD,GAAG,CAAC,CAAC,KAAA,QAAD,CAAC,KAAA,KAAA,IAAD,CAAC,GAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IAClB,CAAC;IAED,OAAO,GAAG,CAAC;AACb,CAAC;AApBD,QAAA,KAAA,GAAA,MAoBC","ignoreList":[0]}},
    {"offset": {"line": 2973, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2978, "column": 0}, "map": {"version":3,"file":"blobs.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/sdk/types/blobs.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\n\nexport const blobLikeSchema: z.ZodType<Blob, z.ZodTypeDef, Blob> =\n  z.custom<Blob>(isBlobLike, {\n    message: \"expected a Blob, File or Blob-like object\",\n    fatal: true,\n  });\n\nexport function isBlobLike(val: unknown): val is Blob {\n  if (val instanceof Blob) {\n    return true;\n  }\n\n  if (typeof val !== \"object\" || val == null || !(Symbol.toStringTag in val)) {\n    return false;\n  }\n\n  const name = val[Symbol.toStringTag];\n  if (typeof name !== \"string\") {\n    return false;\n  }\n  if (name !== \"Blob\" && name !== \"File\") {\n    return false;\n  }\n\n  return \"stream\" in val && typeof val.stream === \"function\";\n}\n"],"names":[],"mappings":";AAAA;;GAEG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,MAAA,IAAA,6BAAyB;AAEZ,QAAA,cAAc,GACzB,CAAC,CAAC,MAAM,CAAO,UAAU,EAAE;IACzB,OAAO,EAAE,2CAA2C;IACpD,KAAK,EAAE,IAAI;CACZ,CAAC,CAAC;AAEL,SAAgB,UAAU,CAAC,GAAY;IACrC,IAAI,GAAG,YAAY,IAAI,EAAE,CAAC;QACxB,OAAO,IAAI,CAAC;IACd,CAAC;IAED,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC,WAAW,IAAI,GAAG,CAAC,EAAE,CAAC;QAC3E,OAAO,KAAK,CAAC;IACf,CAAC;IAED,MAAM,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IACrC,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE,CAAC;QAC7B,OAAO,KAAK,CAAC;IACf,CAAC;IACD,IAAI,IAAI,KAAK,MAAM,IAAI,IAAI,KAAK,MAAM,EAAE,CAAC;QACvC,OAAO,KAAK,CAAC;IACf,CAAC;IAED,OAAO,QAAQ,IAAI,GAAG,IAAI,OAAO,GAAG,CAAC,MAAM,KAAK,UAAU,CAAC;AAC7D,CAAC;AAlBD,QAAA,UAAA,GAAA,WAkBC","ignoreList":[0]}},
    {"offset": {"line": 3040, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3045, "column": 0}, "map": {"version":3,"file":"enums.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/sdk/types/enums.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\ndeclare const __brand: unique symbol;\nexport type Unrecognized<T> = T & { [__brand]: \"unrecognized\" };\n\nexport function catchUnrecognizedEnum<T>(value: T): Unrecognized<T> {\n  return value as Unrecognized<T>;\n}\n\ntype Prettify<T> = { [K in keyof T]: T[K] } & {};\nexport type ClosedEnum<T> = T[keyof T];\nexport type OpenEnum<T> =\n  | Prettify<T[keyof T]>\n  | Unrecognized<T[keyof T] extends number ? number : string>;\n"],"names":[],"mappings":";AAAA;;GAEG;;;;AAKH,SAAgB,qBAAqB,CAAI,KAAQ;IAC/C,OAAO,KAAwB,CAAC;AAClC,CAAC;AAFD,QAAA,qBAAA,GAAA,sBAEC","ignoreList":[0]}},
    {"offset": {"line": 3056, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3061, "column": 0}, "map": {"version":3,"file":"partitionparameters.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/sdk/models/shared/partitionparameters.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../../lib/primitives.js\";\nimport { blobLikeSchema } from \"../../types/blobs.js\";\nimport {\n  catchUnrecognizedEnum,\n  OpenEnum,\n  Unrecognized,\n} from \"../../types/enums.js\";\n\nexport enum ChunkingStrategy {\n  Basic = \"basic\",\n  ByPage = \"by_page\",\n  BySimilarity = \"by_similarity\",\n  ByTitle = \"by_title\",\n}\nexport type ChunkingStrategyOpen = OpenEnum<typeof ChunkingStrategy>;\n\nexport type Files = {\n  content: ReadableStream<Uint8Array> | Blob | ArrayBuffer | Uint8Array;\n  fileName: string;\n};\n\n/**\n * The format of the response. Supported formats are application/json and text/csv. Default: application/json.\n */\nexport enum OutputFormat {\n  ApplicationJson = \"application/json\",\n  TextCsv = \"text/csv\",\n}\n/**\n * The format of the response. Supported formats are application/json and text/csv. Default: application/json.\n */\nexport type OutputFormatOpen = OpenEnum<typeof OutputFormat>;\n\n/**\n * The strategy to use for partitioning PDF/image. Options are fast, hi_res, auto. Default: hi_res\n */\nexport enum Strategy {\n  Fast = \"fast\",\n  HiRes = \"hi_res\",\n  Auto = \"auto\",\n  OcrOnly = \"ocr_only\",\n}\n/**\n * The strategy to use for partitioning PDF/image. Options are fast, hi_res, auto. Default: hi_res\n */\nexport type StrategyOpen = OpenEnum<typeof Strategy>;\n\nexport type PartitionParameters = {\n  /**\n   * The file to extract\n   */\n  files: Files | Blob;\n  /**\n   * Use one of the supported strategies to chunk the returned elements after partitioning. When 'chunking_strategy' is not specified, no chunking is performed and any other chunking parameters provided are ignored. Supported strategies: 'basic', 'by_page', 'by_similarity', or 'by_title'\n   */\n  chunkingStrategy?: ChunkingStrategyOpen | null | undefined;\n  /**\n   * If chunking strategy is set, combine elements until a section reaches a length of n chars. Default: 500\n   */\n  combineUnderNChars?: number | null | undefined;\n  /**\n   * A hint about the content type to use (such as text/markdown), when there are problems processing a specific file. This value is a MIME type in the format type/subtype.\n   */\n  contentType?: string | null | undefined;\n  /**\n   * If `True`, return coordinates for each element extracted via OCR. Default: `False`\n   */\n  coordinates?: boolean | undefined;\n  /**\n   * The encoding method used to decode the text input. Default: utf-8\n   */\n  encoding?: string | null | undefined;\n  /**\n   * The types of elements to extract, for use in extracting image blocks as base64 encoded data stored in metadata fields.\n   */\n  extractImageBlockTypes?: Array<string> | undefined;\n  /**\n   * If file is gzipped, use this content type after unzipping.\n   */\n  gzUncompressedContentType?: string | null | undefined;\n  /**\n   * The name of the inference model used when strategy is hi_res\n   */\n  hiResModelName?: string | null | undefined;\n  /**\n   * When a chunking strategy is specified, each returned chunk will include the elements consolidated to form that chunk as `.metadata.orig_elements`. Default: true.\n   */\n  includeOrigElements?: boolean | null | undefined;\n  /**\n   * If true, the output will include page breaks if the filetype supports it. Default: false\n   */\n  includePageBreaks?: boolean | undefined;\n  /**\n   * When `True`, slide notes from .ppt and .pptx files will be included in the response. Default: `True`\n   */\n  includeSlideNotes?: boolean | undefined;\n  /**\n   * The languages present in the document, for use in partitioning and/or OCR. See the Tesseract documentation for a full list of languages.\n   */\n  languages?: Array<string> | undefined;\n  /**\n   * If chunking strategy is set, cut off new sections after reaching a length of n chars (hard max). Default: 500\n   */\n  maxCharacters?: number | null | undefined;\n  /**\n   * If chunking strategy is set, determines if sections can span multiple sections. Default: true\n   */\n  multipageSections?: boolean | undefined;\n  /**\n   * If chunking strategy is set, cut off new sections after reaching a length of n chars (soft max). Default: 1500\n   */\n  newAfterNChars?: number | null | undefined;\n  /**\n   * Deprecated! The languages present in the document, for use in partitioning and/or OCR\n   */\n  ocrLanguages?: Array<string> | undefined;\n  /**\n   * The format of the response. Supported formats are application/json and text/csv. Default: application/json.\n   */\n  outputFormat?: OutputFormatOpen | undefined;\n  /**\n   * Specifies the length of a string ('tail') to be drawn from each chunk and prefixed to the next chunk as a context-preserving mechanism. By default, this only applies to split-chunks where an oversized element is divided into multiple chunks by text-splitting. Default: 0\n   */\n  overlap?: number | undefined;\n  /**\n   * When `True`, apply overlap between 'normal' chunks formed from whole elements and not subject to text-splitting. Use this with caution as it entails a certain level of 'pollution' of otherwise clean semantic chunk boundaries. Default: False\n   */\n  overlapAll?: boolean | undefined;\n  /**\n   * Deprecated! Use skip_infer_table_types to opt out of table extraction for any file type. If False and strategy=hi_res, no Table Elements will be extracted from pdf files regardless of skip_infer_table_types contents.\n   */\n  pdfInferTableStructure?: boolean | undefined;\n  /**\n   * A value between 0.0 and 1.0 describing the minimum similarity two elements must have to be included in the same chunk. Note that similar elements may be separated to meet chunk-size criteria; this value can only guarantees that two elements with similarity below the threshold will appear in separate chunks.\n   */\n  similarityThreshold?: number | null | undefined;\n  /**\n   * The document types that you want to skip table extraction with. Default: []\n   */\n  skipInferTableTypes?: Array<string> | undefined;\n  /**\n   * When `split_pdf_page` is set to `True`, this parameter defines the behavior when some of the parallel requests fail. By default `split_pdf_allow_failed` is set to `False` and any failed request send to the API will make the whole process break and raise an Exception. If `split_pdf_allow_failed` is set to `True`, the errors encountered while sending parallel requests will not break the processing - the resuling list of Elements will miss the data from errored pages.\n   */\n  splitPdfAllowFailed?: boolean | undefined;\n  /**\n   * Number of maximum concurrent requests made when splitting PDF. Ignored on backend.\n   */\n  splitPdfConcurrencyLevel?: number | undefined;\n  /**\n   * Should the pdf file be split at client. Ignored on backend.\n   */\n  splitPdfPage?: boolean | undefined;\n  /**\n   * When `split_pdf_page is set to `True`, this parameter selects a subset of the pdf to send to the API. The parameter is a list of 2 integers within the range [1, length_of_pdf]. An Error is thrown if the given range is invalid. Ignored on backend.\n   */\n  splitPdfPageRange?: Array<number> | undefined;\n  /**\n   * When PDF is split into pages before sending it into the API, providing this information will allow the page number to be assigned correctly. Introduced in 1.0.27.\n   */\n  startingPageNumber?: number | null | undefined;\n  /**\n   * The strategy to use for partitioning PDF/image. Options are fast, hi_res, auto. Default: hi_res\n   */\n  strategy?: StrategyOpen | undefined;\n  /**\n   * When `True`, assign UUIDs to element IDs, which guarantees their uniqueness (useful when using them as primary keys in database). Otherwise a SHA-256 of element text is used. Default: `False`\n   */\n  uniqueElementIds?: boolean | undefined;\n  /**\n   * If `True`, will retain the XML tags in the output. Otherwise it will simply extract the text from within the tags. Only applies to XML documents.\n   */\n  xmlKeepTags?: boolean | undefined;\n};\n\n/** @internal */\nexport const ChunkingStrategy$inboundSchema: z.ZodType<\n  ChunkingStrategyOpen,\n  z.ZodTypeDef,\n  unknown\n> = z\n  .union([\n    z.nativeEnum(ChunkingStrategy),\n    z.string().transform(catchUnrecognizedEnum),\n  ]);\n\n/** @internal */\nexport const ChunkingStrategy$outboundSchema: z.ZodType<\n  ChunkingStrategyOpen,\n  z.ZodTypeDef,\n  ChunkingStrategyOpen\n> = z.union([\n  z.nativeEnum(ChunkingStrategy),\n  z.string().and(z.custom<Unrecognized<string>>()),\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ChunkingStrategy$ {\n  /** @deprecated use `ChunkingStrategy$inboundSchema` instead. */\n  export const inboundSchema = ChunkingStrategy$inboundSchema;\n  /** @deprecated use `ChunkingStrategy$outboundSchema` instead. */\n  export const outboundSchema = ChunkingStrategy$outboundSchema;\n}\n\n/** @internal */\nexport const Files$inboundSchema: z.ZodType<Files, z.ZodTypeDef, unknown> = z\n  .object({\n    content: z.union([\n      z.instanceof(ReadableStream<Uint8Array>),\n      z.instanceof(Blob),\n      z.instanceof(ArrayBuffer),\n      z.instanceof(Uint8Array),\n    ]),\n    fileName: z.string(),\n  });\n\n/** @internal */\nexport type Files$Outbound = {\n  content: ReadableStream<Uint8Array> | Blob | ArrayBuffer | Uint8Array;\n  fileName: string;\n};\n\n/** @internal */\nexport const Files$outboundSchema: z.ZodType<\n  Files$Outbound,\n  z.ZodTypeDef,\n  Files\n> = z.object({\n  content: z.union([\n    z.instanceof(ReadableStream<Uint8Array>),\n    z.instanceof(Blob),\n    z.instanceof(ArrayBuffer),\n    z.instanceof(Uint8Array),\n  ]),\n  fileName: z.string(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Files$ {\n  /** @deprecated use `Files$inboundSchema` instead. */\n  export const inboundSchema = Files$inboundSchema;\n  /** @deprecated use `Files$outboundSchema` instead. */\n  export const outboundSchema = Files$outboundSchema;\n  /** @deprecated use `Files$Outbound` instead. */\n  export type Outbound = Files$Outbound;\n}\n\n/** @internal */\nexport const OutputFormat$inboundSchema: z.ZodType<\n  OutputFormatOpen,\n  z.ZodTypeDef,\n  unknown\n> = z\n  .union([\n    z.nativeEnum(OutputFormat),\n    z.string().transform(catchUnrecognizedEnum),\n  ]);\n\n/** @internal */\nexport const OutputFormat$outboundSchema: z.ZodType<\n  OutputFormatOpen,\n  z.ZodTypeDef,\n  OutputFormatOpen\n> = z.union([\n  z.nativeEnum(OutputFormat),\n  z.string().and(z.custom<Unrecognized<string>>()),\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OutputFormat$ {\n  /** @deprecated use `OutputFormat$inboundSchema` instead. */\n  export const inboundSchema = OutputFormat$inboundSchema;\n  /** @deprecated use `OutputFormat$outboundSchema` instead. */\n  export const outboundSchema = OutputFormat$outboundSchema;\n}\n\n/** @internal */\nexport const Strategy$inboundSchema: z.ZodType<\n  StrategyOpen,\n  z.ZodTypeDef,\n  unknown\n> = z\n  .union([\n    z.nativeEnum(Strategy),\n    z.string().transform(catchUnrecognizedEnum),\n  ]);\n\n/** @internal */\nexport const Strategy$outboundSchema: z.ZodType<\n  StrategyOpen,\n  z.ZodTypeDef,\n  StrategyOpen\n> = z.union([\n  z.nativeEnum(Strategy),\n  z.string().and(z.custom<Unrecognized<string>>()),\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Strategy$ {\n  /** @deprecated use `Strategy$inboundSchema` instead. */\n  export const inboundSchema = Strategy$inboundSchema;\n  /** @deprecated use `Strategy$outboundSchema` instead. */\n  export const outboundSchema = Strategy$outboundSchema;\n}\n\n/** @internal */\nexport const PartitionParameters$inboundSchema: z.ZodType<\n  PartitionParameters,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  files: z.lazy(() => Files$inboundSchema),\n  chunking_strategy: z.nullable(ChunkingStrategy$inboundSchema).optional(),\n  combine_under_n_chars: z.nullable(z.number().int()).optional(),\n  content_type: z.nullable(z.string()).optional(),\n  coordinates: z.boolean().default(false),\n  encoding: z.nullable(z.string()).optional(),\n  extract_image_block_types: z.array(z.string()).optional(),\n  gz_uncompressed_content_type: z.nullable(z.string()).optional(),\n  hi_res_model_name: z.nullable(z.string()).optional(),\n  include_orig_elements: z.nullable(z.boolean()).optional(),\n  include_page_breaks: z.boolean().default(false),\n  include_slide_notes: z.boolean().default(true),\n  languages: z.array(z.string()).optional(),\n  max_characters: z.nullable(z.number().int()).optional(),\n  multipage_sections: z.boolean().default(true),\n  new_after_n_chars: z.nullable(z.number().int()).optional(),\n  ocr_languages: z.array(z.string()).optional(),\n  output_format: OutputFormat$inboundSchema.default(\n    OutputFormat.ApplicationJson,\n  ),\n  overlap: z.number().int().default(0),\n  overlap_all: z.boolean().default(false),\n  pdf_infer_table_structure: z.boolean().default(true),\n  similarity_threshold: z.nullable(z.number()).optional(),\n  skip_infer_table_types: z.array(z.string()).optional(),\n  split_pdf_allow_failed: z.boolean().default(false),\n  split_pdf_concurrency_level: z.number().int().default(5),\n  split_pdf_page: z.boolean().default(true),\n  split_pdf_page_range: z.array(z.number().int()).optional(),\n  starting_page_number: z.nullable(z.number().int()).optional(),\n  strategy: Strategy$inboundSchema.default(Strategy.HiRes),\n  unique_element_ids: z.boolean().default(false),\n  xml_keep_tags: z.boolean().default(false),\n}).transform((v) => {\n  return remap$(v, {\n    \"chunking_strategy\": \"chunkingStrategy\",\n    \"combine_under_n_chars\": \"combineUnderNChars\",\n    \"content_type\": \"contentType\",\n    \"extract_image_block_types\": \"extractImageBlockTypes\",\n    \"gz_uncompressed_content_type\": \"gzUncompressedContentType\",\n    \"hi_res_model_name\": \"hiResModelName\",\n    \"include_orig_elements\": \"includeOrigElements\",\n    \"include_page_breaks\": \"includePageBreaks\",\n    \"include_slide_notes\": \"includeSlideNotes\",\n    \"max_characters\": \"maxCharacters\",\n    \"multipage_sections\": \"multipageSections\",\n    \"new_after_n_chars\": \"newAfterNChars\",\n    \"ocr_languages\": \"ocrLanguages\",\n    \"output_format\": \"outputFormat\",\n    \"overlap_all\": \"overlapAll\",\n    \"pdf_infer_table_structure\": \"pdfInferTableStructure\",\n    \"similarity_threshold\": \"similarityThreshold\",\n    \"skip_infer_table_types\": \"skipInferTableTypes\",\n    \"split_pdf_allow_failed\": \"splitPdfAllowFailed\",\n    \"split_pdf_concurrency_level\": \"splitPdfConcurrencyLevel\",\n    \"split_pdf_page\": \"splitPdfPage\",\n    \"split_pdf_page_range\": \"splitPdfPageRange\",\n    \"starting_page_number\": \"startingPageNumber\",\n    \"unique_element_ids\": \"uniqueElementIds\",\n    \"xml_keep_tags\": \"xmlKeepTags\",\n  });\n});\n\n/** @internal */\nexport type PartitionParameters$Outbound = {\n  files: Files$Outbound | Blob;\n  chunking_strategy?: string | null | undefined;\n  combine_under_n_chars?: number | null | undefined;\n  content_type?: string | null | undefined;\n  coordinates: boolean;\n  encoding?: string | null | undefined;\n  extract_image_block_types?: Array<string> | undefined;\n  gz_uncompressed_content_type?: string | null | undefined;\n  hi_res_model_name?: string | null | undefined;\n  include_orig_elements?: boolean | null | undefined;\n  include_page_breaks: boolean;\n  include_slide_notes: boolean;\n  languages?: Array<string> | undefined;\n  max_characters?: number | null | undefined;\n  multipage_sections: boolean;\n  new_after_n_chars?: number | null | undefined;\n  ocr_languages?: Array<string> | undefined;\n  output_format: string;\n  overlap: number;\n  overlap_all: boolean;\n  pdf_infer_table_structure: boolean;\n  similarity_threshold?: number | null | undefined;\n  skip_infer_table_types?: Array<string> | undefined;\n  split_pdf_allow_failed: boolean;\n  split_pdf_concurrency_level: number;\n  split_pdf_page: boolean;\n  split_pdf_page_range?: Array<number> | undefined;\n  starting_page_number?: number | null | undefined;\n  strategy: string;\n  unique_element_ids: boolean;\n  xml_keep_tags: boolean;\n};\n\n/** @internal */\nexport const PartitionParameters$outboundSchema: z.ZodType<\n  PartitionParameters$Outbound,\n  z.ZodTypeDef,\n  PartitionParameters\n> = z.object({\n  files: z.lazy(() => Files$outboundSchema).or(blobLikeSchema),\n  chunkingStrategy: z.nullable(ChunkingStrategy$outboundSchema).optional(),\n  combineUnderNChars: z.nullable(z.number().int()).optional(),\n  contentType: z.nullable(z.string()).optional(),\n  coordinates: z.boolean().default(false),\n  encoding: z.nullable(z.string()).optional(),\n  extractImageBlockTypes: z.array(z.string()).optional(),\n  gzUncompressedContentType: z.nullable(z.string()).optional(),\n  hiResModelName: z.nullable(z.string()).optional(),\n  includeOrigElements: z.nullable(z.boolean()).optional(),\n  includePageBreaks: z.boolean().default(false),\n  includeSlideNotes: z.boolean().default(true),\n  languages: z.array(z.string()).optional(),\n  maxCharacters: z.nullable(z.number().int()).optional(),\n  multipageSections: z.boolean().default(true),\n  newAfterNChars: z.nullable(z.number().int()).optional(),\n  ocrLanguages: z.array(z.string()).optional(),\n  outputFormat: OutputFormat$outboundSchema.default(\n    OutputFormat.ApplicationJson,\n  ),\n  overlap: z.number().int().default(0),\n  overlapAll: z.boolean().default(false),\n  pdfInferTableStructure: z.boolean().default(true),\n  similarityThreshold: z.nullable(z.number()).optional(),\n  skipInferTableTypes: z.array(z.string()).optional(),\n  splitPdfAllowFailed: z.boolean().default(false),\n  splitPdfConcurrencyLevel: z.number().int().default(5),\n  splitPdfPage: z.boolean().default(true),\n  splitPdfPageRange: z.array(z.number().int()).optional(),\n  startingPageNumber: z.nullable(z.number().int()).optional(),\n  strategy: Strategy$outboundSchema.default(Strategy.HiRes),\n  uniqueElementIds: z.boolean().default(false),\n  xmlKeepTags: z.boolean().default(false),\n}).transform((v) => {\n  return remap$(v, {\n    chunkingStrategy: \"chunking_strategy\",\n    combineUnderNChars: \"combine_under_n_chars\",\n    contentType: \"content_type\",\n    extractImageBlockTypes: \"extract_image_block_types\",\n    gzUncompressedContentType: \"gz_uncompressed_content_type\",\n    hiResModelName: \"hi_res_model_name\",\n    includeOrigElements: \"include_orig_elements\",\n    includePageBreaks: \"include_page_breaks\",\n    includeSlideNotes: \"include_slide_notes\",\n    maxCharacters: \"max_characters\",\n    multipageSections: \"multipage_sections\",\n    newAfterNChars: \"new_after_n_chars\",\n    ocrLanguages: \"ocr_languages\",\n    outputFormat: \"output_format\",\n    overlapAll: \"overlap_all\",\n    pdfInferTableStructure: \"pdf_infer_table_structure\",\n    similarityThreshold: \"similarity_threshold\",\n    skipInferTableTypes: \"skip_infer_table_types\",\n    splitPdfAllowFailed: \"split_pdf_allow_failed\",\n    splitPdfConcurrencyLevel: \"split_pdf_concurrency_level\",\n    splitPdfPage: \"split_pdf_page\",\n    splitPdfPageRange: \"split_pdf_page_range\",\n    startingPageNumber: \"starting_page_number\",\n    uniqueElementIds: \"unique_element_ids\",\n    xmlKeepTags: \"xml_keep_tags\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace PartitionParameters$ {\n  /** @deprecated use `PartitionParameters$inboundSchema` instead. */\n  export const inboundSchema = PartitionParameters$inboundSchema;\n  /** @deprecated use `PartitionParameters$outboundSchema` instead. */\n  export const outboundSchema = PartitionParameters$outboundSchema;\n  /** @deprecated use `PartitionParameters$Outbound` instead. */\n  export type Outbound = PartitionParameters$Outbound;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3332, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3337, "column": 0}, "map": {"version":3,"file":"security.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/sdk/models/shared/security.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../../lib/primitives.js\";\n\nexport type Security = {\n  apiKeyAuth?: string | undefined;\n};\n\n/** @internal */\nexport const Security$inboundSchema: z.ZodType<\n  Security,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  ApiKeyAuth: z.string().optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"ApiKeyAuth\": \"apiKeyAuth\",\n  });\n});\n\n/** @internal */\nexport type Security$Outbound = {\n  ApiKeyAuth?: string | undefined;\n};\n\n/** @internal */\nexport const Security$outboundSchema: z.ZodType<\n  Security$Outbound,\n  z.ZodTypeDef,\n  Security\n> = z.object({\n  apiKeyAuth: z.string().optional(),\n}).transform((v) => {\n  return remap$(v, {\n    apiKeyAuth: \"ApiKeyAuth\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Security$ {\n  /** @deprecated use `Security$inboundSchema` instead. */\n  export const inboundSchema = Security$inboundSchema;\n  /** @deprecated use `Security$outboundSchema` instead. */\n  export const outboundSchema = Security$outboundSchema;\n  /** @deprecated use `Security$Outbound` instead. */\n  export type Outbound = Security$Outbound;\n}\n"],"names":[],"mappings":";AAAA;;GAEG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,MAAA,IAAA,6BAAyB;AACzB,MAAA,wDAA6D;AAM7D,cAAA,EAAgB,CACH,QAAA,sBAAsB,GAI/B,CAAC,CAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;CAClC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,OAAO,CAAA,GAAA,gBAAA,KAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,YAAY;KAC3B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAOH,cAAA,EAAgB,CACH,QAAA,uBAAuB,GAIhC,CAAC,CAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;CAClC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,OAAO,CAAA,GAAA,gBAAA,KAAM,EAAC,CAAC,EAAE;QACf,UAAU,EAAE,YAAY;KACzB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH;;;GAGG,CACH,IAAiB,SAAS,CAOzB;AAPD,CAAA,SAAiB,SAAS;IACxB,sDAAA,EAAwD,CAC3C,UAAA,aAAa,GAAG,QAAA,sBAAsB,CAAC;IACpD,uDAAA,EAAyD,CAC5C,UAAA,cAAc,GAAG,QAAA,uBAAuB,CAAC;AAGxD,CAAC,EAPgB,SAAS,IAAA,CAAA,QAAA,SAAA,GAAT,SAAS,GAAA,CAAA,CAAA,GAOzB","ignoreList":[0]}},
    {"offset": {"line": 3401, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3406, "column": 0}, "map": {"version":3,"file":"validationerror.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/sdk/models/shared/validationerror.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\n\nexport type Loc = string | number;\n\nexport type ValidationError = {\n  loc: Array<string | number>;\n  msg: string;\n  type: string;\n};\n\n/** @internal */\nexport const Loc$inboundSchema: z.ZodType<Loc, z.ZodTypeDef, unknown> = z.union(\n  [z.string(), z.number().int()],\n);\n\n/** @internal */\nexport type Loc$Outbound = string | number;\n\n/** @internal */\nexport const Loc$outboundSchema: z.ZodType<Loc$Outbound, z.ZodTypeDef, Loc> = z\n  .union([z.string(), z.number().int()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Loc$ {\n  /** @deprecated use `Loc$inboundSchema` instead. */\n  export const inboundSchema = Loc$inboundSchema;\n  /** @deprecated use `Loc$outboundSchema` instead. */\n  export const outboundSchema = Loc$outboundSchema;\n  /** @deprecated use `Loc$Outbound` instead. */\n  export type Outbound = Loc$Outbound;\n}\n\n/** @internal */\nexport const ValidationError$inboundSchema: z.ZodType<\n  ValidationError,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  loc: z.array(z.union([z.string(), z.number().int()])),\n  msg: z.string(),\n  type: z.string(),\n});\n\n/** @internal */\nexport type ValidationError$Outbound = {\n  loc: Array<string | number>;\n  msg: string;\n  type: string;\n};\n\n/** @internal */\nexport const ValidationError$outboundSchema: z.ZodType<\n  ValidationError$Outbound,\n  z.ZodTypeDef,\n  ValidationError\n> = z.object({\n  loc: z.array(z.union([z.string(), z.number().int()])),\n  msg: z.string(),\n  type: z.string(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ValidationError$ {\n  /** @deprecated use `ValidationError$inboundSchema` instead. */\n  export const inboundSchema = ValidationError$inboundSchema;\n  /** @deprecated use `ValidationError$outboundSchema` instead. */\n  export const outboundSchema = ValidationError$outboundSchema;\n  /** @deprecated use `ValidationError$Outbound` instead. */\n  export type Outbound = ValidationError$Outbound;\n}\n"],"names":[],"mappings":";AAAA;;GAEG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,MAAA,IAAA,6BAAyB;AAUzB,cAAA,EAAgB,CACH,QAAA,iBAAiB,GAA0C,CAAC,CAAC,KAAK,CAC7E;IAAC,CAAC,CAAC,MAAM,EAAE;IAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;CAAC,CAC/B,CAAC;AAKF,cAAA,EAAgB,CACH,QAAA,kBAAkB,GAA+C,CAAC,CAC5E,KAAK,CAAC;IAAC,CAAC,CAAC,MAAM,EAAE;IAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;CAAC,CAAC,CAAC;AAEzC;;;GAGG,CACH,IAAiB,IAAI,CAOpB;AAPD,CAAA,SAAiB,IAAI;IACnB,iDAAA,EAAmD,CACtC,KAAA,aAAa,GAAG,QAAA,iBAAiB,CAAC;IAC/C,kDAAA,EAAoD,CACvC,KAAA,cAAc,GAAG,QAAA,kBAAkB,CAAC;AAGnD,CAAC,EAPgB,IAAI,IAAA,CAAA,QAAA,IAAA,GAAJ,IAAI,GAAA,CAAA,CAAA,GAOpB;AAED,cAAA,EAAgB,CACH,QAAA,6BAA6B,GAItC,CAAC,CAAC,MAAM,CAAC;IACX,GAAG,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;QAAC,CAAC,CAAC,MAAM,EAAE;QAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;KAAC,CAAC,CAAC;IACrD,GAAG,EAAE,CAAC,CAAC,MAAM,EAAE;IACf,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE;CACjB,CAAC,CAAC;AASH,cAAA,EAAgB,CACH,QAAA,8BAA8B,GAIvC,CAAC,CAAC,MAAM,CAAC;IACX,GAAG,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;QAAC,CAAC,CAAC,MAAM,EAAE;QAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;KAAC,CAAC,CAAC;IACrD,GAAG,EAAE,CAAC,CAAC,MAAM,EAAE;IACf,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE;CACjB,CAAC,CAAC;AAEH;;;GAGG,CACH,IAAiB,gBAAgB,CAOhC;AAPD,CAAA,SAAiB,gBAAgB;IAC/B,6DAAA,EAA+D,CAClD,iBAAA,aAAa,GAAG,QAAA,6BAA6B,CAAC;IAC3D,8DAAA,EAAgE,CACnD,iBAAA,cAAc,GAAG,QAAA,8BAA8B,CAAC;AAG/D,CAAC,EAPgB,gBAAgB,IAAA,CAAA,QAAA,gBAAA,GAAhB,gBAAgB,GAAA,CAAA,CAAA,GAOhC","ignoreList":[0]}},
    {"offset": {"line": 3487, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3492, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/sdk/models/shared/index.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nexport * from \"./partitionparameters.js\";\nexport * from \"./security.js\";\nexport * from \"./validationerror.js\";\n"],"names":[],"mappings":";AAAA;;GAEG;;;;;;;;;;;;;;;;;;;;;;AAEH,kJAAA,SAAyC;AACzC,uIAAA,SAA8B;AAC9B,8IAAA,SAAqC","ignoreList":[0]}},
    {"offset": {"line": 3520, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3525, "column": 0}, "map": {"version":3,"file":"httpvalidationerror.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/sdk/models/errors/httpvalidationerror.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport * as shared from \"../shared/index.js\";\n\nexport type Detail = Array<shared.ValidationError> | string;\n\nexport type HTTPValidationErrorData = {\n  detail?: Array<shared.ValidationError> | string | undefined;\n};\n\nexport class HTTPValidationError extends Error {\n  detail?: Array<shared.ValidationError> | string | undefined;\n\n  /** The original data that was passed to this error instance. */\n  data$: HTTPValidationErrorData;\n\n  constructor(err: HTTPValidationErrorData) {\n    const message = \"message\" in err && typeof err.message === \"string\"\n      ? err.message\n      : `API error occurred: ${JSON.stringify(err)}`;\n    super(message);\n    this.data$ = err;\n\n    if (err.detail != null) this.detail = err.detail;\n\n    this.name = \"HTTPValidationError\";\n  }\n}\n\n/** @internal */\nexport const Detail$inboundSchema: z.ZodType<Detail, z.ZodTypeDef, unknown> = z\n  .union([z.array(shared.ValidationError$inboundSchema), z.string()]);\n\n/** @internal */\nexport type Detail$Outbound = Array<shared.ValidationError$Outbound> | string;\n\n/** @internal */\nexport const Detail$outboundSchema: z.ZodType<\n  Detail$Outbound,\n  z.ZodTypeDef,\n  Detail\n> = z.union([z.array(shared.ValidationError$outboundSchema), z.string()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Detail$ {\n  /** @deprecated use `Detail$inboundSchema` instead. */\n  export const inboundSchema = Detail$inboundSchema;\n  /** @deprecated use `Detail$outboundSchema` instead. */\n  export const outboundSchema = Detail$outboundSchema;\n  /** @deprecated use `Detail$Outbound` instead. */\n  export type Outbound = Detail$Outbound;\n}\n\n/** @internal */\nexport const HTTPValidationError$inboundSchema: z.ZodType<\n  HTTPValidationError,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  detail: z.union([z.array(shared.ValidationError$inboundSchema), z.string()])\n    .optional(),\n})\n  .transform((v) => {\n    return new HTTPValidationError(v);\n  });\n\n/** @internal */\nexport type HTTPValidationError$Outbound = {\n  detail?: Array<shared.ValidationError$Outbound> | string | undefined;\n};\n\n/** @internal */\nexport const HTTPValidationError$outboundSchema: z.ZodType<\n  HTTPValidationError$Outbound,\n  z.ZodTypeDef,\n  HTTPValidationError\n> = z.instanceof(HTTPValidationError)\n  .transform(v => v.data$)\n  .pipe(z.object({\n    detail: z.union([\n      z.array(shared.ValidationError$outboundSchema),\n      z.string(),\n    ]).optional(),\n  }));\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace HTTPValidationError$ {\n  /** @deprecated use `HTTPValidationError$inboundSchema` instead. */\n  export const inboundSchema = HTTPValidationError$inboundSchema;\n  /** @deprecated use `HTTPValidationError$outboundSchema` instead. */\n  export const outboundSchema = HTTPValidationError$outboundSchema;\n  /** @deprecated use `HTTPValidationError$Outbound` instead. */\n  export type Outbound = HTTPValidationError$Outbound;\n}\n"],"names":[],"mappings":";AAAA;;GAEG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,MAAA,IAAA,6BAAyB;AACzB,MAAA,SAAA,4CAA6C;AAQ7C,MAAa,mBAAoB,SAAQ,KAAK;IAM5C,YAAY,GAA4B,CAAA;QACtC,MAAM,OAAO,GAAG,SAAS,IAAI,GAAG,IAAI,OAAO,GAAG,CAAC,OAAO,KAAK,QAAQ,GAC/D,GAAG,CAAC,OAAO,GACX,CAAA,oBAAA,EAAuB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC;QACjD,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QAEjB,IAAI,GAAG,CAAC,MAAM,IAAI,IAAI,EAAE,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;QAEjD,IAAI,CAAC,IAAI,GAAG,qBAAqB,CAAC;IACpC,CAAC;CACF;AAjBD,QAAA,mBAAA,GAAA,oBAiBC;AAED,cAAA,EAAgB,CACH,QAAA,oBAAoB,GAA6C,CAAC,CAC5E,KAAK,CAAC;IAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,6BAA6B,CAAC;IAAE,CAAC,CAAC,MAAM,EAAE;CAAC,CAAC,CAAC;AAKtE,cAAA,EAAgB,CACH,QAAA,qBAAqB,GAI9B,CAAC,CAAC,KAAK,CAAC;IAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,8BAA8B,CAAC;IAAE,CAAC,CAAC,MAAM,EAAE;CAAC,CAAC,CAAC;AAE1E;;;GAGG,CACH,IAAiB,OAAO,CAOvB;AAPD,CAAA,SAAiB,OAAO;IACtB,oDAAA,EAAsD,CACzC,QAAA,aAAa,GAAG,QAAA,oBAAoB,CAAC;IAClD,qDAAA,EAAuD,CAC1C,QAAA,cAAc,GAAG,QAAA,qBAAqB,CAAC;AAGtD,CAAC,EAPgB,OAAO,IAAA,CAAA,QAAA,OAAA,GAAP,OAAO,GAAA,CAAA,CAAA,GAOvB;AAED,cAAA,EAAgB,CACH,QAAA,iCAAiC,GAI1C,CAAC,CAAC,MAAM,CAAC;IACX,MAAM,EAAE,CAAC,CAAC,KAAK,CAAC;QAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,6BAA6B,CAAC;QAAE,CAAC,CAAC,MAAM,EAAE;KAAC,CAAC,CACzE,QAAQ,EAAE;CACd,CAAC,CACC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACf,OAAO,IAAI,mBAAmB,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC;AAOL,cAAA,EAAgB,CACH,QAAA,kCAAkC,GAI3C,CAAC,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAClC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,KAAK,CAAC,CACvB,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC;IACb,MAAM,EAAE,CAAC,CAAC,KAAK,CAAC;QACd,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,8BAA8B,CAAC;QAC9C,CAAC,CAAC,MAAM,EAAE;KACX,CAAC,CAAC,QAAQ,EAAE;CACd,CAAC,CAAC,CAAC;AAEN;;;GAGG,CACH,IAAiB,oBAAoB,CAOpC;AAPD,CAAA,SAAiB,oBAAoB;IACnC,iEAAA,EAAmE,CACtD,qBAAA,aAAa,GAAG,QAAA,iCAAiC,CAAC;IAC/D,kEAAA,EAAoE,CACvD,qBAAA,cAAc,GAAG,QAAA,kCAAkC,CAAC;AAGnE,CAAC,EAPgB,oBAAoB,IAAA,CAAA,QAAA,oBAAA,GAApB,oBAAoB,GAAA,CAAA,CAAA,GAOpC","ignoreList":[0]}},
    {"offset": {"line": 3615, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3620, "column": 0}, "map": {"version":3,"file":"servererror.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/sdk/models/errors/servererror.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\n\nexport type ServerErrorData = {\n  detail?: string | undefined;\n};\n\nexport class ServerError extends Error {\n  detail?: string | undefined;\n\n  /** The original data that was passed to this error instance. */\n  data$: ServerErrorData;\n\n  constructor(err: ServerErrorData) {\n    const message = \"message\" in err && typeof err.message === \"string\"\n      ? err.message\n      : `API error occurred: ${JSON.stringify(err)}`;\n    super(message);\n    this.data$ = err;\n\n    if (err.detail != null) this.detail = err.detail;\n\n    this.name = \"ServerError\";\n  }\n}\n\n/** @internal */\nexport const ServerError$inboundSchema: z.ZodType<\n  ServerError,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  detail: z.string().optional(),\n})\n  .transform((v) => {\n    return new ServerError(v);\n  });\n\n/** @internal */\nexport type ServerError$Outbound = {\n  detail?: string | undefined;\n};\n\n/** @internal */\nexport const ServerError$outboundSchema: z.ZodType<\n  ServerError$Outbound,\n  z.ZodTypeDef,\n  ServerError\n> = z.instanceof(ServerError)\n  .transform(v => v.data$)\n  .pipe(z.object({\n    detail: z.string().optional(),\n  }));\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ServerError$ {\n  /** @deprecated use `ServerError$inboundSchema` instead. */\n  export const inboundSchema = ServerError$inboundSchema;\n  /** @deprecated use `ServerError$outboundSchema` instead. */\n  export const outboundSchema = ServerError$outboundSchema;\n  /** @deprecated use `ServerError$Outbound` instead. */\n  export type Outbound = ServerError$Outbound;\n}\n"],"names":[],"mappings":";AAAA;;GAEG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,MAAA,IAAA,6BAAyB;AAMzB,MAAa,WAAY,SAAQ,KAAK;IAMpC,YAAY,GAAoB,CAAA;QAC9B,MAAM,OAAO,GAAG,SAAS,IAAI,GAAG,IAAI,OAAO,GAAG,CAAC,OAAO,KAAK,QAAQ,GAC/D,GAAG,CAAC,OAAO,GACX,CAAA,oBAAA,EAAuB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC;QACjD,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QAEjB,IAAI,GAAG,CAAC,MAAM,IAAI,IAAI,EAAE,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;QAEjD,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC;IAC5B,CAAC;CACF;AAjBD,QAAA,WAAA,GAAA,YAiBC;AAED,cAAA,EAAgB,CACH,QAAA,yBAAyB,GAIlC,CAAC,CAAC,MAAM,CAAC;IACX,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;CAC9B,CAAC,CACC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACf,OAAO,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC;AAOL,cAAA,EAAgB,CACH,QAAA,0BAA0B,GAInC,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAC1B,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,KAAK,CAAC,CACvB,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC;IACb,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;CAC9B,CAAC,CAAC,CAAC;AAEN;;;GAGG,CACH,IAAiB,YAAY,CAO5B;AAPD,CAAA,SAAiB,YAAY;IAC3B,yDAAA,EAA2D,CAC9C,aAAA,aAAa,GAAG,QAAA,yBAAyB,CAAC;IACvD,0DAAA,EAA4D,CAC/C,aAAA,cAAc,GAAG,QAAA,0BAA0B,CAAC;AAG3D,CAAC,EAPgB,YAAY,IAAA,CAAA,QAAA,YAAA,GAAZ,YAAY,GAAA,CAAA,CAAA,GAO5B","ignoreList":[0]}},
    {"offset": {"line": 3687, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3692, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/sdk/models/errors/index.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nexport * from \"./httpclienterrors.js\";\nexport * from \"./httpvalidationerror.js\";\nexport * from \"./sdkerror.js\";\nexport * from \"./sdkvalidationerror.js\";\nexport * from \"./servererror.js\";\n"],"names":[],"mappings":";AAAA;;GAEG;;;;;;;;;;;;;;;;;;;;;;AAEH,+IAAA,SAAsC;AACtC,kJAAA,SAAyC;AACzC,uIAAA,SAA8B;AAC9B,iJAAA,SAAwC;AACxC,0IAAA,SAAiC","ignoreList":[0]}},
    {"offset": {"line": 3722, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3727, "column": 0}, "map": {"version":3,"file":"partition.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/sdk/models/operations/partition.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../../lib/primitives.js\";\nimport * as shared from \"../shared/index.js\";\n\nexport type PartitionRequest = {\n  partitionParameters: shared.PartitionParameters;\n  unstructuredApiKey?: string | null | undefined;\n};\n\nexport type PartitionResponse = {\n  /**\n   * HTTP response content type for this operation\n   */\n  contentType: string;\n  /**\n   * Successful Response\n   */\n  elements?: Array<{ [k: string]: any }> | undefined;\n  /**\n   * HTTP response status code for this operation\n   */\n  statusCode: number;\n  /**\n   * Raw HTTP response; suitable for custom response parsing\n   */\n  rawResponse: Response;\n};\n\n/** @internal */\nexport const PartitionRequest$inboundSchema: z.ZodType<\n  PartitionRequest,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  partition_parameters: shared.PartitionParameters$inboundSchema,\n  \"unstructured-api-key\": z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"partition_parameters\": \"partitionParameters\",\n    \"unstructured-api-key\": \"unstructuredApiKey\",\n  });\n});\n\n/** @internal */\nexport type PartitionRequest$Outbound = {\n  partition_parameters: shared.PartitionParameters$Outbound;\n  \"unstructured-api-key\"?: string | null | undefined;\n};\n\n/** @internal */\nexport const PartitionRequest$outboundSchema: z.ZodType<\n  PartitionRequest$Outbound,\n  z.ZodTypeDef,\n  PartitionRequest\n> = z.object({\n  partitionParameters: shared.PartitionParameters$outboundSchema,\n  unstructuredApiKey: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    partitionParameters: \"partition_parameters\",\n    unstructuredApiKey: \"unstructured-api-key\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace PartitionRequest$ {\n  /** @deprecated use `PartitionRequest$inboundSchema` instead. */\n  export const inboundSchema = PartitionRequest$inboundSchema;\n  /** @deprecated use `PartitionRequest$outboundSchema` instead. */\n  export const outboundSchema = PartitionRequest$outboundSchema;\n  /** @deprecated use `PartitionRequest$Outbound` instead. */\n  export type Outbound = PartitionRequest$Outbound;\n}\n\n/** @internal */\nexport const PartitionResponse$inboundSchema: z.ZodType<\n  PartitionResponse,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  ContentType: z.string(),\n  Elements: z.array(z.record(z.any())).optional(),\n  StatusCode: z.number().int(),\n  RawResponse: z.instanceof(Response),\n}).transform((v) => {\n  return remap$(v, {\n    \"ContentType\": \"contentType\",\n    \"Elements\": \"elements\",\n    \"StatusCode\": \"statusCode\",\n    \"RawResponse\": \"rawResponse\",\n  });\n});\n\n/** @internal */\nexport type PartitionResponse$Outbound = {\n  ContentType: string;\n  Elements?: Array<{ [k: string]: any }> | undefined;\n  StatusCode: number;\n  RawResponse: never;\n};\n\n/** @internal */\nexport const PartitionResponse$outboundSchema: z.ZodType<\n  PartitionResponse$Outbound,\n  z.ZodTypeDef,\n  PartitionResponse\n> = z.object({\n  contentType: z.string(),\n  elements: z.array(z.record(z.any())).optional(),\n  statusCode: z.number().int(),\n  rawResponse: z.instanceof(Response).transform(() => {\n    throw new Error(\"Response cannot be serialized\");\n  }),\n}).transform((v) => {\n  return remap$(v, {\n    contentType: \"ContentType\",\n    elements: \"Elements\",\n    statusCode: \"StatusCode\",\n    rawResponse: \"RawResponse\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace PartitionResponse$ {\n  /** @deprecated use `PartitionResponse$inboundSchema` instead. */\n  export const inboundSchema = PartitionResponse$inboundSchema;\n  /** @deprecated use `PartitionResponse$outboundSchema` instead. */\n  export const outboundSchema = PartitionResponse$outboundSchema;\n  /** @deprecated use `PartitionResponse$Outbound` instead. */\n  export type Outbound = PartitionResponse$Outbound;\n}\n"],"names":[],"mappings":";AAAA;;GAEG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,MAAA,IAAA,6BAAyB;AACzB,MAAA,wDAA6D;AAC7D,MAAA,SAAA,4CAA6C;AA0B7C,cAAA,EAAgB,CACH,QAAA,8BAA8B,GAIvC,CAAC,CAAC,MAAM,CAAC;IACX,oBAAoB,EAAE,MAAM,CAAC,iCAAiC;IAC9D,sBAAsB,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;CAC1D,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,OAAO,CAAA,GAAA,gBAAA,KAAM,EAAC,CAAC,EAAE;QACf,sBAAsB,EAAE,qBAAqB;QAC7C,sBAAsB,EAAE,oBAAoB;KAC7C,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAQH,cAAA,EAAgB,CACH,QAAA,+BAA+B,GAIxC,CAAC,CAAC,MAAM,CAAC;IACX,mBAAmB,EAAE,MAAM,CAAC,kCAAkC;IAC9D,kBAAkB,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;CACtD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,OAAO,CAAA,GAAA,gBAAA,KAAM,EAAC,CAAC,EAAE;QACf,mBAAmB,EAAE,sBAAsB;QAC3C,kBAAkB,EAAE,sBAAsB;KAC3C,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH;;;GAGG,CACH,IAAiB,iBAAiB,CAOjC;AAPD,CAAA,SAAiB,iBAAiB;IAChC,8DAAA,EAAgE,CACnD,kBAAA,aAAa,GAAG,QAAA,8BAA8B,CAAC;IAC5D,+DAAA,EAAiE,CACpD,kBAAA,cAAc,GAAG,QAAA,+BAA+B,CAAC;AAGhE,CAAC,EAPgB,iBAAiB,IAAA,CAAA,QAAA,iBAAA,GAAjB,iBAAiB,GAAA,CAAA,CAAA,GAOjC;AAED,cAAA,EAAgB,CACH,QAAA,+BAA+B,GAIxC,CAAC,CAAC,MAAM,CAAC;IACX,WAAW,EAAE,CAAC,CAAC,MAAM,EAAE;IACvB,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE;IAC/C,UAAU,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC5B,WAAW,EAAE,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC;CACpC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,OAAO,CAAA,GAAA,gBAAA,KAAM,EAAC,CAAC,EAAE;QACf,aAAa,EAAE,aAAa;QAC5B,UAAU,EAAE,UAAU;QACtB,YAAY,EAAE,YAAY;QAC1B,aAAa,EAAE,aAAa;KAC7B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAUH,cAAA,EAAgB,CACH,QAAA,gCAAgC,GAIzC,CAAC,CAAC,MAAM,CAAC;IACX,WAAW,EAAE,CAAC,CAAC,MAAM,EAAE;IACvB,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE;IAC/C,UAAU,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC5B,WAAW,EAAE,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;QACjD,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;IACnD,CAAC,CAAC;CACH,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,OAAO,CAAA,GAAA,gBAAA,KAAM,EAAC,CAAC,EAAE;QACf,WAAW,EAAE,aAAa;QAC1B,QAAQ,EAAE,UAAU;QACpB,UAAU,EAAE,YAAY;QACxB,WAAW,EAAE,aAAa;KAC3B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH;;;GAGG,CACH,IAAiB,kBAAkB,CAOlC;AAPD,CAAA,SAAiB,kBAAkB;IACjC,+DAAA,EAAiE,CACpD,mBAAA,aAAa,GAAG,QAAA,+BAA+B,CAAC;IAC7D,gEAAA,EAAkE,CACrD,mBAAA,cAAc,GAAG,QAAA,gCAAgC,CAAC;AAGjE,CAAC,EAPgB,kBAAkB,IAAA,CAAA,QAAA,kBAAA,GAAlB,kBAAkB,GAAA,CAAA,CAAA,GAOlC","ignoreList":[0]}},
    {"offset": {"line": 3832, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3837, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/sdk/models/operations/index.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nexport * from \"./partition.js\";\n"],"names":[],"mappings":";AAAA;;GAEG;;;;;;;;;;;;;;;;;;;;;;AAEH,4IAAA,SAA+B","ignoreList":[0]}},
    {"offset": {"line": 3863, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3868, "column": 0}, "map": {"version":3,"file":"streams.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/sdk/types/streams.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nexport function isReadableStream<T = Uint8Array>(\n  val: unknown,\n): val is ReadableStream<T> {\n  if (typeof val !== \"object\" || val === null) {\n    return false;\n  }\n\n  // Check for the presence of methods specific to ReadableStream\n  const stream = val as ReadableStream<Uint8Array>;\n\n  // ReadableStream has methods like getReader, cancel, and tee\n  return (\n    typeof stream.getReader === \"function\" &&\n    typeof stream.cancel === \"function\" &&\n    typeof stream.tee === \"function\"\n  );\n}\n"],"names":[],"mappings":";AAAA;;GAEG;;;;AAEH,SAAgB,gBAAgB,CAC9B,GAAY;IAEZ,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,KAAK,IAAI,EAAE,CAAC;QAC5C,OAAO,KAAK,CAAC;IACf,CAAC;IAED,+DAA+D;IAC/D,MAAM,MAAM,GAAG,GAAiC,CAAC;IAEjD,6DAA6D;IAC7D,OAAO,AACL,OAAO,MAAM,CAAC,SAAS,KAAK,UAAU,IACtC,OAAO,MAAM,CAAC,MAAM,KAAK,UAAU,IACnC,OAAO,MAAM,CAAC,GAAG,KAAK,UAAU,CACjC,CAAC;AACJ,CAAC;AAhBD,QAAA,gBAAA,GAAA,iBAgBC","ignoreList":[0]}},
    {"offset": {"line": 3885, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3890, "column": 0}, "map": {"version":3,"file":"generalPartition.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/funcs/generalPartition.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport { UnstructuredClientCore } from \"../core.js\";\nimport { encodeSimple } from \"../lib/encodings.js\";\nimport { readableStreamToArrayBuffer } from \"../lib/files.js\";\nimport * as M from \"../lib/matchers.js\";\nimport { safeParse } from \"../lib/schemas.js\";\nimport { RequestOptions } from \"../lib/sdks.js\";\nimport { extractSecurity, resolveGlobalSecurity } from \"../lib/security.js\";\nimport { pathToFunc } from \"../lib/url.js\";\nimport {\n  ConnectionError,\n  InvalidRequestError,\n  RequestAbortedError,\n  RequestTimeoutError,\n  UnexpectedClientError,\n} from \"../sdk/models/errors/httpclienterrors.js\";\nimport * as errors from \"../sdk/models/errors/index.js\";\nimport { SDKError } from \"../sdk/models/errors/sdkerror.js\";\nimport { SDKValidationError } from \"../sdk/models/errors/sdkvalidationerror.js\";\nimport * as operations from \"../sdk/models/operations/index.js\";\nimport { isBlobLike } from \"../sdk/types/blobs.js\";\nimport { Result } from \"../sdk/types/fp.js\";\nimport { isReadableStream } from \"../sdk/types/streams.js\";\n\n/**\n * Summary\n *\n * @remarks\n * Description\n */\nexport async function generalPartition(\n  client: UnstructuredClientCore,\n  request: operations.PartitionRequest,\n  options?: RequestOptions,\n): Promise<\n  Result<\n    operations.PartitionResponse,\n    | errors.HTTPValidationError\n    | errors.ServerError\n    | SDKError\n    | SDKValidationError\n    | UnexpectedClientError\n    | InvalidRequestError\n    | RequestAbortedError\n    | RequestTimeoutError\n    | ConnectionError\n  >\n> {\n  const parsed = safeParse(\n    request,\n    (value) => operations.PartitionRequest$outboundSchema.parse(value),\n    \"Input validation failed\",\n  );\n  if (!parsed.ok) {\n    return parsed;\n  }\n  const payload = parsed.value;\n  const body = new FormData();\n\n  if (isBlobLike(payload.partition_parameters.files)) {\n    body.append(\"files\", payload.partition_parameters.files);\n  } else if (isReadableStream(payload.partition_parameters.files.content)) {\n    const buffer = await readableStreamToArrayBuffer(\n      payload.partition_parameters.files.content,\n    );\n    const blob = new Blob([buffer], { type: \"application/octet-stream\" });\n    body.append(\"files\", blob);\n  } else {\n    body.append(\n      \"files\",\n      new Blob([payload.partition_parameters.files.content], {\n        type: \"application/octet-stream\",\n      }),\n      payload.partition_parameters.files.fileName,\n    );\n  }\n  if (payload.partition_parameters.chunking_strategy !== undefined) {\n    body.append(\n      \"chunking_strategy\",\n      String(payload.partition_parameters.chunking_strategy),\n    );\n  }\n  if (payload.partition_parameters.combine_under_n_chars !== undefined) {\n    body.append(\n      \"combine_under_n_chars\",\n      String(payload.partition_parameters.combine_under_n_chars),\n    );\n  }\n  if (payload.partition_parameters.content_type !== undefined) {\n    body.append(\n      \"content_type\",\n      String(payload.partition_parameters.content_type),\n    );\n  }\n  if (payload.partition_parameters.coordinates !== undefined) {\n    body.append(\n      \"coordinates\",\n      String(payload.partition_parameters.coordinates),\n    );\n  }\n  if (payload.partition_parameters.encoding !== undefined) {\n    body.append(\"encoding\", String(payload.partition_parameters.encoding));\n  }\n  if (payload.partition_parameters.extract_image_block_types !== undefined) {\n    body.append(\n      \"extract_image_block_types\",\n      String(payload.partition_parameters.extract_image_block_types),\n    );\n  }\n  if (payload.partition_parameters.gz_uncompressed_content_type !== undefined) {\n    body.append(\n      \"gz_uncompressed_content_type\",\n      String(payload.partition_parameters.gz_uncompressed_content_type),\n    );\n  }\n  if (payload.partition_parameters.hi_res_model_name !== undefined) {\n    body.append(\n      \"hi_res_model_name\",\n      String(payload.partition_parameters.hi_res_model_name),\n    );\n  }\n  if (payload.partition_parameters.include_orig_elements !== undefined) {\n    body.append(\n      \"include_orig_elements\",\n      String(payload.partition_parameters.include_orig_elements),\n    );\n  }\n  if (payload.partition_parameters.include_page_breaks !== undefined) {\n    body.append(\n      \"include_page_breaks\",\n      String(payload.partition_parameters.include_page_breaks),\n    );\n  }\n  if (payload.partition_parameters.include_slide_notes !== undefined) {\n    body.append(\n      \"include_slide_notes\",\n      String(payload.partition_parameters.include_slide_notes),\n    );\n  }\n  if (payload.partition_parameters.languages !== undefined) {\n    body.append(\"languages\", String(payload.partition_parameters.languages));\n  }\n  if (payload.partition_parameters.max_characters !== undefined) {\n    body.append(\n      \"max_characters\",\n      String(payload.partition_parameters.max_characters),\n    );\n  }\n  if (payload.partition_parameters.multipage_sections !== undefined) {\n    body.append(\n      \"multipage_sections\",\n      String(payload.partition_parameters.multipage_sections),\n    );\n  }\n  if (payload.partition_parameters.new_after_n_chars !== undefined) {\n    body.append(\n      \"new_after_n_chars\",\n      String(payload.partition_parameters.new_after_n_chars),\n    );\n  }\n  if (payload.partition_parameters.ocr_languages !== undefined) {\n    body.append(\n      \"ocr_languages\",\n      String(payload.partition_parameters.ocr_languages),\n    );\n  }\n  if (payload.partition_parameters.output_format !== undefined) {\n    body.append(\"output_format\", payload.partition_parameters.output_format);\n  }\n  if (payload.partition_parameters.overlap !== undefined) {\n    body.append(\"overlap\", String(payload.partition_parameters.overlap));\n  }\n  if (payload.partition_parameters.overlap_all !== undefined) {\n    body.append(\n      \"overlap_all\",\n      String(payload.partition_parameters.overlap_all),\n    );\n  }\n  if (payload.partition_parameters.pdf_infer_table_structure !== undefined) {\n    body.append(\n      \"pdf_infer_table_structure\",\n      String(payload.partition_parameters.pdf_infer_table_structure),\n    );\n  }\n  if (payload.partition_parameters.similarity_threshold !== undefined) {\n    body.append(\n      \"similarity_threshold\",\n      String(payload.partition_parameters.similarity_threshold),\n    );\n  }\n  if (payload.partition_parameters.skip_infer_table_types !== undefined) {\n    body.append(\n      \"skip_infer_table_types\",\n      String(payload.partition_parameters.skip_infer_table_types),\n    );\n  }\n  if (payload.partition_parameters.split_pdf_allow_failed !== undefined) {\n    body.append(\n      \"split_pdf_allow_failed\",\n      String(payload.partition_parameters.split_pdf_allow_failed),\n    );\n  }\n  if (payload.partition_parameters.split_pdf_concurrency_level !== undefined) {\n    body.append(\n      \"split_pdf_concurrency_level\",\n      String(payload.partition_parameters.split_pdf_concurrency_level),\n    );\n  }\n  if (payload.partition_parameters.split_pdf_page !== undefined) {\n    body.append(\n      \"split_pdf_page\",\n      String(payload.partition_parameters.split_pdf_page),\n    );\n  }\n  if (payload.partition_parameters.split_pdf_page_range !== undefined) {\n    body.append(\n      \"split_pdf_page_range\",\n      String(payload.partition_parameters.split_pdf_page_range),\n    );\n  }\n  if (payload.partition_parameters.starting_page_number !== undefined) {\n    body.append(\n      \"starting_page_number\",\n      String(payload.partition_parameters.starting_page_number),\n    );\n  }\n  if (payload.partition_parameters.strategy !== undefined) {\n    body.append(\"strategy\", payload.partition_parameters.strategy);\n  }\n  if (payload.partition_parameters.unique_element_ids !== undefined) {\n    body.append(\n      \"unique_element_ids\",\n      String(payload.partition_parameters.unique_element_ids),\n    );\n  }\n  if (payload.partition_parameters.xml_keep_tags !== undefined) {\n    body.append(\n      \"xml_keep_tags\",\n      String(payload.partition_parameters.xml_keep_tags),\n    );\n  }\n\n  const path = pathToFunc(\"/general/v0/general\")();\n\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"unstructured-api-key\": encodeSimple(\n      \"unstructured-api-key\",\n      payload[\"unstructured-api-key\"],\n      { explode: false, charEncoding: \"none\" },\n    ),\n  });\n\n  const securityInput = await extractSecurity(client._options.security);\n  const context = {\n    operationID: \"partition\",\n    oAuth2Scopes: [],\n    securitySource: client._options.security,\n  };\n  const requestSecurity = resolveGlobalSecurity(securityInput);\n\n  const requestRes = client._createRequest(context, {\n    security: requestSecurity,\n    method: \"POST\",\n    path: path,\n    headers: headers,\n    body: body,\n    timeoutMs: options?.timeoutMs || client._options.timeoutMs || -1,\n  }, options);\n  if (!requestRes.ok) {\n    return requestRes;\n  }\n  const req = requestRes.value;\n\n  const doResult = await client._do(req, {\n    context,\n    errorCodes: [\"422\", \"4XX\", \"5XX\"],\n    retryConfig: options?.retries\n      || client._options.retryConfig\n      || {\n        strategy: \"backoff\",\n        backoff: {\n          initialInterval: 3000,\n          maxInterval: 720000,\n          exponent: 1.88,\n          maxElapsedTime: 1800000,\n        },\n        retryConnectionErrors: true,\n      },\n    retryCodes: options?.retryCodes || [\"502\", \"503\", \"504\"],\n  });\n  if (!doResult.ok) {\n    return doResult;\n  }\n  const response = doResult.value;\n\n  const responseFields = {\n    ContentType: response.headers.get(\"content-type\")\n      ?? \"application/octet-stream\",\n    StatusCode: response.status,\n    RawResponse: response,\n    Headers: {},\n  };\n\n  const [result] = await M.match<\n    operations.PartitionResponse,\n    | errors.HTTPValidationError\n    | errors.ServerError\n    | SDKError\n    | SDKValidationError\n    | UnexpectedClientError\n    | InvalidRequestError\n    | RequestAbortedError\n    | RequestTimeoutError\n    | ConnectionError\n  >(\n    M.json(200, operations.PartitionResponse$inboundSchema, {\n      key: \"Elements\",\n    }),\n    M.jsonErr(422, errors.HTTPValidationError$inboundSchema),\n    M.fail(\"4XX\"),\n    M.jsonErr(\"5XX\", errors.ServerError$inboundSchema),\n  )(response, { extraFields: responseFields });\n  if (!result.ok) {\n    return result;\n  }\n\n  return result;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4131, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4136, "column": 0}, "map": {"version":3,"file":"general.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/sdk/general.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport { generalPartition } from \"../funcs/generalPartition.js\";\nimport { ClientSDK, RequestOptions } from \"../lib/sdks.js\";\nimport * as operations from \"./models/operations/index.js\";\nimport { unwrapAsync } from \"./types/fp.js\";\n\nexport class General extends ClientSDK {\n  /**\n   * Summary\n   *\n   * @remarks\n   * Description\n   */\n  async partition(\n    request: operations.PartitionRequest,\n    options?: RequestOptions,\n  ): Promise<operations.PartitionResponse> {\n    return unwrapAsync(generalPartition(\n      this,\n      request,\n      options,\n    ));\n  }\n}\n"],"names":[],"mappings":";AAAA;;GAEG;;;;AAEH,MAAA,gEAAgE;AAChE,MAAA,sCAA2D;AAE3D,MAAA,mCAA4C;AAE5C,MAAa,OAAQ,SAAQ,UAAA,SAAS;IACpC;;;;;OAKG,CACH,KAAK,CAAC,SAAS,CACb,OAAoC,EACpC,OAAwB,EAAA;QAExB,OAAO,CAAA,GAAA,QAAA,WAAW,EAAC,CAAA,GAAA,sBAAA,gBAAgB,EACjC,IAAI,EACJ,OAAO,EACP,OAAO,CACR,CAAC,CAAC;IACL,CAAC;CACF;AAjBD,QAAA,OAAA,GAAA,QAiBC","ignoreList":[0]}},
    {"offset": {"line": 4157, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4162, "column": 0}, "map": {"version":3,"file":"sdk.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/sdk/sdk.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport { ClientSDK } from \"../lib/sdks.js\";\nimport { General } from \"./general.js\";\n\nexport class UnstructuredClient extends ClientSDK {\n  private _general?: General;\n  get general(): General {\n    return (this._general ??= new General(this._options));\n  }\n}\n"],"names":[],"mappings":";AAAA;;GAEG;;;;AAEH,MAAA,sCAA2C;AAC3C,MAAA,uCAAuC;AAEvC,MAAa,kBAAmB,SAAQ,UAAA,SAAS;IAE/C,IAAI,OAAO,GAAA;;QACT,OAAO,CAAA,KAAC,IAAI,CAAC,QAAQ,MAAA,QAAA,OAAA,KAAA,IAAA,KAAb,IAAI,CAAC,QAAQ,GAAK,IAAI,aAAA,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAC,CAAC;IACxD,CAAC;CACF;AALD,QAAA,kBAAA,GAAA,mBAKC","ignoreList":[0]}},
    {"offset": {"line": 4178, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4183, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file://D%3A/Prana/prana_client/node_modules/unstructured-client/src/index.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nexport * from \"./lib/config.js\";\nexport * as files from \"./lib/files.js\";\nexport * from \"./sdk/sdk.js\";\n"],"names":[],"mappings":";AAAA;;GAEG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,uHAAA,SAAgC;AAChC,QAAA,KAAA,GAAA,wCAAwC;AACxC,oHAAA,SAA6B","ignoreList":[0]}},
    {"offset": {"line": 4229, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}